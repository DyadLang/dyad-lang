// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test documenter functionality Test Documenter functionality on Dyad root module 1`] = `
{
  ".gitignore": "/Manifest.toml
/build",
  "Project.toml": "[deps]
Documenter = "e30172f5-a6a5-5a46-863b-614d45cd2de4"
CSV = "336ed68f-0bac-5ca0-87d4-7b16caf5d00b"
DataFrames = "a93c6f00-e57d-5684-b7b6-d8193f3e46c0"
DyadEcosystemDependencies = "7bc808db-8006-421e-b546-062440d520b7"
Latexify = "23fbe1c1-3f47-55db-b15f-69d7ec21a316"
ModelingToolkit = "961ee093-0014-501f-94e3-6117800e7a78"
OrdinaryDiffEqDefault = "50262376-6c5a-4cf5-baba-aaf4f84d72d7"
Plots = "91a5bcdd-55d7-5caf-9e0b-520d859cae80"

[sources]
Dyad = { path = ".." }",
  "make.jl": "using Documenter
using Dyad

include("pages.jl")

makedocs(
    modules=[Dyad],
    sitename="Dyad",
    remotes=nothing,
    warnonly=[:cross_references, :example_block, :missing_docs],
    pages=pages
)",
  "pages.jl": "pages = [
   "Dyad" => "index.md",
   "Types" => Any[
     "Scalar Types" => Any["types/AbsoluteActivity.md", "types/AbsolutePressure.md", "types/AbsorbedDose.md", "types/AbsorbedDoseRate.md", "types/Acceleration.md", "types/AcceptorIonizationEnergy.md", "types/AcceptorNumberDensity.md", "types/AcousticAbsorptionCoefficient.md", "types/AcousticImpedance.md", "types/ActivePower.md", "types/Activity.md", "types/ActivityCoefficient.md", "types/ActivityCoefficientOfSolute.md", "types/ActivityOfSolute.md", "types/ActivityOfSolvent.md", "types/Admittance.md", "types/Affinity.md", "types/AlfvenNumber.md", "types/AlphaDisintegrationEnergy.md", "types/AmountOfSubstance.md", "types/AmplitudeLevelDifference.md", "types/Angle.md", "types/AngularAcceleration.md", "types/AngularCrossSection.md", "types/AngularFrequency.md", "types/AngularImpulse.md", "types/AngularMomentum.md", "types/AngularMomentumFlux.md", "types/AngularVelocity.md", "types/AngularWaveNumber.md", "types/ApparentPower.md", "types/Area.md", "types/AtomicAttenuationCoefficient.md", "types/AtomicMassConstant.md", "types/AttenuationCoefficient.md", "types/BetaDisintegrationEnergy.md", "types/BindingFraction.md", "types/BiotNumber.md", "types/BohrMagneton.md", "types/BraggAngle.md", "types/Breadth.md", "types/BulkModulus.md", "types/CIESpectralTristimulusValues.md", "types/CanonicalPartitionFunction.md", "types/Capacitance.md", "types/CarrierLifeTime.md", "types/Charge.md", "types/ChargeNumberOfIon.md", "types/ChemicalPotential.md", "types/ChromaticityCoordinates.md", "types/CircularWaveNumber.md", "types/CoefficientOfFriction.md", "types/CoefficientOfHeatTransfer.md", "types/CoherenceLength.md", "types/Compressibility.md", "types/ComptonWavelength.md", "types/Concentration.md", "types/Conductance.md", "types/Conductivity.md", "types/CouplingCoefficient.md", "types/CowlingNumber.md", "types/CrossSection.md", "types/CubicExpansionCoefficient.md", "types/CurieTemperature.md", "types/Current.md", "types/CurrentDensity.md", "types/CurrentDensityOfParticles.md", "types/CurrentLinkage.md", "types/CurrentSlope.md", "types/CyclotronAngularFrequency.md", "types/Damping.md", "types/DampingCoefficient.md", "types/DebyeCircularFrequency.md", "types/DebyeCircularWaveNumber.md", "types/DebyeTemperature.md", "types/DebyeWallerFactor.md", "types/DecayConstant.md", "types/DegreeOfDissociation.md", "types/Density.md", "types/DensityOfHeatFlowRate.md", "types/DensityOfStates.md", "types/DerDensityByEnthalpy.md", "types/DerDensityByPressure.md", "types/DerDensityByTemperature.md", "types/DerEnergyByDensity.md", "types/DerEnergyByPressure.md", "types/DerEnthalpyByPressure.md", "types/Diameter.md", "types/DiffusionArea.md", "types/DiffusionCoefficient.md", "types/DiffusionLength.md", "types/DirectionalSpectralEmissivity.md", "types/DissipationCoefficient.md", "types/Distance.md", "types/DonorIonizationEnergy.md", "types/DonorNumberDensity.md", "types/DoseEquivalent.md", "types/Duration.md", "types/DynamicViscosity.md", "types/EffectiveMass.md", "types/Efficiency.md", "types/ElectricCharge.md", "types/ElectricCurrent.md", "types/ElectricDipoleMoment.md", "types/ElectricDipoleMomentOfMolecule.md", "types/ElectricFieldStrength.md", "types/ElectricFlux.md", "types/ElectricFluxDensity.md", "types/ElectricPolarizabilityOfAMolecule.md", "types/ElectricPolarization.md", "types/ElectricPotential.md", "types/ElectricSusceptibility.md", "types/ElectricalForceConstant.md", "types/ElectricalTorqueConstant.md", "types/Electrization.md", "types/ElectrolyticConductivity.md", "types/ElectromagneticEnergyDensity.md", "types/ElectromagneticMoment.md", "types/ElectromotiveForce.md", "types/ElectronNumberDensity.md", "types/ElectronRadius.md", "types/ElementaryCharge.md", "types/Emissivity.md", "types/Energy.md", "types/EnergyDensity.md", "types/EnergyFlowRate.md", "types/EnergyFluence.md", "types/EnergyFluenceRate.md", "types/EnergyImparted.md", "types/Enthalpy.md", "types/EnthalpyFlowRate.md", "types/Entropy.md", "types/EntropyFlowRate.md", "types/EquivalentAbsorptionArea.md", "types/EulerNumber.md", "types/ExchangeIntegral.md", "types/Exposure.md", "types/ExposureRate.md", "types/FaradayConstant.md", "types/FastFissionFactor.md", "types/FermiCircularWaveNumber.md", "types/FermiEnergy.md", "types/FermiTemperature.md", "types/FluxiodQuantum.md", "types/Force.md", "types/FourierNumber.md", "types/FourierNumberOfMassTransfer.md", "types/Frequency.md", "types/FroudeNumber.md", "types/Fugacity.md", "types/GFactorOfAtom.md", "types/GFactorOfNucleus.md", "types/GapEnergy.md", "types/GibbsFreeEnergy.md", "types/GrandCanonicalPartitionFunction.md", "types/GrashofNumber.md", "types/GrashofNumberOfMassTransfer.md", "types/GrueneisenParameter.md", "types/GyromagneticCoefficient.md", "types/HalfLife.md", "types/HalfThickness.md", "types/HallCoefficient.md", "types/HartmannNumber.md", "types/HartreeEnergy.md", "types/Heat.md", "types/HeatCapacity.md", "types/HeatFlowRate.md", "types/HeatFlux.md", "types/Height.md", "types/HelmholtzFreeEnergy.md", "types/HoleNumberDensity.md", "types/Illuminance.md", "types/Impedance.md", "types/Impulse.md", "types/Inductance.md", "types/Inertia.md", "types/InstantaneousPower.md", "types/InternalEnergy.md", "types/IntrinsicNumberDensity.md", "types/InversePotential.md", "types/IonNumberDensity.md", "types/IonicStrength.md", "types/Irradiance.md", "types/IsentropicCompressibility.md", "types/IsentropicExponent.md", "types/IsothermalCompressibility.md", "types/Kerma.md", "types/KermaRate.md", "types/KinematicViscosity.md", "types/KineticEnergy.md", "types/KnudsenNumber.md", "types/LandauGinzburgParameter.md", "types/LarmorAngularFrequency.md", "types/LeakageCoefficient.md", "types/Length.md", "types/Lethargy.md", "types/LevelWidth.md", "types/LewisNumber.md", "types/LightExposure.md", "types/LinearAbsorptionCoefficient.md", "types/LinearAttenuationCoefficient.md", "types/LinearCurrentDensity.md", "types/LinearDensity.md", "types/LinearEnergyTransfer.md", "types/LinearExpansionCoefficient.md", "types/LinearIonization.md", "types/LinearStrain.md", "types/LinearTemperatureCoefficient.md", "types/LogarithmicDecrement.md", "types/LondonPenetrationDepth.md", "types/LongRangeOrderParameter.md", "types/LorenzCoefficient.md", "types/LossAngle.md", "types/Loundness.md", "types/LoundnessLevel.md", "types/Luminance.md", "types/LuminousEfficacy.md", "types/LuminousEfficiency.md", "types/LuminousExitance.md", "types/LuminousFlux.md", "types/LuminousIntensity.md", "types/MachNumber.md", "types/MacroscopicCrossSection.md", "types/MadelungConstant.md", "types/MagneticDipoleMoment.md", "types/MagneticFieldStrength.md", "types/MagneticFlux.md", "types/MagneticFluxDensity.md", "types/MagneticMomentOfParticle.md", "types/MagneticPolarization.md", "types/MagneticPotential.md", "types/MagneticPotentialDifference.md", "types/MagneticReynoldsNumber.md", "types/MagneticSusceptibility.md", "types/MagneticVectorPotential.md", "types/Magnetization.md", "types/MagnetomotiveForce.md", "types/Mass.md", "types/MassAttenuationCoefficient.md", "types/MassConcentration.md", "types/MassDefect.md", "types/MassEnergyTransferCoefficient.md", "types/MassExcess.md", "types/MassFlowRate.md", "types/MassFraction.md", "types/MassOfElectron.md", "types/MassOfMolecule.md", "types/MassOfNeutron.md", "types/MassOfProton.md", "types/MassieuFunction.md", "types/MaximumBetaParticleEnergy.md", "types/MeanEnergyImparted.md", "types/MeanFreePath.md", "types/MeanLife.md", "types/MeanLinearRange.md", "types/MeanMassRange.md", "types/MechanicalImpedance.md", "types/MicrocanonicalPartitionFunction.md", "types/MigrationArea.md", "types/MigrationLength.md", "types/Mobility.md", "types/MobilityRatio.md", "types/ModulusOfAdmittance.md", "types/ModulusOfElasticity.md", "types/ModulusOfImpedance.md", "types/MolarAbsorptionCoefficient.md", "types/MolarAttenuationCoefficient.md", "types/MolarConductivity.md", "types/MolarEntropy.md", "types/MolarFlowRate.md", "types/MolarHeatCapacity.md", "types/MolarInternalEnergy.md", "types/MolarMass.md", "types/MolarVolume.md", "types/MoleFraction.md", "types/MolecularConcentration.md", "types/MolecularPartitionFunction.md", "types/MomentOfForce.md", "types/MomentOfInertia.md", "types/Momentum.md", "types/MomentumFlux.md", "types/MutualInductance.md", "types/NeelTemperature.md", "types/NeutronFluenceRate.md", "types/NeutronNumber.md", "types/NeutronNumberDensity.md", "types/NeutronSpeed.md", "types/NeutronYieldPerAbsorption.md", "types/NeutronYieldPerFission.md", "types/NonLeakageProbability.md", "types/NormalStress.md", "types/NuclearMagneton.md", "types/NuclearPrecessionAngularFrequency.md", "types/NuclearQuadrupoleMoment.md", "types/NuclearRadius.md", "types/NucleonNumber.md", "types/NumberDensityOfMolecules.md", "types/NumberOfMolecules.md", "types/NusseltNumber.md", "types/NusseltNumberOfMassTransfer.md", "types/OrderOfReflexion.md", "types/OsmoticCoefficientOfSolvent.md", "types/OsmoticPressure.md", "types/PackingFraction.md", "types/PartialPressure.md", "types/ParticleFluence.md", "types/ParticleFluenceRate.md", "types/PathLength.md", "types/PecletNumber.md", "types/PecletNumberOfMassTransfer.md", "types/PeltierCoefficient.md", "types/Period.md", "types/Permeability.md", "types/PermeabilityOfVacuum.md", "types/Permeance.md", "types/Permittivity.md", "types/PermittivityOfVacuum.md", "types/PhaseCoefficient.md", "types/PhaseDifference.md", "types/PlanckFunction.md", "types/PoissonNumber.md", "types/Position.md", "types/PotentialDifference.md", "types/PotentialEnergy.md", "types/Power.md", "types/PowerFactor.md", "types/PowerLevelDifference.md", "types/PoyntingVector.md", "types/PrandtlNumber.md", "types/Pressure.md", "types/PressureCoefficient.md", "types/PropagationCoefficient.md", "types/ProtonNumber.md", "types/QuadraticTemperatureCoefficient.md", "types/QualityFactor.md", "types/QuantityOfLight.md", "types/Radiance.md", "types/RadiantEnergy.md", "types/RadiantEnergyDensity.md", "types/RadiantEnergyFluenceRate.md", "types/RadiantExtiance.md", "types/RadiantIntensity.md", "types/RadiantPower.md", "types/Radius.md", "types/RatioOfSpecificHeatCapacities.md", "types/RayleighNumber.md", "types/Reactance.md", "types/ReactionEnergy.md", "types/ReactivePower.md", "types/Reactivity.md", "types/ReactorTimeConstant.md", "types/RecombinationCoefficient.md", "types/ReflectionCoefficient.md", "types/RefractiveIndex.md", "types/RelativeAtomicMass.md", "types/RelativeDensity.md", "types/RelativeMassDefect.md", "types/RelativeMassExcess.md", "types/RelativeMolecularMass.md", "types/RelativePermeability.md", "types/RelativePermittivity.md", "types/RelativePressureCoefficient.md", "types/RelaxationTime.md", "types/Reluctance.md", "types/ResidualResistivity.md", "types/Resistance.md", "types/Resistivity.md", "types/ResonanceEnergy.md", "types/ResonanceEscapeProbability.md", "types/ReverberationTime.md", "types/ReynoldsNumber.md", "types/RichardsonConstant.md", "types/RotationalDampingConstant.md", "types/RotationalSpringConstant.md", "types/SchmidtNumber.md", "types/SecondMomentOfArea.md", "types/SecondPolarMomentOfArea.md", "types/SectionModulus.md", "types/SeebeckCoefficient.md", "types/SelfInductance.md", "types/ShearModulus.md", "types/ShearStrain.md", "types/ShearStress.md", "types/ShortRangeOrderParameter.md", "types/SlowingDownArea.md", "types/SlowingDownDensity.md", "types/SlowingDownLength.md", "types/SolidAngle.md", "types/SoundEnergyDensity.md", "types/SoundIntensity.md", "types/SoundParticleAcceleration.md", "types/SoundParticleDisplacement.md", "types/SoundParticleVelocity.md", "types/SoundPower.md", "types/SoundPowerLevel.md", "types/SoundPressure.md", "types/SoundPressureLevel.md", "types/SoundReductionIndex.md", "types/SpecificAcousticImpedance.md", "types/SpecificActivity.md", "types/SpecificEnergy.md", "types/SpecificEnergyImparted.md", "types/SpecificEnthalpy.md", "types/SpecificEntropy.md", "types/SpecificGibbsFreeEnergy.md", "types/SpecificHeatCapacity.md", "types/SpecificHeatCapacityAtConstantPressure.md", "types/SpecificHeatCapacityAtConstantVolume.md", "types/SpecificHeatCapacityAtSaturation.md", "types/SpecificHelmholtzFreeEnergy.md", "types/SpecificInternalEnergy.md", "types/SpecificVolume.md", "types/SpectralAbsorptionFactor.md", "types/SpectralAngularCrossSection.md", "types/SpectralConcentration.md", "types/SpectralCrossSection.md", "types/SpectralEmissivity.md", "types/SpectralLuminousEfficacy.md", "types/SpectralLuminousEfficiency.md", "types/SpectralRadianceFactor.md", "types/SpectralRadiantEnergyDensity.md", "types/SpectralReflectionFactor.md", "types/SpectralTransmissionFactor.md", "types/StandardAbsoluteActivity.md", "types/StandardAbsoluteActivityOfSolute.md", "types/StandardAbsoluteActivityOfSolvent.md", "types/StantonNumber.md", "types/StantonNumberOfMassTransfer.md", "types/StaticPressure.md", "types/StatisticalWeight.md", "types/StoichiometricNumber.md", "types/Strain.md", "types/Stress.md", "types/StrouhalNumber.md", "types/SurfaceCoefficientOfHeatTransfer.md", "types/SurfaceDensity.md", "types/SurfaceDensityOfCharge.md", "types/SurfaceTension.md", "types/Susceptance.md", "types/Temp_K.md", "types/Temperature.md", "types/TemperatureDifference.md", "types/TemperatureSlope.md", "types/ThermalConductance.md", "types/ThermalConductivity.md", "types/ThermalDiffusionCoefficient.md", "types/ThermalDiffusionFactor.md", "types/ThermalDiffusionRatio.md", "types/ThermalDiffusivity.md", "types/ThermalInsulance.md", "types/ThermalResistance.md", "types/ThermalUtilizationFactor.md", "types/ThermodynamicTemperature.md", "types/ThermoelectromotiveForce.md", "types/Thickness.md", "types/ThomsonCoefficient.md", "types/Time.md", "types/Torque.md", "types/TotalAtomicStoppingPower.md", "types/TotalCrossSection.md", "types/TotalIonization.md", "types/TotalLinearStoppingPower.md", "types/TotalMacroscopicCrossSection.md", "types/TotalMassStoppingPower.md", "types/TotalNeutronSourceDensity.md", "types/Transconductance.md", "types/TranslationalDampingConstant.md", "types/TranslationalSpringConstant.md", "types/TransmissionCoefficient.md", "types/TransportNumberOfIonic.md", "types/Velocity.md", "types/VelocityOfSound.md", "types/Voltage.md", "types/VoltageSlope.md", "types/Volume.md", "types/VolumeDensityOfCharge.md", "types/VolumeFlowRate.md", "types/VolumeFraction.md", "types/VolumeStrain.md", "types/WaveNumber.md", "types/Wavelenght.md", "types/Wavelength.md", "types/WeberNumber.md", "types/Weight.md", "types/Work.md"],
       "Partial Types" => Any["types/EmptyComponent.md"],
   ],
   "Connectors" => Any["connectors/BooleanInput.md", "connectors/BooleanOutput.md", "connectors/Flange.md", "connectors/Node.md", "connectors/Pin.md", "connectors/RealInput.md", "connectors/RealOutput.md", "connectors/Spline.md"],
   "Components" => Any[],
   "Analyses" => Any["analyses/TransientAnalysis.md"],
   "Examples" => Any[],
   "Experiments" => Any[],
   "Tests" => Any[],
]",
  "src/analyses/TransientAnalysis.md": "# \`TransientAnalysis\`

This is an analysis that performs a transient simulation of the specified \`model\`.

This component extends from [\`Analysis\`](#)

## Usage

\`TransientAnalysis(...)\`

## Source
\`\`\`dyad
# This is an analysis that performs a transient simulation of the specified \`model\`.
analysis TransientAnalysis
  extends Analysis
  model::Empty = EmptyComponent()
  parameter alg::String = "auto"
  parameter start::Time = 0
  parameter stop::Time
  parameter abstol::Real = 1e-6
  parameter reltol::Real = 1e-6
  parameter saveat::Real = 0
  parameter dtmax::Time = 0
  parameter IfLifting::Boolean = false
end
\`\`\`


## Related

- Examples",
  "src/connectors/BooleanInput.md": "\`\`\`@raw html

      <div style="float: right;width: 20%;max-width: 10vw; margin-left: 20px">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
    <style>
    text {
      transform-origin: center center;
    }
    </style><g transform="translate(0 0) scale(1.0) rotate(0)" transform-origin="center center"><svg baseProfile="full" height="210" version="1.1" viewBox="0 0 210 210" width="210" xmlns="http://www.w3.org/2000/svg" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xlink="http://www.w3.org/1999/xlink"><defs /><polygon fill="pink" fill-opacity="1" points="5.0,5.0 205.0,105.0 5.0,205.0" stroke="pink" stroke-width="0.25mm" /><defs /></svg></g>
    <text x="500" y="1100" transform="rotate(0, 0, 600)" fill="black" font-size="200" font-weight="200" dominant-baseline="central" text-anchor="middle">$(instance)</text>
    </svg>
      <span style="width: 100%; text-align: center; display:inline-block"><code>BooleanInput</code> Icon</span>
      </div>
    
\`\`\`
# \`BooleanInput\`

This connector represents a boolean signal as an input to a component

## Usage

\`BooleanInput()\`

## Source
\`\`\`dyad
# This connector represents a boolean signal as an input to a component
connector BooleanInput = input Boolean metadata {  "Dyad": {    "icons": {"default": "dyad://Dyad/BooleanInput.svg"},    "path": {"stroke": "pink"}  }}
\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/connectors/BooleanOutput.md": "\`\`\`@raw html

      <div style="float: right;width: 20%;max-width: 10vw; margin-left: 20px">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
    <style>
    text {
      transform-origin: center center;
    }
    </style><g transform="translate(0 0) scale(1.0) rotate(0)" transform-origin="center center"><svg baseProfile="full" height="210" version="1.1" viewBox="0 0 210 210" width="210" xmlns="http://www.w3.org/2000/svg" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xlink="http://www.w3.org/1999/xlink"><defs /><polygon fill="rgb(255,192,203)" fill-opacity="1" points="5.0,5.0 205.0,105.0 5.0,205.0" stroke="pink" stroke-width="0.25mm" /><defs /></svg></g>
    <text x="500" y="1100" transform="rotate(0, 0, 600)" fill="black" font-size="200" font-weight="200" dominant-baseline="central" text-anchor="middle">$(instance)</text>
    </svg>
      <span style="width: 100%; text-align: center; display:inline-block"><code>BooleanOutput</code> Icon</span>
      </div>
    
\`\`\`
# \`BooleanOutput\`

This connector represents a boolean signal as an output from a component

## Usage

\`BooleanOutput()\`

## Source
\`\`\`dyad
# This connector represents a boolean signal as an output from a component
connector BooleanOutput = output Boolean metadata {  "Dyad": {    "icons": {"default": "dyad://Dyad/BooleanOutput.svg"},    "path": {"stroke": "pink"}  }}
\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/connectors/Flange.md": "\`\`\`@raw html

      <div style="float: right;width: 20%;max-width: 10vw; margin-left: 20px">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
    <style>
    text {
      transform-origin: center center;
    }
    </style><g transform="translate(0 0) scale(1.0) rotate(0)" transform-origin="center center"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000">
  <path fill="#2a661f" d="M0 0h1000v1000H0z"/>
</svg></g>
    </svg>
      <span style="width: 100%; text-align: center; display:inline-block"><code>Flange</code> Icon</span>
      </div>
    
\`\`\`
# \`Flange\`

This connector represents a mechanical flange with position and force as the potential and flow variables, respectively.

## Usage

\`Flange()\`

## Source
\`\`\`dyad
# This connector represents a mechanical flange with position and force as the potential and flow variables, respectively.
connector Flange
  potential s::Position
  flow f::Force
metadata {
  "Dyad": {
    "labels": [{"label": "instance_name", "x": 0, "y": 750, "layer": "diagram"}],
    "icons": {
      "default": "dyad://Dyad/FlangeA.svg",
      "flange_a": "dyad://Dyad/FlangeA.svg",
      "flange_b": "dyad://Dyad/FlangeB.svg"
    },
    "path": {"stroke": "#2a661f"}
  }
}
end
\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/connectors/Node.md": "\`\`\`@raw html

      <div style="float: right;width: 20%;max-width: 10vw; margin-left: 20px">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
    <style>
    text {
      transform-origin: center center;
    }
    </style><g transform="translate(0 0) scale(1.0) rotate(0)" transform-origin="center center"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000">
  <path fill="white" stroke="red" stroke-width="29.016" d="M16.323 16.322h968.924v969.332H16.323Z"/>
</svg></g>
    </svg>
      <span style="width: 100%; text-align: center; display:inline-block"><code>Node</code> Icon</span>
      </div>
    
\`\`\`
# \`Node\`

This connector represents a thermal node with temperature and heat flow as the potential and flow variables, respectively.

## Usage

\`Node()\`

## Source
\`\`\`dyad
# This connector represents a thermal node with temperature and heat flow as the potential and flow variables, respectively.
connector Node
  potential T::Temperature
  flow Q::HeatFlowRate
metadata {
  "Dyad": {
    "labels": [{"label": "instance_name", "x": 0, "y": 750, "layer": "diagram"}],
    "icons": {
      "default": "dyad://Dyad/NodeB.svg",
      "node_a": "dyad://Dyad/NodeA.svg",
      "node_b": "dyad://Dyad/NodeB.svg"
    },
    "path": {"stroke": "red"}
  }
}
end
\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/connectors/Pin.md": "\`\`\`@raw html

      <div style="float: right;width: 20%;max-width: 10vw; margin-left: 20px">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
    <style>
    text {
      transform-origin: center center;
    }
    </style><g transform="translate(0 0) scale(1.0) rotate(0)" transform-origin="center center"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
  shape-rendering="geometricPrecision" text-rendering="geometricPrecision" transform-origin="center center">
  <rect rx="0" ry="0" width="1000" height="1000" fill="blue" stroke="blue" stroke-width="3"
      vector-effect="non-scaling-stroke"></rect>
</svg></g>
    </svg>
      <span style="width: 100%; text-align: center; display:inline-block"><code>Pin</code> Icon</span>
      </div>
    
\`\`\`
# \`Pin\`

This connector represents an electrical pin with voltage and current as the potential and flow variables, respectively.

## Usage

\`Pin()\`

## Source
\`\`\`dyad
# This connector represents an electrical pin with voltage and current as the potential and flow variables, respectively.
connector Pin
  potential v::Voltage
  flow i::Current
metadata {
  "Dyad": {
    "labels": [{"label": "instance_name", "x": 0, "y": 750, "layer": "diagram"}],
    "icons": {
      "default": "dyad://Dyad/PosElectricalPort.svg",
      "pos": "dyad://Dyad/PosElectricalPort.svg",
      "neg": "dyad://Dyad/NegElectricalPort.svg"
    },
    "path": {"stroke": "blue"}
  }
}
end
\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/connectors/RealInput.md": "\`\`\`@raw html

      <div style="float: right;width: 20%;max-width: 10vw; margin-left: 20px">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
    <style>
    text {
      transform-origin: center center;
    }
    </style><g transform="translate(0 0) scale(1.0) rotate(0)" transform-origin="center center"><svg baseProfile="full" height="210" version="1.1" viewBox="0 0 210 210" width="210" xmlns="http://www.w3.org/2000/svg" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xlink="http://www.w3.org/1999/xlink"><defs /><polygon fill="rgb(0,0,127)" fill-opacity="1" points="5.0,5.0 205.0,105.0 5.0,205.0" stroke="rgb(0,0,127)" stroke-width="0.25mm" /><defs /></svg></g>
    <text x="500" y="1100" transform="rotate(0, 0, 600)" fill="black" font-size="200" font-weight="200" dominant-baseline="central" text-anchor="middle">$(instance)</text>
    </svg>
      <span style="width: 100%; text-align: center; display:inline-block"><code>RealInput</code> Icon</span>
      </div>
    
\`\`\`
# \`RealInput\`

This connector represents a real signal as an input to a component

## Usage

\`RealInput()\`

## Source
\`\`\`dyad
# This connector represents a real signal as an input to a component
connector RealInput = input Real metadata {  "Dyad": {"icons": {"default": "dyad://Dyad/RealInput.svg"}, "path": {"stroke": "blue"}}}
\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/connectors/RealOutput.md": "\`\`\`@raw html

      <div style="float: right;width: 20%;max-width: 10vw; margin-left: 20px">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
    <style>
    text {
      transform-origin: center center;
    }
    </style><g transform="translate(0 0) scale(1.0) rotate(0)" transform-origin="center center"><svg baseProfile="full" height="210" version="1.1" viewBox="0 0 210 210" width="210" xmlns="http://www.w3.org/2000/svg" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xlink="http://www.w3.org/1999/xlink"><defs /><polygon fill="rgb(220,220,247)" fill-opacity="1" points="5.0,5.0 205.0,105.0 5.0,205.0" stroke="rgb(0,0,127)" stroke-width="0.25mm" /><defs /></svg></g>
    <text x="500" y="1100" transform="rotate(0, 0, 600)" fill="black" font-size="200" font-weight="200" dominant-baseline="central" text-anchor="middle">$(instance)</text>
    </svg>
      <span style="width: 100%; text-align: center; display:inline-block"><code>RealOutput</code> Icon</span>
      </div>
    
\`\`\`
# \`RealOutput\`

This connector represents a real signal as an output from a component

## Usage

\`RealOutput()\`

## Source
\`\`\`dyad
# This connector represents a real signal as an output from a component
connector RealOutput = output Real metadata {  "Dyad": {"icons": {"default": "dyad://Dyad/RealOutput.svg"}, "path": {"stroke": "blue"}}}
\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/connectors/Spline.md": "\`\`\`@raw html

      <div style="float: right;width: 20%;max-width: 10vw; margin-left: 20px">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
    <style>
    text {
      transform-origin: center center;
    }
    </style><g transform="translate(0 0) scale(1.0) rotate(0)" transform-origin="center center"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000">
  <circle cx="500" cy="500" r="500" fill="#00f"/>
</svg></g>
    </svg>
      <span style="width: 100%; text-align: center; display:inline-block"><code>Spline</code> Icon</span>
      </div>
    
\`\`\`
# \`Spline\`

This connector represents a rotational spline with angle and torque as the potential and flow variables, respectively.

## Usage

\`Spline()\`

## Source
\`\`\`dyad
# This connector represents a rotational spline with angle and torque as the potential and flow variables, respectively.
connector Spline
  potential phi::Angle
  flow tau::Torque
metadata {
  "Dyad": {
    "labels": [{"label": "instance_name", "x": 0, "y": 750, "layer": "diagram"}],
    "icons": {
      "default": "dyad://Dyad/HydraulicPortA.svg",
      "hydraulic_port_a": "dyad://Dyad/HydraulicPortA.svg",
      "hydraulic_port_b": "dyad://Dyad/HydraulicPortB.svg"
    },
    "path": {"stroke": "#aaa"}
  }
}
end
\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/index.md": "# Dyad

This is the documentation for the \`Dyad\` library.  Here you will
find the documentation for the various definitions contained in \`Dyad\`.

Note that this documentation is automatically generated primarily from the doc strings and metadata associated
with those definitions.

## Types

- [\`AbsoluteActivity\`](types/AbsoluteActivity.md)
- [\`AbsolutePressure\`](types/AbsolutePressure.md)
- [\`AbsorbedDose\`](types/AbsorbedDose.md)
- [\`AbsorbedDoseRate\`](types/AbsorbedDoseRate.md)
- [\`Acceleration\`](types/Acceleration.md)
- [\`AcceptorIonizationEnergy\`](types/AcceptorIonizationEnergy.md)
- [\`AcceptorNumberDensity\`](types/AcceptorNumberDensity.md)
- [\`AcousticAbsorptionCoefficient\`](types/AcousticAbsorptionCoefficient.md)
- [\`AcousticImpedance\`](types/AcousticImpedance.md)
- [\`ActivePower\`](types/ActivePower.md)
- [\`Activity\`](types/Activity.md)
- [\`ActivityCoefficient\`](types/ActivityCoefficient.md)
- [\`ActivityCoefficientOfSolute\`](types/ActivityCoefficientOfSolute.md)
- [\`ActivityOfSolute\`](types/ActivityOfSolute.md)
- [\`ActivityOfSolvent\`](types/ActivityOfSolvent.md)
- [\`Admittance\`](types/Admittance.md)
- [\`Affinity\`](types/Affinity.md)
- [\`AlfvenNumber\`](types/AlfvenNumber.md)
- [\`AlphaDisintegrationEnergy\`](types/AlphaDisintegrationEnergy.md)
- [\`AmountOfSubstance\`](types/AmountOfSubstance.md)
- [\`AmplitudeLevelDifference\`](types/AmplitudeLevelDifference.md)
- [\`Angle\`](types/Angle.md)
- [\`AngularAcceleration\`](types/AngularAcceleration.md)
- [\`AngularCrossSection\`](types/AngularCrossSection.md)
- [\`AngularFrequency\`](types/AngularFrequency.md)
- [\`AngularImpulse\`](types/AngularImpulse.md)
- [\`AngularMomentum\`](types/AngularMomentum.md)
- [\`AngularMomentumFlux\`](types/AngularMomentumFlux.md)
- [\`AngularVelocity\`](types/AngularVelocity.md)
- [\`AngularWaveNumber\`](types/AngularWaveNumber.md)
- [\`ApparentPower\`](types/ApparentPower.md)
- [\`Area\`](types/Area.md)
- [\`AtomicAttenuationCoefficient\`](types/AtomicAttenuationCoefficient.md)
- [\`AtomicMassConstant\`](types/AtomicMassConstant.md)
- [\`AttenuationCoefficient\`](types/AttenuationCoefficient.md)
- [\`BetaDisintegrationEnergy\`](types/BetaDisintegrationEnergy.md)
- [\`BindingFraction\`](types/BindingFraction.md)
- [\`BiotNumber\`](types/BiotNumber.md)
- [\`BohrMagneton\`](types/BohrMagneton.md)
- [\`BraggAngle\`](types/BraggAngle.md)
- [\`Breadth\`](types/Breadth.md)
- [\`BulkModulus\`](types/BulkModulus.md)
- [\`CIESpectralTristimulusValues\`](types/CIESpectralTristimulusValues.md)
- [\`CanonicalPartitionFunction\`](types/CanonicalPartitionFunction.md)
- [\`Capacitance\`](types/Capacitance.md)
- [\`CarrierLifeTime\`](types/CarrierLifeTime.md)
- [\`Charge\`](types/Charge.md)
- [\`ChargeNumberOfIon\`](types/ChargeNumberOfIon.md)
- [\`ChemicalPotential\`](types/ChemicalPotential.md)
- [\`ChromaticityCoordinates\`](types/ChromaticityCoordinates.md)
- [\`CircularWaveNumber\`](types/CircularWaveNumber.md)
- [\`CoefficientOfFriction\`](types/CoefficientOfFriction.md)
- [\`CoefficientOfHeatTransfer\`](types/CoefficientOfHeatTransfer.md)
- [\`CoherenceLength\`](types/CoherenceLength.md)
- [\`Compressibility\`](types/Compressibility.md)
- [\`ComptonWavelength\`](types/ComptonWavelength.md)
- [\`Concentration\`](types/Concentration.md)
- [\`Conductance\`](types/Conductance.md)
- [\`Conductivity\`](types/Conductivity.md)
- [\`CouplingCoefficient\`](types/CouplingCoefficient.md)
- [\`CowlingNumber\`](types/CowlingNumber.md)
- [\`CrossSection\`](types/CrossSection.md)
- [\`CubicExpansionCoefficient\`](types/CubicExpansionCoefficient.md)
- [\`CurieTemperature\`](types/CurieTemperature.md)
- [\`Current\`](types/Current.md)
- [\`CurrentDensity\`](types/CurrentDensity.md)
- [\`CurrentDensityOfParticles\`](types/CurrentDensityOfParticles.md)
- [\`CurrentLinkage\`](types/CurrentLinkage.md)
- [\`CurrentSlope\`](types/CurrentSlope.md)
- [\`CyclotronAngularFrequency\`](types/CyclotronAngularFrequency.md)
- [\`Damping\`](types/Damping.md)
- [\`DampingCoefficient\`](types/DampingCoefficient.md)
- [\`DebyeCircularFrequency\`](types/DebyeCircularFrequency.md)
- [\`DebyeCircularWaveNumber\`](types/DebyeCircularWaveNumber.md)
- [\`DebyeTemperature\`](types/DebyeTemperature.md)
- [\`DebyeWallerFactor\`](types/DebyeWallerFactor.md)
- [\`DecayConstant\`](types/DecayConstant.md)
- [\`DegreeOfDissociation\`](types/DegreeOfDissociation.md)
- [\`Density\`](types/Density.md)
- [\`DensityOfHeatFlowRate\`](types/DensityOfHeatFlowRate.md)
- [\`DensityOfStates\`](types/DensityOfStates.md)
- [\`DerDensityByEnthalpy\`](types/DerDensityByEnthalpy.md)
- [\`DerDensityByPressure\`](types/DerDensityByPressure.md)
- [\`DerDensityByTemperature\`](types/DerDensityByTemperature.md)
- [\`DerEnergyByDensity\`](types/DerEnergyByDensity.md)
- [\`DerEnergyByPressure\`](types/DerEnergyByPressure.md)
- [\`DerEnthalpyByPressure\`](types/DerEnthalpyByPressure.md)
- [\`Diameter\`](types/Diameter.md)
- [\`DiffusionArea\`](types/DiffusionArea.md)
- [\`DiffusionCoefficient\`](types/DiffusionCoefficient.md)
- [\`DiffusionLength\`](types/DiffusionLength.md)
- [\`DirectionalSpectralEmissivity\`](types/DirectionalSpectralEmissivity.md)
- [\`DissipationCoefficient\`](types/DissipationCoefficient.md)
- [\`Distance\`](types/Distance.md)
- [\`DonorIonizationEnergy\`](types/DonorIonizationEnergy.md)
- [\`DonorNumberDensity\`](types/DonorNumberDensity.md)
- [\`DoseEquivalent\`](types/DoseEquivalent.md)
- [\`Duration\`](types/Duration.md)
- [\`DynamicViscosity\`](types/DynamicViscosity.md)
- [\`EffectiveMass\`](types/EffectiveMass.md)
- [\`Efficiency\`](types/Efficiency.md)
- [\`ElectricCharge\`](types/ElectricCharge.md)
- [\`ElectricCurrent\`](types/ElectricCurrent.md)
- [\`ElectricDipoleMoment\`](types/ElectricDipoleMoment.md)
- [\`ElectricDipoleMomentOfMolecule\`](types/ElectricDipoleMomentOfMolecule.md)
- [\`ElectricFieldStrength\`](types/ElectricFieldStrength.md)
- [\`ElectricFlux\`](types/ElectricFlux.md)
- [\`ElectricFluxDensity\`](types/ElectricFluxDensity.md)
- [\`ElectricPolarizabilityOfAMolecule\`](types/ElectricPolarizabilityOfAMolecule.md)
- [\`ElectricPolarization\`](types/ElectricPolarization.md)
- [\`ElectricPotential\`](types/ElectricPotential.md)
- [\`ElectricSusceptibility\`](types/ElectricSusceptibility.md)
- [\`ElectricalForceConstant\`](types/ElectricalForceConstant.md)
- [\`ElectricalTorqueConstant\`](types/ElectricalTorqueConstant.md)
- [\`Electrization\`](types/Electrization.md)
- [\`ElectrolyticConductivity\`](types/ElectrolyticConductivity.md)
- [\`ElectromagneticEnergyDensity\`](types/ElectromagneticEnergyDensity.md)
- [\`ElectromagneticMoment\`](types/ElectromagneticMoment.md)
- [\`ElectromotiveForce\`](types/ElectromotiveForce.md)
- [\`ElectronNumberDensity\`](types/ElectronNumberDensity.md)
- [\`ElectronRadius\`](types/ElectronRadius.md)
- [\`ElementaryCharge\`](types/ElementaryCharge.md)
- [\`Emissivity\`](types/Emissivity.md)
- [\`EmptyComponent\`](types/EmptyComponent.md)
- [\`Energy\`](types/Energy.md)
- [\`EnergyDensity\`](types/EnergyDensity.md)
- [\`EnergyFlowRate\`](types/EnergyFlowRate.md)
- [\`EnergyFluence\`](types/EnergyFluence.md)
- [\`EnergyFluenceRate\`](types/EnergyFluenceRate.md)
- [\`EnergyImparted\`](types/EnergyImparted.md)
- [\`Enthalpy\`](types/Enthalpy.md)
- [\`EnthalpyFlowRate\`](types/EnthalpyFlowRate.md)
- [\`Entropy\`](types/Entropy.md)
- [\`EntropyFlowRate\`](types/EntropyFlowRate.md)
- [\`EquivalentAbsorptionArea\`](types/EquivalentAbsorptionArea.md)
- [\`EulerNumber\`](types/EulerNumber.md)
- [\`ExchangeIntegral\`](types/ExchangeIntegral.md)
- [\`Exposure\`](types/Exposure.md)
- [\`ExposureRate\`](types/ExposureRate.md)
- [\`FaradayConstant\`](types/FaradayConstant.md)
- [\`FastFissionFactor\`](types/FastFissionFactor.md)
- [\`FermiCircularWaveNumber\`](types/FermiCircularWaveNumber.md)
- [\`FermiEnergy\`](types/FermiEnergy.md)
- [\`FermiTemperature\`](types/FermiTemperature.md)
- [\`FluxiodQuantum\`](types/FluxiodQuantum.md)
- [\`Force\`](types/Force.md)
- [\`FourierNumber\`](types/FourierNumber.md)
- [\`FourierNumberOfMassTransfer\`](types/FourierNumberOfMassTransfer.md)
- [\`Frequency\`](types/Frequency.md)
- [\`FroudeNumber\`](types/FroudeNumber.md)
- [\`Fugacity\`](types/Fugacity.md)
- [\`GFactorOfAtom\`](types/GFactorOfAtom.md)
- [\`GFactorOfNucleus\`](types/GFactorOfNucleus.md)
- [\`GapEnergy\`](types/GapEnergy.md)
- [\`GibbsFreeEnergy\`](types/GibbsFreeEnergy.md)
- [\`GrandCanonicalPartitionFunction\`](types/GrandCanonicalPartitionFunction.md)
- [\`GrashofNumber\`](types/GrashofNumber.md)
- [\`GrashofNumberOfMassTransfer\`](types/GrashofNumberOfMassTransfer.md)
- [\`GrueneisenParameter\`](types/GrueneisenParameter.md)
- [\`GyromagneticCoefficient\`](types/GyromagneticCoefficient.md)
- [\`HalfLife\`](types/HalfLife.md)
- [\`HalfThickness\`](types/HalfThickness.md)
- [\`HallCoefficient\`](types/HallCoefficient.md)
- [\`HartmannNumber\`](types/HartmannNumber.md)
- [\`HartreeEnergy\`](types/HartreeEnergy.md)
- [\`Heat\`](types/Heat.md)
- [\`HeatCapacity\`](types/HeatCapacity.md)
- [\`HeatFlowRate\`](types/HeatFlowRate.md)
- [\`HeatFlux\`](types/HeatFlux.md)
- [\`Height\`](types/Height.md)
- [\`HelmholtzFreeEnergy\`](types/HelmholtzFreeEnergy.md)
- [\`HoleNumberDensity\`](types/HoleNumberDensity.md)
- [\`Illuminance\`](types/Illuminance.md)
- [\`Impedance\`](types/Impedance.md)
- [\`Impulse\`](types/Impulse.md)
- [\`Inductance\`](types/Inductance.md)
- [\`Inertia\`](types/Inertia.md)
- [\`InstantaneousPower\`](types/InstantaneousPower.md)
- [\`InternalEnergy\`](types/InternalEnergy.md)
- [\`IntrinsicNumberDensity\`](types/IntrinsicNumberDensity.md)
- [\`InversePotential\`](types/InversePotential.md)
- [\`IonNumberDensity\`](types/IonNumberDensity.md)
- [\`IonicStrength\`](types/IonicStrength.md)
- [\`Irradiance\`](types/Irradiance.md)
- [\`IsentropicCompressibility\`](types/IsentropicCompressibility.md)
- [\`IsentropicExponent\`](types/IsentropicExponent.md)
- [\`IsothermalCompressibility\`](types/IsothermalCompressibility.md)
- [\`Kerma\`](types/Kerma.md)
- [\`KermaRate\`](types/KermaRate.md)
- [\`KinematicViscosity\`](types/KinematicViscosity.md)
- [\`KineticEnergy\`](types/KineticEnergy.md)
- [\`KnudsenNumber\`](types/KnudsenNumber.md)
- [\`LandauGinzburgParameter\`](types/LandauGinzburgParameter.md)
- [\`LarmorAngularFrequency\`](types/LarmorAngularFrequency.md)
- [\`LeakageCoefficient\`](types/LeakageCoefficient.md)
- [\`Length\`](types/Length.md)
- [\`Lethargy\`](types/Lethargy.md)
- [\`LevelWidth\`](types/LevelWidth.md)
- [\`LewisNumber\`](types/LewisNumber.md)
- [\`LightExposure\`](types/LightExposure.md)
- [\`LinearAbsorptionCoefficient\`](types/LinearAbsorptionCoefficient.md)
- [\`LinearAttenuationCoefficient\`](types/LinearAttenuationCoefficient.md)
- [\`LinearCurrentDensity\`](types/LinearCurrentDensity.md)
- [\`LinearDensity\`](types/LinearDensity.md)
- [\`LinearEnergyTransfer\`](types/LinearEnergyTransfer.md)
- [\`LinearExpansionCoefficient\`](types/LinearExpansionCoefficient.md)
- [\`LinearIonization\`](types/LinearIonization.md)
- [\`LinearStrain\`](types/LinearStrain.md)
- [\`LinearTemperatureCoefficient\`](types/LinearTemperatureCoefficient.md)
- [\`LogarithmicDecrement\`](types/LogarithmicDecrement.md)
- [\`LondonPenetrationDepth\`](types/LondonPenetrationDepth.md)
- [\`LongRangeOrderParameter\`](types/LongRangeOrderParameter.md)
- [\`LorenzCoefficient\`](types/LorenzCoefficient.md)
- [\`LossAngle\`](types/LossAngle.md)
- [\`Loundness\`](types/Loundness.md)
- [\`LoundnessLevel\`](types/LoundnessLevel.md)
- [\`Luminance\`](types/Luminance.md)
- [\`LuminousEfficacy\`](types/LuminousEfficacy.md)
- [\`LuminousEfficiency\`](types/LuminousEfficiency.md)
- [\`LuminousExitance\`](types/LuminousExitance.md)
- [\`LuminousFlux\`](types/LuminousFlux.md)
- [\`LuminousIntensity\`](types/LuminousIntensity.md)
- [\`MachNumber\`](types/MachNumber.md)
- [\`MacroscopicCrossSection\`](types/MacroscopicCrossSection.md)
- [\`MadelungConstant\`](types/MadelungConstant.md)
- [\`MagneticDipoleMoment\`](types/MagneticDipoleMoment.md)
- [\`MagneticFieldStrength\`](types/MagneticFieldStrength.md)
- [\`MagneticFlux\`](types/MagneticFlux.md)
- [\`MagneticFluxDensity\`](types/MagneticFluxDensity.md)
- [\`MagneticMomentOfParticle\`](types/MagneticMomentOfParticle.md)
- [\`MagneticPolarization\`](types/MagneticPolarization.md)
- [\`MagneticPotential\`](types/MagneticPotential.md)
- [\`MagneticPotentialDifference\`](types/MagneticPotentialDifference.md)
- [\`MagneticReynoldsNumber\`](types/MagneticReynoldsNumber.md)
- [\`MagneticSusceptibility\`](types/MagneticSusceptibility.md)
- [\`MagneticVectorPotential\`](types/MagneticVectorPotential.md)
- [\`Magnetization\`](types/Magnetization.md)
- [\`MagnetomotiveForce\`](types/MagnetomotiveForce.md)
- [\`Mass\`](types/Mass.md)
- [\`MassAttenuationCoefficient\`](types/MassAttenuationCoefficient.md)
- [\`MassConcentration\`](types/MassConcentration.md)
- [\`MassDefect\`](types/MassDefect.md)
- [\`MassEnergyTransferCoefficient\`](types/MassEnergyTransferCoefficient.md)
- [\`MassExcess\`](types/MassExcess.md)
- [\`MassFlowRate\`](types/MassFlowRate.md)
- [\`MassFraction\`](types/MassFraction.md)
- [\`MassOfElectron\`](types/MassOfElectron.md)
- [\`MassOfMolecule\`](types/MassOfMolecule.md)
- [\`MassOfNeutron\`](types/MassOfNeutron.md)
- [\`MassOfProton\`](types/MassOfProton.md)
- [\`MassieuFunction\`](types/MassieuFunction.md)
- [\`MaximumBetaParticleEnergy\`](types/MaximumBetaParticleEnergy.md)
- [\`MeanEnergyImparted\`](types/MeanEnergyImparted.md)
- [\`MeanFreePath\`](types/MeanFreePath.md)
- [\`MeanLife\`](types/MeanLife.md)
- [\`MeanLinearRange\`](types/MeanLinearRange.md)
- [\`MeanMassRange\`](types/MeanMassRange.md)
- [\`MechanicalImpedance\`](types/MechanicalImpedance.md)
- [\`MicrocanonicalPartitionFunction\`](types/MicrocanonicalPartitionFunction.md)
- [\`MigrationArea\`](types/MigrationArea.md)
- [\`MigrationLength\`](types/MigrationLength.md)
- [\`Mobility\`](types/Mobility.md)
- [\`MobilityRatio\`](types/MobilityRatio.md)
- [\`ModulusOfAdmittance\`](types/ModulusOfAdmittance.md)
- [\`ModulusOfElasticity\`](types/ModulusOfElasticity.md)
- [\`ModulusOfImpedance\`](types/ModulusOfImpedance.md)
- [\`MolarAbsorptionCoefficient\`](types/MolarAbsorptionCoefficient.md)
- [\`MolarAttenuationCoefficient\`](types/MolarAttenuationCoefficient.md)
- [\`MolarConductivity\`](types/MolarConductivity.md)
- [\`MolarEntropy\`](types/MolarEntropy.md)
- [\`MolarFlowRate\`](types/MolarFlowRate.md)
- [\`MolarHeatCapacity\`](types/MolarHeatCapacity.md)
- [\`MolarInternalEnergy\`](types/MolarInternalEnergy.md)
- [\`MolarMass\`](types/MolarMass.md)
- [\`MolarVolume\`](types/MolarVolume.md)
- [\`MoleFraction\`](types/MoleFraction.md)
- [\`MolecularConcentration\`](types/MolecularConcentration.md)
- [\`MolecularPartitionFunction\`](types/MolecularPartitionFunction.md)
- [\`MomentOfForce\`](types/MomentOfForce.md)
- [\`MomentOfInertia\`](types/MomentOfInertia.md)
- [\`Momentum\`](types/Momentum.md)
- [\`MomentumFlux\`](types/MomentumFlux.md)
- [\`MutualInductance\`](types/MutualInductance.md)
- [\`NeelTemperature\`](types/NeelTemperature.md)
- [\`NeutronFluenceRate\`](types/NeutronFluenceRate.md)
- [\`NeutronNumber\`](types/NeutronNumber.md)
- [\`NeutronNumberDensity\`](types/NeutronNumberDensity.md)
- [\`NeutronSpeed\`](types/NeutronSpeed.md)
- [\`NeutronYieldPerAbsorption\`](types/NeutronYieldPerAbsorption.md)
- [\`NeutronYieldPerFission\`](types/NeutronYieldPerFission.md)
- [\`NonLeakageProbability\`](types/NonLeakageProbability.md)
- [\`NormalStress\`](types/NormalStress.md)
- [\`NuclearMagneton\`](types/NuclearMagneton.md)
- [\`NuclearPrecessionAngularFrequency\`](types/NuclearPrecessionAngularFrequency.md)
- [\`NuclearQuadrupoleMoment\`](types/NuclearQuadrupoleMoment.md)
- [\`NuclearRadius\`](types/NuclearRadius.md)
- [\`NucleonNumber\`](types/NucleonNumber.md)
- [\`NumberDensityOfMolecules\`](types/NumberDensityOfMolecules.md)
- [\`NumberOfMolecules\`](types/NumberOfMolecules.md)
- [\`NusseltNumber\`](types/NusseltNumber.md)
- [\`NusseltNumberOfMassTransfer\`](types/NusseltNumberOfMassTransfer.md)
- [\`OrderOfReflexion\`](types/OrderOfReflexion.md)
- [\`OsmoticCoefficientOfSolvent\`](types/OsmoticCoefficientOfSolvent.md)
- [\`OsmoticPressure\`](types/OsmoticPressure.md)
- [\`PackingFraction\`](types/PackingFraction.md)
- [\`PartialPressure\`](types/PartialPressure.md)
- [\`ParticleFluence\`](types/ParticleFluence.md)
- [\`ParticleFluenceRate\`](types/ParticleFluenceRate.md)
- [\`PathLength\`](types/PathLength.md)
- [\`PecletNumber\`](types/PecletNumber.md)
- [\`PecletNumberOfMassTransfer\`](types/PecletNumberOfMassTransfer.md)
- [\`PeltierCoefficient\`](types/PeltierCoefficient.md)
- [\`Period\`](types/Period.md)
- [\`Permeability\`](types/Permeability.md)
- [\`PermeabilityOfVacuum\`](types/PermeabilityOfVacuum.md)
- [\`Permeance\`](types/Permeance.md)
- [\`Permittivity\`](types/Permittivity.md)
- [\`PermittivityOfVacuum\`](types/PermittivityOfVacuum.md)
- [\`PhaseCoefficient\`](types/PhaseCoefficient.md)
- [\`PhaseDifference\`](types/PhaseDifference.md)
- [\`PlanckFunction\`](types/PlanckFunction.md)
- [\`PoissonNumber\`](types/PoissonNumber.md)
- [\`Position\`](types/Position.md)
- [\`PotentialDifference\`](types/PotentialDifference.md)
- [\`PotentialEnergy\`](types/PotentialEnergy.md)
- [\`Power\`](types/Power.md)
- [\`PowerFactor\`](types/PowerFactor.md)
- [\`PowerLevelDifference\`](types/PowerLevelDifference.md)
- [\`PoyntingVector\`](types/PoyntingVector.md)
- [\`PrandtlNumber\`](types/PrandtlNumber.md)
- [\`Pressure\`](types/Pressure.md)
- [\`PressureCoefficient\`](types/PressureCoefficient.md)
- [\`PropagationCoefficient\`](types/PropagationCoefficient.md)
- [\`ProtonNumber\`](types/ProtonNumber.md)
- [\`QuadraticTemperatureCoefficient\`](types/QuadraticTemperatureCoefficient.md)
- [\`QualityFactor\`](types/QualityFactor.md)
- [\`QuantityOfLight\`](types/QuantityOfLight.md)
- [\`Radiance\`](types/Radiance.md)
- [\`RadiantEnergy\`](types/RadiantEnergy.md)
- [\`RadiantEnergyDensity\`](types/RadiantEnergyDensity.md)
- [\`RadiantEnergyFluenceRate\`](types/RadiantEnergyFluenceRate.md)
- [\`RadiantExtiance\`](types/RadiantExtiance.md)
- [\`RadiantIntensity\`](types/RadiantIntensity.md)
- [\`RadiantPower\`](types/RadiantPower.md)
- [\`Radius\`](types/Radius.md)
- [\`RatioOfSpecificHeatCapacities\`](types/RatioOfSpecificHeatCapacities.md)
- [\`RayleighNumber\`](types/RayleighNumber.md)
- [\`Reactance\`](types/Reactance.md)
- [\`ReactionEnergy\`](types/ReactionEnergy.md)
- [\`ReactivePower\`](types/ReactivePower.md)
- [\`Reactivity\`](types/Reactivity.md)
- [\`ReactorTimeConstant\`](types/ReactorTimeConstant.md)
- [\`RecombinationCoefficient\`](types/RecombinationCoefficient.md)
- [\`ReflectionCoefficient\`](types/ReflectionCoefficient.md)
- [\`RefractiveIndex\`](types/RefractiveIndex.md)
- [\`RelativeAtomicMass\`](types/RelativeAtomicMass.md)
- [\`RelativeDensity\`](types/RelativeDensity.md)
- [\`RelativeMassDefect\`](types/RelativeMassDefect.md)
- [\`RelativeMassExcess\`](types/RelativeMassExcess.md)
- [\`RelativeMolecularMass\`](types/RelativeMolecularMass.md)
- [\`RelativePermeability\`](types/RelativePermeability.md)
- [\`RelativePermittivity\`](types/RelativePermittivity.md)
- [\`RelativePressureCoefficient\`](types/RelativePressureCoefficient.md)
- [\`RelaxationTime\`](types/RelaxationTime.md)
- [\`Reluctance\`](types/Reluctance.md)
- [\`ResidualResistivity\`](types/ResidualResistivity.md)
- [\`Resistance\`](types/Resistance.md)
- [\`Resistivity\`](types/Resistivity.md)
- [\`ResonanceEnergy\`](types/ResonanceEnergy.md)
- [\`ResonanceEscapeProbability\`](types/ResonanceEscapeProbability.md)
- [\`ReverberationTime\`](types/ReverberationTime.md)
- [\`ReynoldsNumber\`](types/ReynoldsNumber.md)
- [\`RichardsonConstant\`](types/RichardsonConstant.md)
- [\`RotationalDampingConstant\`](types/RotationalDampingConstant.md)
- [\`RotationalSpringConstant\`](types/RotationalSpringConstant.md)
- [\`SchmidtNumber\`](types/SchmidtNumber.md)
- [\`SecondMomentOfArea\`](types/SecondMomentOfArea.md)
- [\`SecondPolarMomentOfArea\`](types/SecondPolarMomentOfArea.md)
- [\`SectionModulus\`](types/SectionModulus.md)
- [\`SeebeckCoefficient\`](types/SeebeckCoefficient.md)
- [\`SelfInductance\`](types/SelfInductance.md)
- [\`ShearModulus\`](types/ShearModulus.md)
- [\`ShearStrain\`](types/ShearStrain.md)
- [\`ShearStress\`](types/ShearStress.md)
- [\`ShortRangeOrderParameter\`](types/ShortRangeOrderParameter.md)
- [\`SlowingDownArea\`](types/SlowingDownArea.md)
- [\`SlowingDownDensity\`](types/SlowingDownDensity.md)
- [\`SlowingDownLength\`](types/SlowingDownLength.md)
- [\`SolidAngle\`](types/SolidAngle.md)
- [\`SoundEnergyDensity\`](types/SoundEnergyDensity.md)
- [\`SoundIntensity\`](types/SoundIntensity.md)
- [\`SoundParticleAcceleration\`](types/SoundParticleAcceleration.md)
- [\`SoundParticleDisplacement\`](types/SoundParticleDisplacement.md)
- [\`SoundParticleVelocity\`](types/SoundParticleVelocity.md)
- [\`SoundPower\`](types/SoundPower.md)
- [\`SoundPowerLevel\`](types/SoundPowerLevel.md)
- [\`SoundPressure\`](types/SoundPressure.md)
- [\`SoundPressureLevel\`](types/SoundPressureLevel.md)
- [\`SoundReductionIndex\`](types/SoundReductionIndex.md)
- [\`SpecificAcousticImpedance\`](types/SpecificAcousticImpedance.md)
- [\`SpecificActivity\`](types/SpecificActivity.md)
- [\`SpecificEnergy\`](types/SpecificEnergy.md)
- [\`SpecificEnergyImparted\`](types/SpecificEnergyImparted.md)
- [\`SpecificEnthalpy\`](types/SpecificEnthalpy.md)
- [\`SpecificEntropy\`](types/SpecificEntropy.md)
- [\`SpecificGibbsFreeEnergy\`](types/SpecificGibbsFreeEnergy.md)
- [\`SpecificHeatCapacity\`](types/SpecificHeatCapacity.md)
- [\`SpecificHeatCapacityAtConstantPressure\`](types/SpecificHeatCapacityAtConstantPressure.md)
- [\`SpecificHeatCapacityAtConstantVolume\`](types/SpecificHeatCapacityAtConstantVolume.md)
- [\`SpecificHeatCapacityAtSaturation\`](types/SpecificHeatCapacityAtSaturation.md)
- [\`SpecificHelmholtzFreeEnergy\`](types/SpecificHelmholtzFreeEnergy.md)
- [\`SpecificInternalEnergy\`](types/SpecificInternalEnergy.md)
- [\`SpecificVolume\`](types/SpecificVolume.md)
- [\`SpectralAbsorptionFactor\`](types/SpectralAbsorptionFactor.md)
- [\`SpectralAngularCrossSection\`](types/SpectralAngularCrossSection.md)
- [\`SpectralConcentration\`](types/SpectralConcentration.md)
- [\`SpectralCrossSection\`](types/SpectralCrossSection.md)
- [\`SpectralEmissivity\`](types/SpectralEmissivity.md)
- [\`SpectralLuminousEfficacy\`](types/SpectralLuminousEfficacy.md)
- [\`SpectralLuminousEfficiency\`](types/SpectralLuminousEfficiency.md)
- [\`SpectralRadianceFactor\`](types/SpectralRadianceFactor.md)
- [\`SpectralRadiantEnergyDensity\`](types/SpectralRadiantEnergyDensity.md)
- [\`SpectralReflectionFactor\`](types/SpectralReflectionFactor.md)
- [\`SpectralTransmissionFactor\`](types/SpectralTransmissionFactor.md)
- [\`StandardAbsoluteActivity\`](types/StandardAbsoluteActivity.md)
- [\`StandardAbsoluteActivityOfSolute\`](types/StandardAbsoluteActivityOfSolute.md)
- [\`StandardAbsoluteActivityOfSolvent\`](types/StandardAbsoluteActivityOfSolvent.md)
- [\`StantonNumber\`](types/StantonNumber.md)
- [\`StantonNumberOfMassTransfer\`](types/StantonNumberOfMassTransfer.md)
- [\`StaticPressure\`](types/StaticPressure.md)
- [\`StatisticalWeight\`](types/StatisticalWeight.md)
- [\`StoichiometricNumber\`](types/StoichiometricNumber.md)
- [\`Strain\`](types/Strain.md)
- [\`Stress\`](types/Stress.md)
- [\`StrouhalNumber\`](types/StrouhalNumber.md)
- [\`SurfaceCoefficientOfHeatTransfer\`](types/SurfaceCoefficientOfHeatTransfer.md)
- [\`SurfaceDensity\`](types/SurfaceDensity.md)
- [\`SurfaceDensityOfCharge\`](types/SurfaceDensityOfCharge.md)
- [\`SurfaceTension\`](types/SurfaceTension.md)
- [\`Susceptance\`](types/Susceptance.md)
- [\`Temp_K\`](types/Temp_K.md)
- [\`Temperature\`](types/Temperature.md)
- [\`TemperatureDifference\`](types/TemperatureDifference.md)
- [\`TemperatureSlope\`](types/TemperatureSlope.md)
- [\`ThermalConductance\`](types/ThermalConductance.md)
- [\`ThermalConductivity\`](types/ThermalConductivity.md)
- [\`ThermalDiffusionCoefficient\`](types/ThermalDiffusionCoefficient.md)
- [\`ThermalDiffusionFactor\`](types/ThermalDiffusionFactor.md)
- [\`ThermalDiffusionRatio\`](types/ThermalDiffusionRatio.md)
- [\`ThermalDiffusivity\`](types/ThermalDiffusivity.md)
- [\`ThermalInsulance\`](types/ThermalInsulance.md)
- [\`ThermalResistance\`](types/ThermalResistance.md)
- [\`ThermalUtilizationFactor\`](types/ThermalUtilizationFactor.md)
- [\`ThermodynamicTemperature\`](types/ThermodynamicTemperature.md) - Absolute temperature (use type TemperatureDifference for relative temperatures)
- [\`ThermoelectromotiveForce\`](types/ThermoelectromotiveForce.md)
- [\`Thickness\`](types/Thickness.md)
- [\`ThomsonCoefficient\`](types/ThomsonCoefficient.md)
- [\`Time\`](types/Time.md)
- [\`Torque\`](types/Torque.md)
- [\`TotalAtomicStoppingPower\`](types/TotalAtomicStoppingPower.md)
- [\`TotalCrossSection\`](types/TotalCrossSection.md)
- [\`TotalIonization\`](types/TotalIonization.md)
- [\`TotalLinearStoppingPower\`](types/TotalLinearStoppingPower.md)
- [\`TotalMacroscopicCrossSection\`](types/TotalMacroscopicCrossSection.md)
- [\`TotalMassStoppingPower\`](types/TotalMassStoppingPower.md)
- [\`TotalNeutronSourceDensity\`](types/TotalNeutronSourceDensity.md)
- [\`Transconductance\`](types/Transconductance.md)
- [\`TranslationalDampingConstant\`](types/TranslationalDampingConstant.md)
- [\`TranslationalSpringConstant\`](types/TranslationalSpringConstant.md)
- [\`TransmissionCoefficient\`](types/TransmissionCoefficient.md)
- [\`TransportNumberOfIonic\`](types/TransportNumberOfIonic.md)
- [\`Velocity\`](types/Velocity.md)
- [\`VelocityOfSound\`](types/VelocityOfSound.md)
- [\`Voltage\`](types/Voltage.md)
- [\`VoltageSlope\`](types/VoltageSlope.md)
- [\`Volume\`](types/Volume.md)
- [\`VolumeDensityOfCharge\`](types/VolumeDensityOfCharge.md)
- [\`VolumeFlowRate\`](types/VolumeFlowRate.md)
- [\`VolumeFraction\`](types/VolumeFraction.md)
- [\`VolumeStrain\`](types/VolumeStrain.md)
- [\`WaveNumber\`](types/WaveNumber.md)
- [\`Wavelenght\`](types/Wavelenght.md)
- [\`Wavelength\`](types/Wavelength.md)
- [\`WeberNumber\`](types/WeberNumber.md)
- [\`Weight\`](types/Weight.md)
- [\`Work\`](types/Work.md)
## Connectors

- [\`BooleanInput\`](connectors/BooleanInput.md) - This connector represents a boolean signal as an input to a component
- [\`BooleanOutput\`](connectors/BooleanOutput.md) - This connector represents a boolean signal as an output from a component
- [\`Flange\`](connectors/Flange.md) - This connector represents a mechanical flange with position and force as the potential and flow variables, respectively.
- [\`Node\`](connectors/Node.md) - This connector represents a thermal node with temperature and heat flow as the potential and flow variables, respectively.
- [\`Pin\`](connectors/Pin.md) - This connector represents an electrical pin with voltage and current as the potential and flow variables, respectively.
- [\`RealInput\`](connectors/RealInput.md) - This connector represents a real signal as an input to a component
- [\`RealOutput\`](connectors/RealOutput.md) - This connector represents a real signal as an output from a component
- [\`Spline\`](connectors/Spline.md) - This connector represents a rotational spline with angle and torque as the potential and flow variables, respectively.
## Analyses

- [\`TransientAnalysis\`](analyses/TransientAnalysis.md) - This is an analysis that performs a transient simulation of the specified \`model\`.",
  "src/types/AbsoluteActivity.md": "# \`AbsoluteActivity\`

## Usage

\`AbsoluteActivity()\`

## Source
\`\`\`dyad
type AbsoluteActivity = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AbsoluteActivity = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AbsolutePressure.md": "# \`AbsolutePressure\`

## Usage

\`AbsolutePressure()\`

## Source
\`\`\`dyad
type AbsolutePressure = Pressure(min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AbsolutePressure = Real(statePriority=0, min=0, units="Pa", displayUnits="bar")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AbsorbedDose.md": "# \`AbsorbedDose\`

## Usage

\`AbsorbedDose()\`

## Source
\`\`\`dyad
type AbsorbedDose = Real(units="Gy")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AbsorbedDose = Real(statePriority=0, units="Gy")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AbsorbedDoseRate.md": "# \`AbsorbedDoseRate\`

## Usage

\`AbsorbedDoseRate()\`

## Source
\`\`\`dyad
type AbsorbedDoseRate = Real(units="Gy/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AbsorbedDoseRate = Real(statePriority=0, units="Gy/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Acceleration.md": "# \`Acceleration\`

## Usage

\`Acceleration()\`

## Source
\`\`\`dyad
type Acceleration = Real(units="m/s2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Acceleration = Real(statePriority=0, units="m/s2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AcceptorIonizationEnergy.md": "# \`AcceptorIonizationEnergy\`

## Usage

\`AcceptorIonizationEnergy()\`

## Source
\`\`\`dyad
type AcceptorIonizationEnergy = Real(units="eV")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AcceptorIonizationEnergy = Real(statePriority=0, units="eV")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AcceptorNumberDensity.md": "# \`AcceptorNumberDensity\`

## Usage

\`AcceptorNumberDensity()\`

## Source
\`\`\`dyad
type AcceptorNumberDensity = Real(units="m-3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AcceptorNumberDensity = Real(statePriority=0, units="m-3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AcousticAbsorptionCoefficient.md": "# \`AcousticAbsorptionCoefficient\`

## Usage

\`AcousticAbsorptionCoefficient()\`

## Source
\`\`\`dyad
type AcousticAbsorptionCoefficient = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AcousticAbsorptionCoefficient = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AcousticImpedance.md": "# \`AcousticImpedance\`

## Usage

\`AcousticImpedance()\`

## Source
\`\`\`dyad
type AcousticImpedance = Real(units="Pa.s/m3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AcousticImpedance = Real(statePriority=0, units="Pa.s/m3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ActivePower.md": "# \`ActivePower\`

## Usage

\`ActivePower()\`

## Source
\`\`\`dyad
type ActivePower = Real(units="W")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ActivePower = Real(statePriority=0, units="W")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Activity.md": "# \`Activity\`

## Usage

\`Activity()\`

## Source
\`\`\`dyad
type Activity = Real(units="Bq")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Activity = Real(statePriority=0, units="Bq")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ActivityCoefficient.md": "# \`ActivityCoefficient\`

## Usage

\`ActivityCoefficient()\`

## Source
\`\`\`dyad
type ActivityCoefficient = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ActivityCoefficient = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ActivityCoefficientOfSolute.md": "# \`ActivityCoefficientOfSolute\`

## Usage

\`ActivityCoefficientOfSolute()\`

## Source
\`\`\`dyad
type ActivityCoefficientOfSolute = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ActivityCoefficientOfSolute = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ActivityOfSolute.md": "# \`ActivityOfSolute\`

## Usage

\`ActivityOfSolute()\`

## Source
\`\`\`dyad
type ActivityOfSolute = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ActivityOfSolute = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ActivityOfSolvent.md": "# \`ActivityOfSolvent\`

## Usage

\`ActivityOfSolvent()\`

## Source
\`\`\`dyad
type ActivityOfSolvent = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ActivityOfSolvent = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Admittance.md": "# \`Admittance\`

## Usage

\`Admittance()\`

## Source
\`\`\`dyad
type Admittance = Conductance
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Admittance = Real(statePriority=0, units="S")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Affinity.md": "# \`Affinity\`

## Usage

\`Affinity()\`

## Source
\`\`\`dyad
type Affinity = Real(units="J/mol")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Affinity = Real(statePriority=0, units="J/mol")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AlfvenNumber.md": "# \`AlfvenNumber\`

## Usage

\`AlfvenNumber()\`

## Source
\`\`\`dyad
type AlfvenNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AlfvenNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AlphaDisintegrationEnergy.md": "# \`AlphaDisintegrationEnergy\`

## Usage

\`AlphaDisintegrationEnergy()\`

## Source
\`\`\`dyad
type AlphaDisintegrationEnergy = Real(units="J")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AlphaDisintegrationEnergy = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AmountOfSubstance.md": "# \`AmountOfSubstance\`

## Usage

\`AmountOfSubstance()\`

## Source
\`\`\`dyad
type AmountOfSubstance = Real(units="mol", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AmountOfSubstance = Real(statePriority=0, min=0, units="mol")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AmplitudeLevelDifference.md": "# \`AmplitudeLevelDifference\`

## Usage

\`AmplitudeLevelDifference()\`

## Source
\`\`\`dyad
type AmplitudeLevelDifference = Real(units="dB")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AmplitudeLevelDifference = Real(statePriority=0, units="dB")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Angle.md": "# \`Angle\`

## Usage

\`Angle()\`

## Source
\`\`\`dyad
type Angle = Real(units="rad", displayUnits="deg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Angle = Real(statePriority=0, units="rad", displayUnits="deg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AngularAcceleration.md": "# \`AngularAcceleration\`

## Usage

\`AngularAcceleration()\`

## Source
\`\`\`dyad
type AngularAcceleration = Real(units="rad/s2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AngularAcceleration = Real(statePriority=0, units="rad/s2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AngularCrossSection.md": "# \`AngularCrossSection\`

## Usage

\`AngularCrossSection()\`

## Source
\`\`\`dyad
type AngularCrossSection = Real(units="m2/sr")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AngularCrossSection = Real(statePriority=0, units="m2/sr")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AngularFrequency.md": "# \`AngularFrequency\`

## Usage

\`AngularFrequency()\`

## Source
\`\`\`dyad
type AngularFrequency = Real(units="rad/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AngularFrequency = Real(statePriority=0, units="rad/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AngularImpulse.md": "# \`AngularImpulse\`

## Usage

\`AngularImpulse()\`

## Source
\`\`\`dyad
type AngularImpulse = Real(units="N.m.s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AngularImpulse = Real(statePriority=0, units="N.m.s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AngularMomentum.md": "# \`AngularMomentum\`

## Usage

\`AngularMomentum()\`

## Source
\`\`\`dyad
type AngularMomentum = Real(units="kg.m2/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AngularMomentum = Real(statePriority=0, units="kg.m2/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AngularMomentumFlux.md": "# \`AngularMomentumFlux\`

## Usage

\`AngularMomentumFlux()\`

## Source
\`\`\`dyad
type AngularMomentumFlux = Real(units="N.m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AngularMomentumFlux = Real(statePriority=0, units="N.m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AngularVelocity.md": "# \`AngularVelocity\`

## Usage

\`AngularVelocity()\`

## Source
\`\`\`dyad
type AngularVelocity = Real(units="rad/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AngularVelocity = Real(statePriority=0, units="rad/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AngularWaveNumber.md": "# \`AngularWaveNumber\`

## Usage

\`AngularWaveNumber()\`

## Source
\`\`\`dyad
type AngularWaveNumber = Real(units="rad/m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AngularWaveNumber = Real(statePriority=0, units="rad/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ApparentPower.md": "# \`ApparentPower\`

## Usage

\`ApparentPower()\`

## Source
\`\`\`dyad
type ApparentPower = Real(units="VA")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ApparentPower = Real(statePriority=0, units="VA")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Area.md": "# \`Area\`

## Usage

\`Area()\`

## Source
\`\`\`dyad
type Area = Real(units="m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Area = Real(statePriority=0, units="m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AtomicAttenuationCoefficient.md": "# \`AtomicAttenuationCoefficient\`

## Usage

\`AtomicAttenuationCoefficient()\`

## Source
\`\`\`dyad
type AtomicAttenuationCoefficient = Real(units="m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AtomicAttenuationCoefficient = Real(statePriority=0, units="m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AtomicMassConstant.md": "# \`AtomicMassConstant\`

## Usage

\`AtomicMassConstant()\`

## Source
\`\`\`dyad
type AtomicMassConstant = Real(units="kg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AtomicMassConstant = Real(statePriority=0, units="kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/AttenuationCoefficient.md": "# \`AttenuationCoefficient\`

## Usage

\`AttenuationCoefficient()\`

## Source
\`\`\`dyad
type AttenuationCoefficient = Real(units="m-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type AttenuationCoefficient = Real(statePriority=0, units="m-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/BetaDisintegrationEnergy.md": "# \`BetaDisintegrationEnergy\`

## Usage

\`BetaDisintegrationEnergy()\`

## Source
\`\`\`dyad
type BetaDisintegrationEnergy = Real(units="J")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type BetaDisintegrationEnergy = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/BindingFraction.md": "# \`BindingFraction\`

## Usage

\`BindingFraction()\`

## Source
\`\`\`dyad
type BindingFraction = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type BindingFraction = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/BiotNumber.md": "# \`BiotNumber\`

## Usage

\`BiotNumber()\`

## Source
\`\`\`dyad
type BiotNumber = NusseltNumber
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type BiotNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/BohrMagneton.md": "# \`BohrMagneton\`

## Usage

\`BohrMagneton()\`

## Source
\`\`\`dyad
type BohrMagneton = MagneticMomentOfParticle
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type BohrMagneton = Real(statePriority=0, units="A.m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/BraggAngle.md": "# \`BraggAngle\`

## Usage

\`BraggAngle()\`

## Source
\`\`\`dyad
type BraggAngle = Angle
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type BraggAngle = Real(statePriority=0, units="rad", displayUnits="deg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Breadth.md": "# \`Breadth\`

## Usage

\`Breadth()\`

## Source
\`\`\`dyad
type Breadth = Length(min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Breadth = Real(statePriority=0, min=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/BulkModulus.md": "# \`BulkModulus\`

## Usage

\`BulkModulus()\`

## Source
\`\`\`dyad
type BulkModulus = AbsolutePressure
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type BulkModulus = Real(statePriority=0, min=0, units="Pa", displayUnits="bar")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/CIESpectralTristimulusValues.md": "# \`CIESpectralTristimulusValues\`

## Usage

\`CIESpectralTristimulusValues()\`

## Source
\`\`\`dyad
type CIESpectralTristimulusValues = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type CIESpectralTristimulusValues = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/CanonicalPartitionFunction.md": "# \`CanonicalPartitionFunction\`

## Usage

\`CanonicalPartitionFunction()\`

## Source
\`\`\`dyad
type CanonicalPartitionFunction = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type CanonicalPartitionFunction = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Capacitance.md": "# \`Capacitance\`

## Usage

\`Capacitance()\`

## Source
\`\`\`dyad
type Capacitance = Real(units="F", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Capacitance = Real(statePriority=0, min=0, units="F")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/CarrierLifeTime.md": "# \`CarrierLifeTime\`

## Usage

\`CarrierLifeTime()\`

## Source
\`\`\`dyad
type CarrierLifeTime = Time
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type CarrierLifeTime = Real(statePriority=0, units="s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Charge.md": "# \`Charge\`

## Usage

\`Charge()\`

## Source
\`\`\`dyad
type Charge = ElectricCharge
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Charge = Real(statePriority=0, units="C")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ChargeNumberOfIon.md": "# \`ChargeNumberOfIon\`

## Usage

\`ChargeNumberOfIon()\`

## Source
\`\`\`dyad
type ChargeNumberOfIon = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ChargeNumberOfIon = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ChemicalPotential.md": "# \`ChemicalPotential\`

## Usage

\`ChemicalPotential()\`

## Source
\`\`\`dyad
type ChemicalPotential = Real(units="J/mol")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ChemicalPotential = Real(statePriority=0, units="J/mol")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ChromaticityCoordinates.md": "# \`ChromaticityCoordinates\`

## Usage

\`ChromaticityCoordinates()\`

## Source
\`\`\`dyad
type ChromaticityCoordinates = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ChromaticityCoordinates = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/CircularWaveNumber.md": "# \`CircularWaveNumber\`

## Usage

\`CircularWaveNumber()\`

## Source
\`\`\`dyad
type CircularWaveNumber = Real(units="m-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type CircularWaveNumber = Real(statePriority=0, units="m-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/CoefficientOfFriction.md": "# \`CoefficientOfFriction\`

## Usage

\`CoefficientOfFriction()\`

## Source
\`\`\`dyad
type CoefficientOfFriction = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type CoefficientOfFriction = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/CoefficientOfHeatTransfer.md": "# \`CoefficientOfHeatTransfer\`

## Usage

\`CoefficientOfHeatTransfer()\`

## Source
\`\`\`dyad
type CoefficientOfHeatTransfer = Real(units="W/(m2.K)")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type CoefficientOfHeatTransfer = Real(statePriority=0, units="W/(m2.K)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/CoherenceLength.md": "# \`CoherenceLength\`

## Usage

\`CoherenceLength()\`

## Source
\`\`\`dyad
type CoherenceLength = Length
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type CoherenceLength = Real(statePriority=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Compressibility.md": "# \`Compressibility\`

## Usage

\`Compressibility()\`

## Source
\`\`\`dyad
type Compressibility = Real(units="1/Pa")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Compressibility = Real(statePriority=0, units="1/Pa")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ComptonWavelength.md": "# \`ComptonWavelength\`

## Usage

\`ComptonWavelength()\`

## Source
\`\`\`dyad
type ComptonWavelength = Real(units="m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ComptonWavelength = Real(statePriority=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Concentration.md": "# \`Concentration\`

## Usage

\`Concentration()\`

## Source
\`\`\`dyad
type Concentration = Real(units="mol/m3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Concentration = Real(statePriority=0, units="mol/m3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Conductance.md": "# \`Conductance\`

## Usage

\`Conductance()\`

## Source
\`\`\`dyad
type Conductance = Real(units="S")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Conductance = Real(statePriority=0, units="S")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Conductivity.md": "# \`Conductivity\`

## Usage

\`Conductivity()\`

## Source
\`\`\`dyad
type Conductivity = Real(units="S/m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Conductivity = Real(statePriority=0, units="S/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/CouplingCoefficient.md": "# \`CouplingCoefficient\`

## Usage

\`CouplingCoefficient()\`

## Source
\`\`\`dyad
type CouplingCoefficient = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type CouplingCoefficient = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/CowlingNumber.md": "# \`CowlingNumber\`

## Usage

\`CowlingNumber()\`

## Source
\`\`\`dyad
type CowlingNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type CowlingNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/CrossSection.md": "# \`CrossSection\`

## Usage

\`CrossSection()\`

## Source
\`\`\`dyad
type CrossSection = Real(units="m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type CrossSection = Real(statePriority=0, units="m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/CubicExpansionCoefficient.md": "# \`CubicExpansionCoefficient\`

## Usage

\`CubicExpansionCoefficient()\`

## Source
\`\`\`dyad
type CubicExpansionCoefficient = Real(units="1/K")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type CubicExpansionCoefficient = Real(statePriority=0, units="1/K")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/CurieTemperature.md": "# \`CurieTemperature\`

## Usage

\`CurieTemperature()\`

## Source
\`\`\`dyad
type CurieTemperature = ThermodynamicTemperature
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type CurieTemperature = Real(statePriority=0, min=0, units="K", displayUnits="degC")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Current.md": "# \`Current\`

## Usage

\`Current()\`

## Source
\`\`\`dyad
type Current = ElectricCurrent
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Current = Real(statePriority=0, units="A")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/CurrentDensity.md": "# \`CurrentDensity\`

## Usage

\`CurrentDensity()\`

## Source
\`\`\`dyad
type CurrentDensity = Real(units="A/m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type CurrentDensity = Real(statePriority=0, units="A/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/CurrentDensityOfParticles.md": "# \`CurrentDensityOfParticles\`

## Usage

\`CurrentDensityOfParticles()\`

## Source
\`\`\`dyad
type CurrentDensityOfParticles = Real(units="m-2.s-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type CurrentDensityOfParticles = Real(statePriority=0, units="m-2.s-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/CurrentLinkage.md": "# \`CurrentLinkage\`

## Usage

\`CurrentLinkage()\`

## Source
\`\`\`dyad
type CurrentLinkage = Real(units="A")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type CurrentLinkage = Real(statePriority=0, units="A")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/CurrentSlope.md": "# \`CurrentSlope\`

## Usage

\`CurrentSlope()\`

## Source
\`\`\`dyad
type CurrentSlope = Real(units="A/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type CurrentSlope = Real(statePriority=0, units="A/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/CyclotronAngularFrequency.md": "# \`CyclotronAngularFrequency\`

## Usage

\`CyclotronAngularFrequency()\`

## Source
\`\`\`dyad
type CyclotronAngularFrequency = Real(units="s-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type CyclotronAngularFrequency = Real(statePriority=0, units="s-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Damping.md": "# \`Damping\`

## Usage

\`Damping()\`

## Source
\`\`\`dyad
type Damping = DampingCoefficient
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Damping = Real(statePriority=0, units="s-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DampingCoefficient.md": "# \`DampingCoefficient\`

## Usage

\`DampingCoefficient()\`

## Source
\`\`\`dyad
type DampingCoefficient = Real(units="s-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DampingCoefficient = Real(statePriority=0, units="s-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DebyeCircularFrequency.md": "# \`DebyeCircularFrequency\`

## Usage

\`DebyeCircularFrequency()\`

## Source
\`\`\`dyad
type DebyeCircularFrequency = Real(units="s-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DebyeCircularFrequency = Real(statePriority=0, units="s-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DebyeCircularWaveNumber.md": "# \`DebyeCircularWaveNumber\`

## Usage

\`DebyeCircularWaveNumber()\`

## Source
\`\`\`dyad
type DebyeCircularWaveNumber = Real(units="m-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DebyeCircularWaveNumber = Real(statePriority=0, units="m-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DebyeTemperature.md": "# \`DebyeTemperature\`

## Usage

\`DebyeTemperature()\`

## Source
\`\`\`dyad
type DebyeTemperature = ThermodynamicTemperature
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DebyeTemperature = Real(statePriority=0, min=0, units="K", displayUnits="degC")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DebyeWallerFactor.md": "# \`DebyeWallerFactor\`

## Usage

\`DebyeWallerFactor()\`

## Source
\`\`\`dyad
type DebyeWallerFactor = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DebyeWallerFactor = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DecayConstant.md": "# \`DecayConstant\`

## Usage

\`DecayConstant()\`

## Source
\`\`\`dyad
type DecayConstant = Real(units="s-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DecayConstant = Real(statePriority=0, units="s-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DegreeOfDissociation.md": "# \`DegreeOfDissociation\`

## Usage

\`DegreeOfDissociation()\`

## Source
\`\`\`dyad
type DegreeOfDissociation = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DegreeOfDissociation = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Density.md": "# \`Density\`

## Usage

\`Density()\`

## Source
\`\`\`dyad
type Density = Real(units="kg/m3", displayUnits="g/cm3", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Density = Real(statePriority=0, min=0, units="kg/m3", displayUnits="g/cm3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DensityOfHeatFlowRate.md": "# \`DensityOfHeatFlowRate\`

## Usage

\`DensityOfHeatFlowRate()\`

## Source
\`\`\`dyad
type DensityOfHeatFlowRate = Real(units="W/m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DensityOfHeatFlowRate = Real(statePriority=0, units="W/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DensityOfStates.md": "# \`DensityOfStates\`

## Usage

\`DensityOfStates()\`

## Source
\`\`\`dyad
type DensityOfStates = Real(units="J-1/m-3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DensityOfStates = Real(statePriority=0, units="J-1/m-3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DerDensityByEnthalpy.md": "# \`DerDensityByEnthalpy\`

## Usage

\`DerDensityByEnthalpy()\`

## Source
\`\`\`dyad
type DerDensityByEnthalpy = Real(units="kg.s2/m5")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DerDensityByEnthalpy = Real(statePriority=0, units="kg.s2/m5")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DerDensityByPressure.md": "# \`DerDensityByPressure\`

## Usage

\`DerDensityByPressure()\`

## Source
\`\`\`dyad
type DerDensityByPressure = Real(units="s2/m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DerDensityByPressure = Real(statePriority=0, units="s2/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DerDensityByTemperature.md": "# \`DerDensityByTemperature\`

## Usage

\`DerDensityByTemperature()\`

## Source
\`\`\`dyad
type DerDensityByTemperature = Real(units="kg/(m3.K)")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DerDensityByTemperature = Real(statePriority=0, units="kg/(m3.K)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DerEnergyByDensity.md": "# \`DerEnergyByDensity\`

## Usage

\`DerEnergyByDensity()\`

## Source
\`\`\`dyad
type DerEnergyByDensity = Real(units="J.m3/kg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DerEnergyByDensity = Real(statePriority=0, units="J.m3/kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DerEnergyByPressure.md": "# \`DerEnergyByPressure\`

## Usage

\`DerEnergyByPressure()\`

## Source
\`\`\`dyad
type DerEnergyByPressure = Real(units="J.m.s2/kg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DerEnergyByPressure = Real(statePriority=0, units="J.m.s2/kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DerEnthalpyByPressure.md": "# \`DerEnthalpyByPressure\`

## Usage

\`DerEnthalpyByPressure()\`

## Source
\`\`\`dyad
type DerEnthalpyByPressure = Real(units="J.m.s2/kg2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DerEnthalpyByPressure = Real(statePriority=0, units="J.m.s2/kg2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Diameter.md": "# \`Diameter\`

## Usage

\`Diameter()\`

## Source
\`\`\`dyad
type Diameter = Length(min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Diameter = Real(statePriority=0, min=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DiffusionArea.md": "# \`DiffusionArea\`

## Usage

\`DiffusionArea()\`

## Source
\`\`\`dyad
type DiffusionArea = Real(units="m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DiffusionArea = Real(statePriority=0, units="m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DiffusionCoefficient.md": "# \`DiffusionCoefficient\`

## Usage

\`DiffusionCoefficient()\`

## Source
\`\`\`dyad
type DiffusionCoefficient = Real(units="m2/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DiffusionCoefficient = Real(statePriority=0, units="m2/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DiffusionLength.md": "# \`DiffusionLength\`

## Usage

\`DiffusionLength()\`

## Source
\`\`\`dyad
type DiffusionLength = Length
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DiffusionLength = Real(statePriority=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DirectionalSpectralEmissivity.md": "# \`DirectionalSpectralEmissivity\`

## Usage

\`DirectionalSpectralEmissivity()\`

## Source
\`\`\`dyad
type DirectionalSpectralEmissivity = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DirectionalSpectralEmissivity = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DissipationCoefficient.md": "# \`DissipationCoefficient\`

## Usage

\`DissipationCoefficient()\`

## Source
\`\`\`dyad
type DissipationCoefficient = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DissipationCoefficient = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Distance.md": "# \`Distance\`

## Usage

\`Distance()\`

## Source
\`\`\`dyad
type Distance = Length(min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Distance = Real(statePriority=0, min=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DonorIonizationEnergy.md": "# \`DonorIonizationEnergy\`

## Usage

\`DonorIonizationEnergy()\`

## Source
\`\`\`dyad
type DonorIonizationEnergy = Real(units="eV")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DonorIonizationEnergy = Real(statePriority=0, units="eV")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DonorNumberDensity.md": "# \`DonorNumberDensity\`

## Usage

\`DonorNumberDensity()\`

## Source
\`\`\`dyad
type DonorNumberDensity = Real(units="m-3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DonorNumberDensity = Real(statePriority=0, units="m-3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DoseEquivalent.md": "# \`DoseEquivalent\`

## Usage

\`DoseEquivalent()\`

## Source
\`\`\`dyad
type DoseEquivalent = Real(units="Sv")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DoseEquivalent = Real(statePriority=0, units="Sv")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Duration.md": "# \`Duration\`

## Usage

\`Duration()\`

## Source
\`\`\`dyad
type Duration = Time
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Duration = Real(statePriority=0, units="s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/DynamicViscosity.md": "# \`DynamicViscosity\`

## Usage

\`DynamicViscosity()\`

## Source
\`\`\`dyad
type DynamicViscosity = Real(units="Pa.s", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type DynamicViscosity = Real(statePriority=0, min=0, units="Pa.s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/EffectiveMass.md": "# \`EffectiveMass\`

## Usage

\`EffectiveMass()\`

## Source
\`\`\`dyad
type EffectiveMass = Mass
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type EffectiveMass = Real(statePriority=0, min=0, units="kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Efficiency.md": "# \`Efficiency\`

## Usage

\`Efficiency()\`

## Source
\`\`\`dyad
type Efficiency = Real(units="1", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Efficiency = Real(statePriority=0, min=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectricCharge.md": "# \`ElectricCharge\`

## Usage

\`ElectricCharge()\`

## Source
\`\`\`dyad
type ElectricCharge = Real(units="C")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectricCharge = Real(statePriority=0, units="C")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectricCurrent.md": "# \`ElectricCurrent\`

## Usage

\`ElectricCurrent()\`

## Source
\`\`\`dyad
type ElectricCurrent = Real(units="A")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectricCurrent = Real(statePriority=0, units="A")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectricDipoleMoment.md": "# \`ElectricDipoleMoment\`

## Usage

\`ElectricDipoleMoment()\`

## Source
\`\`\`dyad
type ElectricDipoleMoment = Real(units="C.m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectricDipoleMoment = Real(statePriority=0, units="C.m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectricDipoleMomentOfMolecule.md": "# \`ElectricDipoleMomentOfMolecule\`

## Usage

\`ElectricDipoleMomentOfMolecule()\`

## Source
\`\`\`dyad
type ElectricDipoleMomentOfMolecule = Real(units="C.m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectricDipoleMomentOfMolecule = Real(statePriority=0, units="C.m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectricFieldStrength.md": "# \`ElectricFieldStrength\`

## Usage

\`ElectricFieldStrength()\`

## Source
\`\`\`dyad
type ElectricFieldStrength = Real(units="V/m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectricFieldStrength = Real(statePriority=0, units="V/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectricFlux.md": "# \`ElectricFlux\`

## Usage

\`ElectricFlux()\`

## Source
\`\`\`dyad
type ElectricFlux = Real(units="C")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectricFlux = Real(statePriority=0, units="C")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectricFluxDensity.md": "# \`ElectricFluxDensity\`

## Usage

\`ElectricFluxDensity()\`

## Source
\`\`\`dyad
type ElectricFluxDensity = Real(units="C/m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectricFluxDensity = Real(statePriority=0, units="C/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectricPolarizabilityOfAMolecule.md": "# \`ElectricPolarizabilityOfAMolecule\`

## Usage

\`ElectricPolarizabilityOfAMolecule()\`

## Source
\`\`\`dyad
type ElectricPolarizabilityOfAMolecule = Real(units="C.m2/V")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectricPolarizabilityOfAMolecule = Real(statePriority=0, units="C.m2/V")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectricPolarization.md": "# \`ElectricPolarization\`

## Usage

\`ElectricPolarization()\`

## Source
\`\`\`dyad
type ElectricPolarization = Real(units="C/m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectricPolarization = Real(statePriority=0, units="C/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectricPotential.md": "# \`ElectricPotential\`

## Usage

\`ElectricPotential()\`

## Source
\`\`\`dyad
type ElectricPotential = Real(units="V")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectricPotential = Real(statePriority=0, units="V")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectricSusceptibility.md": "# \`ElectricSusceptibility\`

## Usage

\`ElectricSusceptibility()\`

## Source
\`\`\`dyad
type ElectricSusceptibility = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectricSusceptibility = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectricalForceConstant.md": "# \`ElectricalForceConstant\`

## Usage

\`ElectricalForceConstant()\`

## Source
\`\`\`dyad
type ElectricalForceConstant = Real(units="N/A")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectricalForceConstant = Real(statePriority=0, units="N/A")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectricalTorqueConstant.md": "# \`ElectricalTorqueConstant\`

## Usage

\`ElectricalTorqueConstant()\`

## Source
\`\`\`dyad
type ElectricalTorqueConstant = Real(units="N.m/A")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectricalTorqueConstant = Real(statePriority=0, units="N.m/A")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Electrization.md": "# \`Electrization\`

## Usage

\`Electrization()\`

## Source
\`\`\`dyad
type Electrization = Real(units="V/m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Electrization = Real(statePriority=0, units="V/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectrolyticConductivity.md": "# \`ElectrolyticConductivity\`

## Usage

\`ElectrolyticConductivity()\`

## Source
\`\`\`dyad
type ElectrolyticConductivity = Real(units="S/m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectrolyticConductivity = Real(statePriority=0, units="S/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectromagneticEnergyDensity.md": "# \`ElectromagneticEnergyDensity\`

## Usage

\`ElectromagneticEnergyDensity()\`

## Source
\`\`\`dyad
type ElectromagneticEnergyDensity = Real(units="J/m3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectromagneticEnergyDensity = Real(statePriority=0, units="J/m3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectromagneticMoment.md": "# \`ElectromagneticMoment\`

## Usage

\`ElectromagneticMoment()\`

## Source
\`\`\`dyad
type ElectromagneticMoment = Real(units="A.m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectromagneticMoment = Real(statePriority=0, units="A.m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectromotiveForce.md": "# \`ElectromotiveForce\`

## Usage

\`ElectromotiveForce()\`

## Source
\`\`\`dyad
type ElectromotiveForce = ElectricPotential
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectromotiveForce = Real(statePriority=0, units="V")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectronNumberDensity.md": "# \`ElectronNumberDensity\`

## Usage

\`ElectronNumberDensity()\`

## Source
\`\`\`dyad
type ElectronNumberDensity = Real(units="m-3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectronNumberDensity = Real(statePriority=0, units="m-3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElectronRadius.md": "# \`ElectronRadius\`

## Usage

\`ElectronRadius()\`

## Source
\`\`\`dyad
type ElectronRadius = Real(units="m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElectronRadius = Real(statePriority=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ElementaryCharge.md": "# \`ElementaryCharge\`

## Usage

\`ElementaryCharge()\`

## Source
\`\`\`dyad
type ElementaryCharge = Real(units="C")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ElementaryCharge = Real(statePriority=0, units="C")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Emissivity.md": "# \`Emissivity\`

## Usage

\`Emissivity()\`

## Source
\`\`\`dyad
type Emissivity = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Emissivity = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/EmptyComponent.md": "\`\`\`@raw html

      <div style="float: right;width: 20%;max-width: 10vw; margin-left: 20px">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
    <style>
    text {
      transform-origin: center center;
    }
    </style><g transform="translate(0 0) scale(1.0) rotate(0)" transform-origin="center center"><svg xmlns="http://www.w3.org/2000/svg" id="a" width="1000" height="1000" viewBox="0 0 1000 1000"
><defs><style>.b {fill: none;}.b,.c {stroke: #b6b4cf;stroke-linejoin: round;stroke-width: 8px;}.c,.d {  fill: #fff;}.e {fill: #6e6ea1;}.e,.d {stroke-width: 0px;}</style>
  </defs><rect class="d" x="4" y="4" width="992" height="992" /><path class="e" d="M992,8v984H8V8h984M1000,0H0v1000h1000V0h0Z" /><path class="b"
    d="M361.83,226.44c-62.23-3.99-115.91,43.22-119.9,105.45-3.99,62.23,43.22,115.91,105.45,119.9,62.23,3.99,115.91-43.22,119.9-105.45,3.99-62.23-43.22-115.91-105.45-119.9ZM413.76,342.91c-2.09,32.67-30.28,57.46-62.95,55.36-32.67-2.1-57.46-30.28-55.36-62.95,2.09-32.67,30.28-57.46,62.95-55.36,32.67,2.09,57.45,30.28,55.36,62.95Z"
  /><circle class="b" cx="353.85" cy="682.11" r="80.62" /><circle class="b" cx="652.79" cy="644.36" r="52.47" /><polyline class="b" points="410.2 624.82 698.58 340.68 464.78 340.68" /><line class="b" x1="617.63" y1="609.81" x2="432.03" y2="420.13" /><circle class="c" cx="696.98" cy="340.44" r="54.47" />
</svg></g>
    <text x="500" y="1100" transform="rotate(0, 0, 600)" fill="black" font-size="200" font-weight="200" dominant-baseline="central" text-anchor="middle">$(instance)</text>
    </svg>
      <span style="width: 100%; text-align: center; display:inline-block"><code>EmptyComponent</code> Icon</span>
      </div>
    
\`\`\`
# \`EmptyComponent\`

## Usage

\`EmptyComponent()\`







## Source
\`\`\`dyad
partial component EmptyComponent
end
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>

\`\`\`
\`\`\`dyad
partial component EmptyComponent
metadata {}
end
\`\`\`
\`\`\`@raw html
</details>
\`\`\`
\`\`\`@raw html

<br></br>

\`\`\`

## Test Cases

No test cases defined.


## Related

- Examples
- Experiments
- Analyses",
  "src/types/Energy.md": "# \`Energy\`

## Usage

\`Energy()\`

## Source
\`\`\`dyad
type Energy = Real(units="J")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Energy = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/EnergyDensity.md": "# \`EnergyDensity\`

## Usage

\`EnergyDensity()\`

## Source
\`\`\`dyad
type EnergyDensity = Real(units="J/m3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type EnergyDensity = Real(statePriority=0, units="J/m3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/EnergyFlowRate.md": "# \`EnergyFlowRate\`

## Usage

\`EnergyFlowRate()\`

## Source
\`\`\`dyad
type EnergyFlowRate = Power
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type EnergyFlowRate = Real(statePriority=0, units="W")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/EnergyFluence.md": "# \`EnergyFluence\`

## Usage

\`EnergyFluence()\`

## Source
\`\`\`dyad
type EnergyFluence = Real(units="J/m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type EnergyFluence = Real(statePriority=0, units="J/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/EnergyFluenceRate.md": "# \`EnergyFluenceRate\`

## Usage

\`EnergyFluenceRate()\`

## Source
\`\`\`dyad
type EnergyFluenceRate = Real(units="W/m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type EnergyFluenceRate = Real(statePriority=0, units="W/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/EnergyImparted.md": "# \`EnergyImparted\`

## Usage

\`EnergyImparted()\`

## Source
\`\`\`dyad
type EnergyImparted = Real(units="J")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type EnergyImparted = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Enthalpy.md": "# \`Enthalpy\`

## Usage

\`Enthalpy()\`

## Source
\`\`\`dyad
type Enthalpy = Heat
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Enthalpy = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/EnthalpyFlowRate.md": "# \`EnthalpyFlowRate\`

## Usage

\`EnthalpyFlowRate()\`

## Source
\`\`\`dyad
type EnthalpyFlowRate = Real(units="W")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type EnthalpyFlowRate = Real(statePriority=0, units="W")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Entropy.md": "# \`Entropy\`

## Usage

\`Entropy()\`

## Source
\`\`\`dyad
type Entropy = Real(units="J/K")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Entropy = Real(statePriority=0, units="J/K")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/EntropyFlowRate.md": "# \`EntropyFlowRate\`

## Usage

\`EntropyFlowRate()\`

## Source
\`\`\`dyad
type EntropyFlowRate = Real(units="J/(K.s)")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type EntropyFlowRate = Real(statePriority=0, units="J/(K.s)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/EquivalentAbsorptionArea.md": "# \`EquivalentAbsorptionArea\`

## Usage

\`EquivalentAbsorptionArea()\`

## Source
\`\`\`dyad
type EquivalentAbsorptionArea = Real(units="m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type EquivalentAbsorptionArea = Real(statePriority=0, units="m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/EulerNumber.md": "# \`EulerNumber\`

## Usage

\`EulerNumber()\`

## Source
\`\`\`dyad
type EulerNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type EulerNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ExchangeIntegral.md": "# \`ExchangeIntegral\`

## Usage

\`ExchangeIntegral()\`

## Source
\`\`\`dyad
type ExchangeIntegral = Real(units="eV")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ExchangeIntegral = Real(statePriority=0, units="eV")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Exposure.md": "# \`Exposure\`

## Usage

\`Exposure()\`

## Source
\`\`\`dyad
type Exposure = Real(units="C/kg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Exposure = Real(statePriority=0, units="C/kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ExposureRate.md": "# \`ExposureRate\`

## Usage

\`ExposureRate()\`

## Source
\`\`\`dyad
type ExposureRate = Real(units="C/(kg.s)")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ExposureRate = Real(statePriority=0, units="C/(kg.s)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/FaradayConstant.md": "# \`FaradayConstant\`

## Usage

\`FaradayConstant()\`

## Source
\`\`\`dyad
type FaradayConstant = Real(units="C/mol")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type FaradayConstant = Real(statePriority=0, units="C/mol")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/FastFissionFactor.md": "# \`FastFissionFactor\`

## Usage

\`FastFissionFactor()\`

## Source
\`\`\`dyad
type FastFissionFactor = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type FastFissionFactor = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/FermiCircularWaveNumber.md": "# \`FermiCircularWaveNumber\`

## Usage

\`FermiCircularWaveNumber()\`

## Source
\`\`\`dyad
type FermiCircularWaveNumber = Real(units="m-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type FermiCircularWaveNumber = Real(statePriority=0, units="m-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/FermiEnergy.md": "# \`FermiEnergy\`

## Usage

\`FermiEnergy()\`

## Source
\`\`\`dyad
type FermiEnergy = Real(units="eV")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type FermiEnergy = Real(statePriority=0, units="eV")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/FermiTemperature.md": "# \`FermiTemperature\`

## Usage

\`FermiTemperature()\`

## Source
\`\`\`dyad
type FermiTemperature = ThermodynamicTemperature
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type FermiTemperature = Real(statePriority=0, min=0, units="K", displayUnits="degC")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/FluxiodQuantum.md": "# \`FluxiodQuantum\`

## Usage

\`FluxiodQuantum()\`

## Source
\`\`\`dyad
type FluxiodQuantum = Real(units="Wb")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type FluxiodQuantum = Real(statePriority=0, units="Wb")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Force.md": "# \`Force\`

## Usage

\`Force()\`

## Source
\`\`\`dyad
type Force = Real(units="N")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Force = Real(statePriority=0, units="N")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/FourierNumber.md": "# \`FourierNumber\`

## Usage

\`FourierNumber()\`

## Source
\`\`\`dyad
type FourierNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type FourierNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/FourierNumberOfMassTransfer.md": "# \`FourierNumberOfMassTransfer\`

## Usage

\`FourierNumberOfMassTransfer()\`

## Source
\`\`\`dyad
type FourierNumberOfMassTransfer = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type FourierNumberOfMassTransfer = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Frequency.md": "# \`Frequency\`

## Usage

\`Frequency()\`

## Source
\`\`\`dyad
type Frequency = Real(units="Hz")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Frequency = Real(statePriority=0, units="Hz")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/FroudeNumber.md": "# \`FroudeNumber\`

## Usage

\`FroudeNumber()\`

## Source
\`\`\`dyad
type FroudeNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type FroudeNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Fugacity.md": "# \`Fugacity\`

## Usage

\`Fugacity()\`

## Source
\`\`\`dyad
type Fugacity = Real(units="Pa")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Fugacity = Real(statePriority=0, units="Pa")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/GFactorOfAtom.md": "# \`GFactorOfAtom\`

## Usage

\`GFactorOfAtom()\`

## Source
\`\`\`dyad
type GFactorOfAtom = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type GFactorOfAtom = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/GFactorOfNucleus.md": "# \`GFactorOfNucleus\`

## Usage

\`GFactorOfNucleus()\`

## Source
\`\`\`dyad
type GFactorOfNucleus = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type GFactorOfNucleus = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/GapEnergy.md": "# \`GapEnergy\`

## Usage

\`GapEnergy()\`

## Source
\`\`\`dyad
type GapEnergy = Real(units="eV")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type GapEnergy = Real(statePriority=0, units="eV")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/GibbsFreeEnergy.md": "# \`GibbsFreeEnergy\`

## Usage

\`GibbsFreeEnergy()\`

## Source
\`\`\`dyad
type GibbsFreeEnergy = Heat
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type GibbsFreeEnergy = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/GrandCanonicalPartitionFunction.md": "# \`GrandCanonicalPartitionFunction\`

## Usage

\`GrandCanonicalPartitionFunction()\`

## Source
\`\`\`dyad
type GrandCanonicalPartitionFunction = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type GrandCanonicalPartitionFunction = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/GrashofNumber.md": "# \`GrashofNumber\`

## Usage

\`GrashofNumber()\`

## Source
\`\`\`dyad
type GrashofNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type GrashofNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/GrashofNumberOfMassTransfer.md": "# \`GrashofNumberOfMassTransfer\`

## Usage

\`GrashofNumberOfMassTransfer()\`

## Source
\`\`\`dyad
type GrashofNumberOfMassTransfer = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type GrashofNumberOfMassTransfer = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/GrueneisenParameter.md": "# \`GrueneisenParameter\`

## Usage

\`GrueneisenParameter()\`

## Source
\`\`\`dyad
type GrueneisenParameter = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type GrueneisenParameter = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/GyromagneticCoefficient.md": "# \`GyromagneticCoefficient\`

## Usage

\`GyromagneticCoefficient()\`

## Source
\`\`\`dyad
type GyromagneticCoefficient = Real(units="A.m2/(J.s)")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type GyromagneticCoefficient = Real(statePriority=0, units="A.m2/(J.s)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/HalfLife.md": "# \`HalfLife\`

## Usage

\`HalfLife()\`

## Source
\`\`\`dyad
type HalfLife = Real(units="s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type HalfLife = Real(statePriority=0, units="s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/HalfThickness.md": "# \`HalfThickness\`

## Usage

\`HalfThickness()\`

## Source
\`\`\`dyad
type HalfThickness = Real(units="m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type HalfThickness = Real(statePriority=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/HallCoefficient.md": "# \`HallCoefficient\`

## Usage

\`HallCoefficient()\`

## Source
\`\`\`dyad
type HallCoefficient = Real(units="m3/C")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type HallCoefficient = Real(statePriority=0, units="m3/C")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/HartmannNumber.md": "# \`HartmannNumber\`

## Usage

\`HartmannNumber()\`

## Source
\`\`\`dyad
type HartmannNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type HartmannNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/HartreeEnergy.md": "# \`HartreeEnergy\`

## Usage

\`HartreeEnergy()\`

## Source
\`\`\`dyad
type HartreeEnergy = Real(units="J")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type HartreeEnergy = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Heat.md": "# \`Heat\`

## Usage

\`Heat()\`

## Source
\`\`\`dyad
type Heat = Real(units="J")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Heat = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/HeatCapacity.md": "# \`HeatCapacity\`

## Usage

\`HeatCapacity()\`

## Source
\`\`\`dyad
type HeatCapacity = Real(units="J/K")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type HeatCapacity = Real(statePriority=0, units="J/K")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/HeatFlowRate.md": "# \`HeatFlowRate\`

## Usage

\`HeatFlowRate()\`

## Source
\`\`\`dyad
type HeatFlowRate = Real(units="W")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type HeatFlowRate = Real(statePriority=0, units="W")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/HeatFlux.md": "# \`HeatFlux\`

## Usage

\`HeatFlux()\`

## Source
\`\`\`dyad
type HeatFlux = Real(units="W/m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type HeatFlux = Real(statePriority=0, units="W/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Height.md": "# \`Height\`

## Usage

\`Height()\`

## Source
\`\`\`dyad
type Height = Length(min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Height = Real(statePriority=0, min=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/HelmholtzFreeEnergy.md": "# \`HelmholtzFreeEnergy\`

## Usage

\`HelmholtzFreeEnergy()\`

## Source
\`\`\`dyad
type HelmholtzFreeEnergy = Heat
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type HelmholtzFreeEnergy = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/HoleNumberDensity.md": "# \`HoleNumberDensity\`

## Usage

\`HoleNumberDensity()\`

## Source
\`\`\`dyad
type HoleNumberDensity = Real(units="m-3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type HoleNumberDensity = Real(statePriority=0, units="m-3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Illuminance.md": "# \`Illuminance\`

## Usage

\`Illuminance()\`

## Source
\`\`\`dyad
type Illuminance = Real(units="lx")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Illuminance = Real(statePriority=0, units="lx")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Impedance.md": "# \`Impedance\`

## Usage

\`Impedance()\`

## Source
\`\`\`dyad
type Impedance = Resistance
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Impedance = Real(statePriority=0, units="Ω")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Impulse.md": "# \`Impulse\`

## Usage

\`Impulse()\`

## Source
\`\`\`dyad
type Impulse = Real(units="N.s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Impulse = Real(statePriority=0, units="N.s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Inductance.md": "# \`Inductance\`

## Usage

\`Inductance()\`

## Source
\`\`\`dyad
type Inductance = Real(units="H")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Inductance = Real(statePriority=0, units="H")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Inertia.md": "# \`Inertia\`

## Usage

\`Inertia()\`

## Source
\`\`\`dyad
type Inertia = MomentOfInertia
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Inertia = Real(statePriority=0, units="kg.m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/InstantaneousPower.md": "# \`InstantaneousPower\`

## Usage

\`InstantaneousPower()\`

## Source
\`\`\`dyad
type InstantaneousPower = Real(units="W")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type InstantaneousPower = Real(statePriority=0, units="W")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/InternalEnergy.md": "# \`InternalEnergy\`

## Usage

\`InternalEnergy()\`

## Source
\`\`\`dyad
type InternalEnergy = Heat
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type InternalEnergy = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/IntrinsicNumberDensity.md": "# \`IntrinsicNumberDensity\`

## Usage

\`IntrinsicNumberDensity()\`

## Source
\`\`\`dyad
type IntrinsicNumberDensity = Real(units="m-3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type IntrinsicNumberDensity = Real(statePriority=0, units="m-3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/InversePotential.md": "# \`InversePotential\`

## Usage

\`InversePotential()\`

## Source
\`\`\`dyad
type InversePotential = Real(units="1/V")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type InversePotential = Real(statePriority=0, units="1/V")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/IonNumberDensity.md": "# \`IonNumberDensity\`

## Usage

\`IonNumberDensity()\`

## Source
\`\`\`dyad
type IonNumberDensity = Real(units="m-3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type IonNumberDensity = Real(statePriority=0, units="m-3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/IonicStrength.md": "# \`IonicStrength\`

## Usage

\`IonicStrength()\`

## Source
\`\`\`dyad
type IonicStrength = Real(units="mol/kg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type IonicStrength = Real(statePriority=0, units="mol/kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Irradiance.md": "# \`Irradiance\`

## Usage

\`Irradiance()\`

## Source
\`\`\`dyad
type Irradiance = Real(units="W/m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Irradiance = Real(statePriority=0, units="W/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/IsentropicCompressibility.md": "# \`IsentropicCompressibility\`

## Usage

\`IsentropicCompressibility()\`

## Source
\`\`\`dyad
type IsentropicCompressibility = Compressibility
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type IsentropicCompressibility = Real(statePriority=0, units="1/Pa")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/IsentropicExponent.md": "# \`IsentropicExponent\`

## Usage

\`IsentropicExponent()\`

## Source
\`\`\`dyad
type IsentropicExponent = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type IsentropicExponent = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/IsothermalCompressibility.md": "# \`IsothermalCompressibility\`

## Usage

\`IsothermalCompressibility()\`

## Source
\`\`\`dyad
type IsothermalCompressibility = Compressibility
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type IsothermalCompressibility = Real(statePriority=0, units="1/Pa")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Kerma.md": "# \`Kerma\`

## Usage

\`Kerma()\`

## Source
\`\`\`dyad
type Kerma = Real(units="Gy")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Kerma = Real(statePriority=0, units="Gy")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/KermaRate.md": "# \`KermaRate\`

## Usage

\`KermaRate()\`

## Source
\`\`\`dyad
type KermaRate = Real(units="Gy/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type KermaRate = Real(statePriority=0, units="Gy/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/KinematicViscosity.md": "# \`KinematicViscosity\`

## Usage

\`KinematicViscosity()\`

## Source
\`\`\`dyad
type KinematicViscosity = Real(units="m2/s", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type KinematicViscosity = Real(statePriority=0, min=0, units="m2/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/KineticEnergy.md": "# \`KineticEnergy\`

## Usage

\`KineticEnergy()\`

## Source
\`\`\`dyad
type KineticEnergy = Energy
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type KineticEnergy = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/KnudsenNumber.md": "# \`KnudsenNumber\`

## Usage

\`KnudsenNumber()\`

## Source
\`\`\`dyad
type KnudsenNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type KnudsenNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LandauGinzburgParameter.md": "# \`LandauGinzburgParameter\`

## Usage

\`LandauGinzburgParameter()\`

## Source
\`\`\`dyad
type LandauGinzburgParameter = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LandauGinzburgParameter = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LarmorAngularFrequency.md": "# \`LarmorAngularFrequency\`

## Usage

\`LarmorAngularFrequency()\`

## Source
\`\`\`dyad
type LarmorAngularFrequency = Real(units="s-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LarmorAngularFrequency = Real(statePriority=0, units="s-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LeakageCoefficient.md": "# \`LeakageCoefficient\`

## Usage

\`LeakageCoefficient()\`

## Source
\`\`\`dyad
type LeakageCoefficient = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LeakageCoefficient = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Length.md": "# \`Length\`

## Usage

\`Length()\`

## Source
\`\`\`dyad
type Length = Real(units="m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Length = Real(statePriority=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Lethargy.md": "# \`Lethargy\`

## Usage

\`Lethargy()\`

## Source
\`\`\`dyad
type Lethargy = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Lethargy = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LevelWidth.md": "# \`LevelWidth\`

## Usage

\`LevelWidth()\`

## Source
\`\`\`dyad
type LevelWidth = Real(units="J")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LevelWidth = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LewisNumber.md": "# \`LewisNumber\`

## Usage

\`LewisNumber()\`

## Source
\`\`\`dyad
type LewisNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LewisNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LightExposure.md": "# \`LightExposure\`

## Usage

\`LightExposure()\`

## Source
\`\`\`dyad
type LightExposure = Real(units="lx.s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LightExposure = Real(statePriority=0, units="lx.s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LinearAbsorptionCoefficient.md": "# \`LinearAbsorptionCoefficient\`

## Usage

\`LinearAbsorptionCoefficient()\`

## Source
\`\`\`dyad
type LinearAbsorptionCoefficient = Real(units="m-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LinearAbsorptionCoefficient = Real(statePriority=0, units="m-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LinearAttenuationCoefficient.md": "# \`LinearAttenuationCoefficient\`

## Usage

\`LinearAttenuationCoefficient()\`

## Source
\`\`\`dyad
type LinearAttenuationCoefficient = Real(units="m-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LinearAttenuationCoefficient = Real(statePriority=0, units="m-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LinearCurrentDensity.md": "# \`LinearCurrentDensity\`

## Usage

\`LinearCurrentDensity()\`

## Source
\`\`\`dyad
type LinearCurrentDensity = Real(units="A/m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LinearCurrentDensity = Real(statePriority=0, units="A/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LinearDensity.md": "# \`LinearDensity\`

## Usage

\`LinearDensity()\`

## Source
\`\`\`dyad
type LinearDensity = Real(units="kg/m", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LinearDensity = Real(statePriority=0, min=0, units="kg/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LinearEnergyTransfer.md": "# \`LinearEnergyTransfer\`

## Usage

\`LinearEnergyTransfer()\`

## Source
\`\`\`dyad
type LinearEnergyTransfer = Real(units="J/m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LinearEnergyTransfer = Real(statePriority=0, units="J/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LinearExpansionCoefficient.md": "# \`LinearExpansionCoefficient\`

## Usage

\`LinearExpansionCoefficient()\`

## Source
\`\`\`dyad
type LinearExpansionCoefficient = Real(units="1/K")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LinearExpansionCoefficient = Real(statePriority=0, units="1/K")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LinearIonization.md": "# \`LinearIonization\`

## Usage

\`LinearIonization()\`

## Source
\`\`\`dyad
type LinearIonization = Real(units="m-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LinearIonization = Real(statePriority=0, units="m-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LinearStrain.md": "# \`LinearStrain\`

## Usage

\`LinearStrain()\`

## Source
\`\`\`dyad
type LinearStrain = Strain
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LinearStrain = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LinearTemperatureCoefficient.md": "# \`LinearTemperatureCoefficient\`

## Usage

\`LinearTemperatureCoefficient()\`

## Source
\`\`\`dyad
type LinearTemperatureCoefficient = Real(units="1/K")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LinearTemperatureCoefficient = Real(statePriority=0, units="1/K")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LogarithmicDecrement.md": "# \`LogarithmicDecrement\`

## Usage

\`LogarithmicDecrement()\`

## Source
\`\`\`dyad
type LogarithmicDecrement = Real(units="1/S")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LogarithmicDecrement = Real(statePriority=0, units="1/S")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LondonPenetrationDepth.md": "# \`LondonPenetrationDepth\`

## Usage

\`LondonPenetrationDepth()\`

## Source
\`\`\`dyad
type LondonPenetrationDepth = Length
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LondonPenetrationDepth = Real(statePriority=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LongRangeOrderParameter.md": "# \`LongRangeOrderParameter\`

## Usage

\`LongRangeOrderParameter()\`

## Source
\`\`\`dyad
type LongRangeOrderParameter = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LongRangeOrderParameter = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LorenzCoefficient.md": "# \`LorenzCoefficient\`

## Usage

\`LorenzCoefficient()\`

## Source
\`\`\`dyad
type LorenzCoefficient = Real(units="V2/K2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LorenzCoefficient = Real(statePriority=0, units="V2/K2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LossAngle.md": "# \`LossAngle\`

## Usage

\`LossAngle()\`

## Source
\`\`\`dyad
type LossAngle = Real(units="rad", displayUnits="deg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LossAngle = Real(statePriority=0, units="rad", displayUnits="deg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Loundness.md": "# \`Loundness\`

## Usage

\`Loundness()\`

## Source
\`\`\`dyad
type Loundness = Real(units="sone")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Loundness = Real(statePriority=0, units="sone")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LoundnessLevel.md": "# \`LoundnessLevel\`

## Usage

\`LoundnessLevel()\`

## Source
\`\`\`dyad
type LoundnessLevel = Real(units="phon")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LoundnessLevel = Real(statePriority=0, units="phon")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Luminance.md": "# \`Luminance\`

## Usage

\`Luminance()\`

## Source
\`\`\`dyad
type Luminance = Real(units="cd/m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Luminance = Real(statePriority=0, units="cd/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LuminousEfficacy.md": "# \`LuminousEfficacy\`

## Usage

\`LuminousEfficacy()\`

## Source
\`\`\`dyad
type LuminousEfficacy = Real(units="lm/W")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LuminousEfficacy = Real(statePriority=0, units="lm/W")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LuminousEfficiency.md": "# \`LuminousEfficiency\`

## Usage

\`LuminousEfficiency()\`

## Source
\`\`\`dyad
type LuminousEfficiency = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LuminousEfficiency = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LuminousExitance.md": "# \`LuminousExitance\`

## Usage

\`LuminousExitance()\`

## Source
\`\`\`dyad
type LuminousExitance = Real(units="lm/m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LuminousExitance = Real(statePriority=0, units="lm/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LuminousFlux.md": "# \`LuminousFlux\`

## Usage

\`LuminousFlux()\`

## Source
\`\`\`dyad
type LuminousFlux = Real(units="lm")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LuminousFlux = Real(statePriority=0, units="lm")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/LuminousIntensity.md": "# \`LuminousIntensity\`

## Usage

\`LuminousIntensity()\`

## Source
\`\`\`dyad
type LuminousIntensity = Real(units="cd")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type LuminousIntensity = Real(statePriority=0, units="cd")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MachNumber.md": "# \`MachNumber\`

## Usage

\`MachNumber()\`

## Source
\`\`\`dyad
type MachNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MachNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MacroscopicCrossSection.md": "# \`MacroscopicCrossSection\`

## Usage

\`MacroscopicCrossSection()\`

## Source
\`\`\`dyad
type MacroscopicCrossSection = Real(units="m-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MacroscopicCrossSection = Real(statePriority=0, units="m-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MadelungConstant.md": "# \`MadelungConstant\`

## Usage

\`MadelungConstant()\`

## Source
\`\`\`dyad
type MadelungConstant = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MadelungConstant = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MagneticDipoleMoment.md": "# \`MagneticDipoleMoment\`

## Usage

\`MagneticDipoleMoment()\`

## Source
\`\`\`dyad
type MagneticDipoleMoment = Real(units="Wb.m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MagneticDipoleMoment = Real(statePriority=0, units="Wb.m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MagneticFieldStrength.md": "# \`MagneticFieldStrength\`

## Usage

\`MagneticFieldStrength()\`

## Source
\`\`\`dyad
type MagneticFieldStrength = Real(units="A/m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MagneticFieldStrength = Real(statePriority=0, units="A/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MagneticFlux.md": "# \`MagneticFlux\`

## Usage

\`MagneticFlux()\`

## Source
\`\`\`dyad
type MagneticFlux = Real(units="Wb")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MagneticFlux = Real(statePriority=0, units="Wb")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MagneticFluxDensity.md": "# \`MagneticFluxDensity\`

## Usage

\`MagneticFluxDensity()\`

## Source
\`\`\`dyad
type MagneticFluxDensity = Real(units="T")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MagneticFluxDensity = Real(statePriority=0, units="T")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MagneticMomentOfParticle.md": "# \`MagneticMomentOfParticle\`

## Usage

\`MagneticMomentOfParticle()\`

## Source
\`\`\`dyad
type MagneticMomentOfParticle = Real(units="A.m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MagneticMomentOfParticle = Real(statePriority=0, units="A.m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MagneticPolarization.md": "# \`MagneticPolarization\`

## Usage

\`MagneticPolarization()\`

## Source
\`\`\`dyad
type MagneticPolarization = Real(units="T")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MagneticPolarization = Real(statePriority=0, units="T")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MagneticPotential.md": "# \`MagneticPotential\`

## Usage

\`MagneticPotential()\`

## Source
\`\`\`dyad
type MagneticPotential = Real(units="A")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MagneticPotential = Real(statePriority=0, units="A")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MagneticPotentialDifference.md": "# \`MagneticPotentialDifference\`

## Usage

\`MagneticPotentialDifference()\`

## Source
\`\`\`dyad
type MagneticPotentialDifference = Real(units="A")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MagneticPotentialDifference = Real(statePriority=0, units="A")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MagneticReynoldsNumber.md": "# \`MagneticReynoldsNumber\`

## Usage

\`MagneticReynoldsNumber()\`

## Source
\`\`\`dyad
type MagneticReynoldsNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MagneticReynoldsNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MagneticSusceptibility.md": "# \`MagneticSusceptibility\`

## Usage

\`MagneticSusceptibility()\`

## Source
\`\`\`dyad
type MagneticSusceptibility = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MagneticSusceptibility = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MagneticVectorPotential.md": "# \`MagneticVectorPotential\`

## Usage

\`MagneticVectorPotential()\`

## Source
\`\`\`dyad
type MagneticVectorPotential = Real(units="Wb/m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MagneticVectorPotential = Real(statePriority=0, units="Wb/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Magnetization.md": "# \`Magnetization\`

## Usage

\`Magnetization()\`

## Source
\`\`\`dyad
type Magnetization = Real(units="A/m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Magnetization = Real(statePriority=0, units="A/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MagnetomotiveForce.md": "# \`MagnetomotiveForce\`

## Usage

\`MagnetomotiveForce()\`

## Source
\`\`\`dyad
type MagnetomotiveForce = Real(units="A")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MagnetomotiveForce = Real(statePriority=0, units="A")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Mass.md": "# \`Mass\`

## Usage

\`Mass()\`

## Source
\`\`\`dyad
type Mass = Real(units="kg", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Mass = Real(statePriority=0, min=0, units="kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MassAttenuationCoefficient.md": "# \`MassAttenuationCoefficient\`

## Usage

\`MassAttenuationCoefficient()\`

## Source
\`\`\`dyad
type MassAttenuationCoefficient = Real(units="m2/kg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MassAttenuationCoefficient = Real(statePriority=0, units="m2/kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MassConcentration.md": "# \`MassConcentration\`

## Usage

\`MassConcentration()\`

## Source
\`\`\`dyad
type MassConcentration = Real(units="kg/m3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MassConcentration = Real(statePriority=0, units="kg/m3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MassDefect.md": "# \`MassDefect\`

## Usage

\`MassDefect()\`

## Source
\`\`\`dyad
type MassDefect = Real(units="kg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MassDefect = Real(statePriority=0, units="kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MassEnergyTransferCoefficient.md": "# \`MassEnergyTransferCoefficient\`

## Usage

\`MassEnergyTransferCoefficient()\`

## Source
\`\`\`dyad
type MassEnergyTransferCoefficient = Real(units="m2/kg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MassEnergyTransferCoefficient = Real(statePriority=0, units="m2/kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MassExcess.md": "# \`MassExcess\`

## Usage

\`MassExcess()\`

## Source
\`\`\`dyad
type MassExcess = Real(units="kg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MassExcess = Real(statePriority=0, units="kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MassFlowRate.md": "# \`MassFlowRate\`

## Usage

\`MassFlowRate()\`

## Source
\`\`\`dyad
type MassFlowRate = Real(units="kg/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MassFlowRate = Real(statePriority=0, units="kg/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MassFraction.md": "# \`MassFraction\`

## Usage

\`MassFraction()\`

## Source
\`\`\`dyad
type MassFraction = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MassFraction = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MassOfElectron.md": "# \`MassOfElectron\`

## Usage

\`MassOfElectron()\`

## Source
\`\`\`dyad
type MassOfElectron = Real(units="kg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MassOfElectron = Real(statePriority=0, units="kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MassOfMolecule.md": "# \`MassOfMolecule\`

## Usage

\`MassOfMolecule()\`

## Source
\`\`\`dyad
type MassOfMolecule = Real(units="kg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MassOfMolecule = Real(statePriority=0, units="kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MassOfNeutron.md": "# \`MassOfNeutron\`

## Usage

\`MassOfNeutron()\`

## Source
\`\`\`dyad
type MassOfNeutron = Real(units="kg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MassOfNeutron = Real(statePriority=0, units="kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MassOfProton.md": "# \`MassOfProton\`

## Usage

\`MassOfProton()\`

## Source
\`\`\`dyad
type MassOfProton = Real(units="kg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MassOfProton = Real(statePriority=0, units="kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MassieuFunction.md": "# \`MassieuFunction\`

## Usage

\`MassieuFunction()\`

## Source
\`\`\`dyad
type MassieuFunction = Real(units="J/K")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MassieuFunction = Real(statePriority=0, units="J/K")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MaximumBetaParticleEnergy.md": "# \`MaximumBetaParticleEnergy\`

## Usage

\`MaximumBetaParticleEnergy()\`

## Source
\`\`\`dyad
type MaximumBetaParticleEnergy = Real(units="J")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MaximumBetaParticleEnergy = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MeanEnergyImparted.md": "# \`MeanEnergyImparted\`

## Usage

\`MeanEnergyImparted()\`

## Source
\`\`\`dyad
type MeanEnergyImparted = Real(units="J")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MeanEnergyImparted = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MeanFreePath.md": "# \`MeanFreePath\`

## Usage

\`MeanFreePath()\`

## Source
\`\`\`dyad
type MeanFreePath = Length
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MeanFreePath = Real(statePriority=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MeanLife.md": "# \`MeanLife\`

## Usage

\`MeanLife()\`

## Source
\`\`\`dyad
type MeanLife = Real(units="s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MeanLife = Real(statePriority=0, units="s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MeanLinearRange.md": "# \`MeanLinearRange\`

## Usage

\`MeanLinearRange()\`

## Source
\`\`\`dyad
type MeanLinearRange = Real(units="m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MeanLinearRange = Real(statePriority=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MeanMassRange.md": "# \`MeanMassRange\`

## Usage

\`MeanMassRange()\`

## Source
\`\`\`dyad
type MeanMassRange = Real(units="kg/m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MeanMassRange = Real(statePriority=0, units="kg/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MechanicalImpedance.md": "# \`MechanicalImpedance\`

## Usage

\`MechanicalImpedance()\`

## Source
\`\`\`dyad
type MechanicalImpedance = Real(units="N.s/m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MechanicalImpedance = Real(statePriority=0, units="N.s/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MicrocanonicalPartitionFunction.md": "# \`MicrocanonicalPartitionFunction\`

## Usage

\`MicrocanonicalPartitionFunction()\`

## Source
\`\`\`dyad
type MicrocanonicalPartitionFunction = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MicrocanonicalPartitionFunction = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MigrationArea.md": "# \`MigrationArea\`

## Usage

\`MigrationArea()\`

## Source
\`\`\`dyad
type MigrationArea = Real(units="m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MigrationArea = Real(statePriority=0, units="m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MigrationLength.md": "# \`MigrationLength\`

## Usage

\`MigrationLength()\`

## Source
\`\`\`dyad
type MigrationLength = Length
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MigrationLength = Real(statePriority=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Mobility.md": "# \`Mobility\`

## Usage

\`Mobility()\`

## Source
\`\`\`dyad
type Mobility = Real(units="m2/(V.s)")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Mobility = Real(statePriority=0, units="m2/(V.s)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MobilityRatio.md": "# \`MobilityRatio\`

## Usage

\`MobilityRatio()\`

## Source
\`\`\`dyad
type MobilityRatio = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MobilityRatio = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ModulusOfAdmittance.md": "# \`ModulusOfAdmittance\`

## Usage

\`ModulusOfAdmittance()\`

## Source
\`\`\`dyad
type ModulusOfAdmittance = Conductance
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ModulusOfAdmittance = Real(statePriority=0, units="S")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ModulusOfElasticity.md": "# \`ModulusOfElasticity\`

## Usage

\`ModulusOfElasticity()\`

## Source
\`\`\`dyad
type ModulusOfElasticity = Stress
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ModulusOfElasticity = Real(statePriority=0, units="Pa")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ModulusOfImpedance.md": "# \`ModulusOfImpedance\`

## Usage

\`ModulusOfImpedance()\`

## Source
\`\`\`dyad
type ModulusOfImpedance = Resistance
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ModulusOfImpedance = Real(statePriority=0, units="Ω")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MolarAbsorptionCoefficient.md": "# \`MolarAbsorptionCoefficient\`

## Usage

\`MolarAbsorptionCoefficient()\`

## Source
\`\`\`dyad
type MolarAbsorptionCoefficient = Real(units="m2/mol")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MolarAbsorptionCoefficient = Real(statePriority=0, units="m2/mol")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MolarAttenuationCoefficient.md": "# \`MolarAttenuationCoefficient\`

## Usage

\`MolarAttenuationCoefficient()\`

## Source
\`\`\`dyad
type MolarAttenuationCoefficient = Real(units="m2/mol")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MolarAttenuationCoefficient = Real(statePriority=0, units="m2/mol")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MolarConductivity.md": "# \`MolarConductivity\`

## Usage

\`MolarConductivity()\`

## Source
\`\`\`dyad
type MolarConductivity = Real(units="S.m2/mol")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MolarConductivity = Real(statePriority=0, units="S.m2/mol")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MolarEntropy.md": "# \`MolarEntropy\`

## Usage

\`MolarEntropy()\`

## Source
\`\`\`dyad
type MolarEntropy = Real(units="J/(mol.K)")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MolarEntropy = Real(statePriority=0, units="J/(mol.K)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MolarFlowRate.md": "# \`MolarFlowRate\`

## Usage

\`MolarFlowRate()\`

## Source
\`\`\`dyad
type MolarFlowRate = Real(units="mol/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MolarFlowRate = Real(statePriority=0, units="mol/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MolarHeatCapacity.md": "# \`MolarHeatCapacity\`

## Usage

\`MolarHeatCapacity()\`

## Source
\`\`\`dyad
type MolarHeatCapacity = Real(units="J/(mol.K)")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MolarHeatCapacity = Real(statePriority=0, units="J/(mol.K)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MolarInternalEnergy.md": "# \`MolarInternalEnergy\`

## Usage

\`MolarInternalEnergy()\`

## Source
\`\`\`dyad
type MolarInternalEnergy = Real(units="J/mol")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MolarInternalEnergy = Real(statePriority=0, units="J/mol")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MolarMass.md": "# \`MolarMass\`

## Usage

\`MolarMass()\`

## Source
\`\`\`dyad
type MolarMass = Real(units="kg/mol", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MolarMass = Real(statePriority=0, min=0, units="kg/mol")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MolarVolume.md": "# \`MolarVolume\`

## Usage

\`MolarVolume()\`

## Source
\`\`\`dyad
type MolarVolume = Real(units="m3/mol", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MolarVolume = Real(statePriority=0, min=0, units="m3/mol")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MoleFraction.md": "# \`MoleFraction\`

## Usage

\`MoleFraction()\`

## Source
\`\`\`dyad
type MoleFraction = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MoleFraction = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MolecularConcentration.md": "# \`MolecularConcentration\`

## Usage

\`MolecularConcentration()\`

## Source
\`\`\`dyad
type MolecularConcentration = Real(units="m-3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MolecularConcentration = Real(statePriority=0, units="m-3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MolecularPartitionFunction.md": "# \`MolecularPartitionFunction\`

## Usage

\`MolecularPartitionFunction()\`

## Source
\`\`\`dyad
type MolecularPartitionFunction = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MolecularPartitionFunction = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MomentOfForce.md": "# \`MomentOfForce\`

## Usage

\`MomentOfForce()\`

## Source
\`\`\`dyad
type MomentOfForce = Torque
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MomentOfForce = Real(statePriority=0, units="N.m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MomentOfInertia.md": "# \`MomentOfInertia\`

## Usage

\`MomentOfInertia()\`

## Source
\`\`\`dyad
type MomentOfInertia = Real(units="kg.m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MomentOfInertia = Real(statePriority=0, units="kg.m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Momentum.md": "# \`Momentum\`

## Usage

\`Momentum()\`

## Source
\`\`\`dyad
type Momentum = Real(units="kg.m/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Momentum = Real(statePriority=0, units="kg.m/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MomentumFlux.md": "# \`MomentumFlux\`

## Usage

\`MomentumFlux()\`

## Source
\`\`\`dyad
type MomentumFlux = Real(units="N")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MomentumFlux = Real(statePriority=0, units="N")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/MutualInductance.md": "# \`MutualInductance\`

## Usage

\`MutualInductance()\`

## Source
\`\`\`dyad
type MutualInductance = Inductance
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type MutualInductance = Real(statePriority=0, units="H")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NeelTemperature.md": "# \`NeelTemperature\`

## Usage

\`NeelTemperature()\`

## Source
\`\`\`dyad
type NeelTemperature = ThermodynamicTemperature
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NeelTemperature = Real(statePriority=0, min=0, units="K", displayUnits="degC")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NeutronFluenceRate.md": "# \`NeutronFluenceRate\`

## Usage

\`NeutronFluenceRate()\`

## Source
\`\`\`dyad
type NeutronFluenceRate = Real(units="s-1.m-2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NeutronFluenceRate = Real(statePriority=0, units="s-1.m-2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NeutronNumber.md": "# \`NeutronNumber\`

## Usage

\`NeutronNumber()\`

## Source
\`\`\`dyad
type NeutronNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NeutronNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NeutronNumberDensity.md": "# \`NeutronNumberDensity\`

## Usage

\`NeutronNumberDensity()\`

## Source
\`\`\`dyad
type NeutronNumberDensity = Real(units="m-3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NeutronNumberDensity = Real(statePriority=0, units="m-3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NeutronSpeed.md": "# \`NeutronSpeed\`

## Usage

\`NeutronSpeed()\`

## Source
\`\`\`dyad
type NeutronSpeed = Real(units="m/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NeutronSpeed = Real(statePriority=0, units="m/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NeutronYieldPerAbsorption.md": "# \`NeutronYieldPerAbsorption\`

## Usage

\`NeutronYieldPerAbsorption()\`

## Source
\`\`\`dyad
type NeutronYieldPerAbsorption = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NeutronYieldPerAbsorption = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NeutronYieldPerFission.md": "# \`NeutronYieldPerFission\`

## Usage

\`NeutronYieldPerFission()\`

## Source
\`\`\`dyad
type NeutronYieldPerFission = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NeutronYieldPerFission = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NonLeakageProbability.md": "# \`NonLeakageProbability\`

## Usage

\`NonLeakageProbability()\`

## Source
\`\`\`dyad
type NonLeakageProbability = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NonLeakageProbability = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NormalStress.md": "# \`NormalStress\`

## Usage

\`NormalStress()\`

## Source
\`\`\`dyad
type NormalStress = Stress
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NormalStress = Real(statePriority=0, units="Pa")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NuclearMagneton.md": "# \`NuclearMagneton\`

## Usage

\`NuclearMagneton()\`

## Source
\`\`\`dyad
type NuclearMagneton = MagneticMomentOfParticle
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NuclearMagneton = Real(statePriority=0, units="A.m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NuclearPrecessionAngularFrequency.md": "# \`NuclearPrecessionAngularFrequency\`

## Usage

\`NuclearPrecessionAngularFrequency()\`

## Source
\`\`\`dyad
type NuclearPrecessionAngularFrequency = Real(units="s-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NuclearPrecessionAngularFrequency = Real(statePriority=0, units="s-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NuclearQuadrupoleMoment.md": "# \`NuclearQuadrupoleMoment\`

## Usage

\`NuclearQuadrupoleMoment()\`

## Source
\`\`\`dyad
type NuclearQuadrupoleMoment = Real(units="m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NuclearQuadrupoleMoment = Real(statePriority=0, units="m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NuclearRadius.md": "# \`NuclearRadius\`

## Usage

\`NuclearRadius()\`

## Source
\`\`\`dyad
type NuclearRadius = Real(units="m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NuclearRadius = Real(statePriority=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NucleonNumber.md": "# \`NucleonNumber\`

## Usage

\`NucleonNumber()\`

## Source
\`\`\`dyad
type NucleonNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NucleonNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NumberDensityOfMolecules.md": "# \`NumberDensityOfMolecules\`

## Usage

\`NumberDensityOfMolecules()\`

## Source
\`\`\`dyad
type NumberDensityOfMolecules = Real(units="m-3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NumberDensityOfMolecules = Real(statePriority=0, units="m-3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NumberOfMolecules.md": "# \`NumberOfMolecules\`

## Usage

\`NumberOfMolecules()\`

## Source
\`\`\`dyad
type NumberOfMolecules = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NumberOfMolecules = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NusseltNumber.md": "# \`NusseltNumber\`

## Usage

\`NusseltNumber()\`

## Source
\`\`\`dyad
type NusseltNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NusseltNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/NusseltNumberOfMassTransfer.md": "# \`NusseltNumberOfMassTransfer\`

## Usage

\`NusseltNumberOfMassTransfer()\`

## Source
\`\`\`dyad
type NusseltNumberOfMassTransfer = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type NusseltNumberOfMassTransfer = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/OrderOfReflexion.md": "# \`OrderOfReflexion\`

## Usage

\`OrderOfReflexion()\`

## Source
\`\`\`dyad
type OrderOfReflexion = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type OrderOfReflexion = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/OsmoticCoefficientOfSolvent.md": "# \`OsmoticCoefficientOfSolvent\`

## Usage

\`OsmoticCoefficientOfSolvent()\`

## Source
\`\`\`dyad
type OsmoticCoefficientOfSolvent = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type OsmoticCoefficientOfSolvent = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/OsmoticPressure.md": "# \`OsmoticPressure\`

## Usage

\`OsmoticPressure()\`

## Source
\`\`\`dyad
type OsmoticPressure = Real(units="Pa", displayUnits="bar", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type OsmoticPressure = Real(statePriority=0, min=0, units="Pa", displayUnits="bar")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PackingFraction.md": "# \`PackingFraction\`

## Usage

\`PackingFraction()\`

## Source
\`\`\`dyad
type PackingFraction = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PackingFraction = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PartialPressure.md": "# \`PartialPressure\`

## Usage

\`PartialPressure()\`

## Source
\`\`\`dyad
type PartialPressure = Real(units="Pa", displayUnits="bar", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PartialPressure = Real(statePriority=0, min=0, units="Pa", displayUnits="bar")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ParticleFluence.md": "# \`ParticleFluence\`

## Usage

\`ParticleFluence()\`

## Source
\`\`\`dyad
type ParticleFluence = Real(units="m-2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ParticleFluence = Real(statePriority=0, units="m-2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ParticleFluenceRate.md": "# \`ParticleFluenceRate\`

## Usage

\`ParticleFluenceRate()\`

## Source
\`\`\`dyad
type ParticleFluenceRate = Real(units="s-1.m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ParticleFluenceRate = Real(statePriority=0, units="s-1.m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PathLength.md": "# \`PathLength\`

## Usage

\`PathLength()\`

## Source
\`\`\`dyad
type PathLength = Length
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PathLength = Real(statePriority=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PecletNumber.md": "# \`PecletNumber\`

## Usage

\`PecletNumber()\`

## Source
\`\`\`dyad
type PecletNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PecletNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PecletNumberOfMassTransfer.md": "# \`PecletNumberOfMassTransfer\`

## Usage

\`PecletNumberOfMassTransfer()\`

## Source
\`\`\`dyad
type PecletNumberOfMassTransfer = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PecletNumberOfMassTransfer = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PeltierCoefficient.md": "# \`PeltierCoefficient\`

## Usage

\`PeltierCoefficient()\`

## Source
\`\`\`dyad
type PeltierCoefficient = Real(units="V")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PeltierCoefficient = Real(statePriority=0, units="V")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Period.md": "# \`Period\`

## Usage

\`Period()\`

## Source
\`\`\`dyad
type Period = Real(units="s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Period = Real(statePriority=0, units="s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Permeability.md": "# \`Permeability\`

## Usage

\`Permeability()\`

## Source
\`\`\`dyad
type Permeability = Real(units="H/m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Permeability = Real(statePriority=0, units="H/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PermeabilityOfVacuum.md": "# \`PermeabilityOfVacuum\`

## Usage

\`PermeabilityOfVacuum()\`

## Source
\`\`\`dyad
type PermeabilityOfVacuum = Permeability
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PermeabilityOfVacuum = Real(statePriority=0, units="H/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Permeance.md": "# \`Permeance\`

## Usage

\`Permeance()\`

## Source
\`\`\`dyad
type Permeance = Real(units="H")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Permeance = Real(statePriority=0, units="H")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Permittivity.md": "# \`Permittivity\`

## Usage

\`Permittivity()\`

## Source
\`\`\`dyad
type Permittivity = Real(units="F/m", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Permittivity = Real(statePriority=0, min=0, units="F/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PermittivityOfVacuum.md": "# \`PermittivityOfVacuum\`

## Usage

\`PermittivityOfVacuum()\`

## Source
\`\`\`dyad
type PermittivityOfVacuum = Permittivity
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PermittivityOfVacuum = Real(statePriority=0, min=0, units="F/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PhaseCoefficient.md": "# \`PhaseCoefficient\`

## Usage

\`PhaseCoefficient()\`

## Source
\`\`\`dyad
type PhaseCoefficient = Real(units="m-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PhaseCoefficient = Real(statePriority=0, units="m-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PhaseDifference.md": "# \`PhaseDifference\`

## Usage

\`PhaseDifference()\`

## Source
\`\`\`dyad
type PhaseDifference = Real(units="rad", displayUnits="deg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PhaseDifference = Real(statePriority=0, units="rad", displayUnits="deg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PlanckFunction.md": "# \`PlanckFunction\`

## Usage

\`PlanckFunction()\`

## Source
\`\`\`dyad
type PlanckFunction = Real(units="J/K")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PlanckFunction = Real(statePriority=0, units="J/K")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PoissonNumber.md": "# \`PoissonNumber\`

## Usage

\`PoissonNumber()\`

## Source
\`\`\`dyad
type PoissonNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PoissonNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Position.md": "# \`Position\`

## Usage

\`Position()\`

## Source
\`\`\`dyad
type Position = Length
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Position = Real(statePriority=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PotentialDifference.md": "# \`PotentialDifference\`

## Usage

\`PotentialDifference()\`

## Source
\`\`\`dyad
type PotentialDifference = ElectricPotential
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PotentialDifference = Real(statePriority=0, units="V")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PotentialEnergy.md": "# \`PotentialEnergy\`

## Usage

\`PotentialEnergy()\`

## Source
\`\`\`dyad
type PotentialEnergy = Energy
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PotentialEnergy = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Power.md": "# \`Power\`

## Usage

\`Power()\`

## Source
\`\`\`dyad
type Power = Real(units="W")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Power = Real(statePriority=0, units="W")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PowerFactor.md": "# \`PowerFactor\`

## Usage

\`PowerFactor()\`

## Source
\`\`\`dyad
type PowerFactor = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PowerFactor = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PowerLevelDifference.md": "# \`PowerLevelDifference\`

## Usage

\`PowerLevelDifference()\`

## Source
\`\`\`dyad
type PowerLevelDifference = Real(units="dB")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PowerLevelDifference = Real(statePriority=0, units="dB")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PoyntingVector.md": "# \`PoyntingVector\`

## Usage

\`PoyntingVector()\`

## Source
\`\`\`dyad
type PoyntingVector = Real(units="W/m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PoyntingVector = Real(statePriority=0, units="W/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PrandtlNumber.md": "# \`PrandtlNumber\`

## Usage

\`PrandtlNumber()\`

## Source
\`\`\`dyad
type PrandtlNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PrandtlNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Pressure.md": "# \`Pressure\`

## Usage

\`Pressure()\`

## Source
\`\`\`dyad
type Pressure = Real(units="Pa", displayUnits="bar")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Pressure = Real(statePriority=0, units="Pa", displayUnits="bar")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PressureCoefficient.md": "# \`PressureCoefficient\`

## Usage

\`PressureCoefficient()\`

## Source
\`\`\`dyad
type PressureCoefficient = Real(units="Pa/K")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PressureCoefficient = Real(statePriority=0, units="Pa/K")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/PropagationCoefficient.md": "# \`PropagationCoefficient\`

## Usage

\`PropagationCoefficient()\`

## Source
\`\`\`dyad
type PropagationCoefficient = Real(units="m-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type PropagationCoefficient = Real(statePriority=0, units="m-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ProtonNumber.md": "# \`ProtonNumber\`

## Usage

\`ProtonNumber()\`

## Source
\`\`\`dyad
type ProtonNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ProtonNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/QuadraticTemperatureCoefficient.md": "# \`QuadraticTemperatureCoefficient\`

## Usage

\`QuadraticTemperatureCoefficient()\`

## Source
\`\`\`dyad
type QuadraticTemperatureCoefficient = Real(units="1/K2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type QuadraticTemperatureCoefficient = Real(statePriority=0, units="1/K2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/QualityFactor.md": "# \`QualityFactor\`

## Usage

\`QualityFactor()\`

## Source
\`\`\`dyad
type QualityFactor = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type QualityFactor = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/QuantityOfLight.md": "# \`QuantityOfLight\`

## Usage

\`QuantityOfLight()\`

## Source
\`\`\`dyad
type QuantityOfLight = Real(units="lm.s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type QuantityOfLight = Real(statePriority=0, units="lm.s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Radiance.md": "# \`Radiance\`

## Usage

\`Radiance()\`

## Source
\`\`\`dyad
type Radiance = Real(units="W/(sr.m2)")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Radiance = Real(statePriority=0, units="W/(sr.m2)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RadiantEnergy.md": "# \`RadiantEnergy\`

## Usage

\`RadiantEnergy()\`

## Source
\`\`\`dyad
type RadiantEnergy = Real(units="J")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RadiantEnergy = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RadiantEnergyDensity.md": "# \`RadiantEnergyDensity\`

## Usage

\`RadiantEnergyDensity()\`

## Source
\`\`\`dyad
type RadiantEnergyDensity = Real(units="J/m3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RadiantEnergyDensity = Real(statePriority=0, units="J/m3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RadiantEnergyFluenceRate.md": "# \`RadiantEnergyFluenceRate\`

## Usage

\`RadiantEnergyFluenceRate()\`

## Source
\`\`\`dyad
type RadiantEnergyFluenceRate = Real(units="W/m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RadiantEnergyFluenceRate = Real(statePriority=0, units="W/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RadiantExtiance.md": "# \`RadiantExtiance\`

## Usage

\`RadiantExtiance()\`

## Source
\`\`\`dyad
type RadiantExtiance = Real(units="W/m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RadiantExtiance = Real(statePriority=0, units="W/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RadiantIntensity.md": "# \`RadiantIntensity\`

## Usage

\`RadiantIntensity()\`

## Source
\`\`\`dyad
type RadiantIntensity = Real(units="W/sr")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RadiantIntensity = Real(statePriority=0, units="W/sr")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RadiantPower.md": "# \`RadiantPower\`

## Usage

\`RadiantPower()\`

## Source
\`\`\`dyad
type RadiantPower = Real(units="W")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RadiantPower = Real(statePriority=0, units="W")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Radius.md": "# \`Radius\`

## Usage

\`Radius()\`

## Source
\`\`\`dyad
type Radius = Length(min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Radius = Real(statePriority=0, min=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RatioOfSpecificHeatCapacities.md": "# \`RatioOfSpecificHeatCapacities\`

## Usage

\`RatioOfSpecificHeatCapacities()\`

## Source
\`\`\`dyad
type RatioOfSpecificHeatCapacities = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RatioOfSpecificHeatCapacities = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RayleighNumber.md": "# \`RayleighNumber\`

## Usage

\`RayleighNumber()\`

## Source
\`\`\`dyad
type RayleighNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RayleighNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Reactance.md": "# \`Reactance\`

## Usage

\`Reactance()\`

## Source
\`\`\`dyad
type Reactance = Resistance
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Reactance = Real(statePriority=0, units="Ω")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ReactionEnergy.md": "# \`ReactionEnergy\`

## Usage

\`ReactionEnergy()\`

## Source
\`\`\`dyad
type ReactionEnergy = Real(units="J")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ReactionEnergy = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ReactivePower.md": "# \`ReactivePower\`

## Usage

\`ReactivePower()\`

## Source
\`\`\`dyad
type ReactivePower = Real(units="var")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ReactivePower = Real(statePriority=0, units="var")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Reactivity.md": "# \`Reactivity\`

## Usage

\`Reactivity()\`

## Source
\`\`\`dyad
type Reactivity = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Reactivity = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ReactorTimeConstant.md": "# \`ReactorTimeConstant\`

## Usage

\`ReactorTimeConstant()\`

## Source
\`\`\`dyad
type ReactorTimeConstant = Real(units="s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ReactorTimeConstant = Real(statePriority=0, units="s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RecombinationCoefficient.md": "# \`RecombinationCoefficient\`

## Usage

\`RecombinationCoefficient()\`

## Source
\`\`\`dyad
type RecombinationCoefficient = Real(units="m3/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RecombinationCoefficient = Real(statePriority=0, units="m3/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ReflectionCoefficient.md": "# \`ReflectionCoefficient\`

## Usage

\`ReflectionCoefficient()\`

## Source
\`\`\`dyad
type ReflectionCoefficient = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ReflectionCoefficient = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RefractiveIndex.md": "# \`RefractiveIndex\`

## Usage

\`RefractiveIndex()\`

## Source
\`\`\`dyad
type RefractiveIndex = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RefractiveIndex = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RelativeAtomicMass.md": "# \`RelativeAtomicMass\`

## Usage

\`RelativeAtomicMass()\`

## Source
\`\`\`dyad
type RelativeAtomicMass = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RelativeAtomicMass = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RelativeDensity.md": "# \`RelativeDensity\`

## Usage

\`RelativeDensity()\`

## Source
\`\`\`dyad
type RelativeDensity = Real(units="1", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RelativeDensity = Real(statePriority=0, min=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RelativeMassDefect.md": "# \`RelativeMassDefect\`

## Usage

\`RelativeMassDefect()\`

## Source
\`\`\`dyad
type RelativeMassDefect = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RelativeMassDefect = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RelativeMassExcess.md": "# \`RelativeMassExcess\`

## Usage

\`RelativeMassExcess()\`

## Source
\`\`\`dyad
type RelativeMassExcess = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RelativeMassExcess = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RelativeMolecularMass.md": "# \`RelativeMolecularMass\`

## Usage

\`RelativeMolecularMass()\`

## Source
\`\`\`dyad
type RelativeMolecularMass = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RelativeMolecularMass = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RelativePermeability.md": "# \`RelativePermeability\`

## Usage

\`RelativePermeability()\`

## Source
\`\`\`dyad
type RelativePermeability = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RelativePermeability = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RelativePermittivity.md": "# \`RelativePermittivity\`

## Usage

\`RelativePermittivity()\`

## Source
\`\`\`dyad
type RelativePermittivity = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RelativePermittivity = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RelativePressureCoefficient.md": "# \`RelativePressureCoefficient\`

## Usage

\`RelativePressureCoefficient()\`

## Source
\`\`\`dyad
type RelativePressureCoefficient = Real(units="1/K")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RelativePressureCoefficient = Real(statePriority=0, units="1/K")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RelaxationTime.md": "# \`RelaxationTime\`

## Usage

\`RelaxationTime()\`

## Source
\`\`\`dyad
type RelaxationTime = Time
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RelaxationTime = Real(statePriority=0, units="s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Reluctance.md": "# \`Reluctance\`

## Usage

\`Reluctance()\`

## Source
\`\`\`dyad
type Reluctance = Real(units="H-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Reluctance = Real(statePriority=0, units="H-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ResidualResistivity.md": "# \`ResidualResistivity\`

## Usage

\`ResidualResistivity()\`

## Source
\`\`\`dyad
type ResidualResistivity = Real(units="Ω.m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ResidualResistivity = Real(statePriority=0, units="Ω.m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Resistance.md": "# \`Resistance\`

## Usage

\`Resistance()\`

## Source
\`\`\`dyad
type Resistance = Real(units="Ω")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Resistance = Real(statePriority=0, units="Ω")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Resistivity.md": "# \`Resistivity\`

## Usage

\`Resistivity()\`

## Source
\`\`\`dyad
type Resistivity = Real(units="Ω.m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Resistivity = Real(statePriority=0, units="Ω.m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ResonanceEnergy.md": "# \`ResonanceEnergy\`

## Usage

\`ResonanceEnergy()\`

## Source
\`\`\`dyad
type ResonanceEnergy = Real(units="J")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ResonanceEnergy = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ResonanceEscapeProbability.md": "# \`ResonanceEscapeProbability\`

## Usage

\`ResonanceEscapeProbability()\`

## Source
\`\`\`dyad
type ResonanceEscapeProbability = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ResonanceEscapeProbability = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ReverberationTime.md": "# \`ReverberationTime\`

## Usage

\`ReverberationTime()\`

## Source
\`\`\`dyad
type ReverberationTime = Real(units="s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ReverberationTime = Real(statePriority=0, units="s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ReynoldsNumber.md": "# \`ReynoldsNumber\`

## Usage

\`ReynoldsNumber()\`

## Source
\`\`\`dyad
type ReynoldsNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ReynoldsNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RichardsonConstant.md": "# \`RichardsonConstant\`

## Usage

\`RichardsonConstant()\`

## Source
\`\`\`dyad
type RichardsonConstant = Real(units="A/(m2.K2)")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RichardsonConstant = Real(statePriority=0, units="A/(m2.K2)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RotationalDampingConstant.md": "# \`RotationalDampingConstant\`

## Usage

\`RotationalDampingConstant()\`

## Source
\`\`\`dyad
type RotationalDampingConstant = Real(units="N.m.s/rad")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RotationalDampingConstant = Real(statePriority=0, units="N.m.s/rad")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/RotationalSpringConstant.md": "# \`RotationalSpringConstant\`

## Usage

\`RotationalSpringConstant()\`

## Source
\`\`\`dyad
type RotationalSpringConstant = Real(units="N.m/rad")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type RotationalSpringConstant = Real(statePriority=0, units="N.m/rad")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SchmidtNumber.md": "# \`SchmidtNumber\`

## Usage

\`SchmidtNumber()\`

## Source
\`\`\`dyad
type SchmidtNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SchmidtNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SecondMomentOfArea.md": "# \`SecondMomentOfArea\`

## Usage

\`SecondMomentOfArea()\`

## Source
\`\`\`dyad
type SecondMomentOfArea = Real(units="m4")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SecondMomentOfArea = Real(statePriority=0, units="m4")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SecondPolarMomentOfArea.md": "# \`SecondPolarMomentOfArea\`

## Usage

\`SecondPolarMomentOfArea()\`

## Source
\`\`\`dyad
type SecondPolarMomentOfArea = SecondMomentOfArea
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SecondPolarMomentOfArea = Real(statePriority=0, units="m4")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SectionModulus.md": "# \`SectionModulus\`

## Usage

\`SectionModulus()\`

## Source
\`\`\`dyad
type SectionModulus = Real(units="m3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SectionModulus = Real(statePriority=0, units="m3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SeebeckCoefficient.md": "# \`SeebeckCoefficient\`

## Usage

\`SeebeckCoefficient()\`

## Source
\`\`\`dyad
type SeebeckCoefficient = Real(units="V/K")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SeebeckCoefficient = Real(statePriority=0, units="V/K")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SelfInductance.md": "# \`SelfInductance\`

## Usage

\`SelfInductance()\`

## Source
\`\`\`dyad
type SelfInductance = Inductance(min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SelfInductance = Real(statePriority=0, min=0, units="H")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ShearModulus.md": "# \`ShearModulus\`

## Usage

\`ShearModulus()\`

## Source
\`\`\`dyad
type ShearModulus = Stress
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ShearModulus = Real(statePriority=0, units="Pa")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ShearStrain.md": "# \`ShearStrain\`

## Usage

\`ShearStrain()\`

## Source
\`\`\`dyad
type ShearStrain = Strain
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ShearStrain = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ShearStress.md": "# \`ShearStress\`

## Usage

\`ShearStress()\`

## Source
\`\`\`dyad
type ShearStress = Stress
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ShearStress = Real(statePriority=0, units="Pa")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ShortRangeOrderParameter.md": "# \`ShortRangeOrderParameter\`

## Usage

\`ShortRangeOrderParameter()\`

## Source
\`\`\`dyad
type ShortRangeOrderParameter = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ShortRangeOrderParameter = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SlowingDownArea.md": "# \`SlowingDownArea\`

## Usage

\`SlowingDownArea()\`

## Source
\`\`\`dyad
type SlowingDownArea = Real(units="m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SlowingDownArea = Real(statePriority=0, units="m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SlowingDownDensity.md": "# \`SlowingDownDensity\`

## Usage

\`SlowingDownDensity()\`

## Source
\`\`\`dyad
type SlowingDownDensity = Real(units="s-1.m-3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SlowingDownDensity = Real(statePriority=0, units="s-1.m-3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SlowingDownLength.md": "# \`SlowingDownLength\`

## Usage

\`SlowingDownLength()\`

## Source
\`\`\`dyad
type SlowingDownLength = Real(units="m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SlowingDownLength = Real(statePriority=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SolidAngle.md": "# \`SolidAngle\`

## Usage

\`SolidAngle()\`

## Source
\`\`\`dyad
type SolidAngle = Real(units="sr")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SolidAngle = Real(statePriority=0, units="sr")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SoundEnergyDensity.md": "# \`SoundEnergyDensity\`

## Usage

\`SoundEnergyDensity()\`

## Source
\`\`\`dyad
type SoundEnergyDensity = Real(units="J/m3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SoundEnergyDensity = Real(statePriority=0, units="J/m3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SoundIntensity.md": "# \`SoundIntensity\`

## Usage

\`SoundIntensity()\`

## Source
\`\`\`dyad
type SoundIntensity = Real(units="W/m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SoundIntensity = Real(statePriority=0, units="W/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SoundParticleAcceleration.md": "# \`SoundParticleAcceleration\`

## Usage

\`SoundParticleAcceleration()\`

## Source
\`\`\`dyad
type SoundParticleAcceleration = Real(units="m/s2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SoundParticleAcceleration = Real(statePriority=0, units="m/s2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SoundParticleDisplacement.md": "# \`SoundParticleDisplacement\`

## Usage

\`SoundParticleDisplacement()\`

## Source
\`\`\`dyad
type SoundParticleDisplacement = Real(units="m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SoundParticleDisplacement = Real(statePriority=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SoundParticleVelocity.md": "# \`SoundParticleVelocity\`

## Usage

\`SoundParticleVelocity()\`

## Source
\`\`\`dyad
type SoundParticleVelocity = Real(units="m/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SoundParticleVelocity = Real(statePriority=0, units="m/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SoundPower.md": "# \`SoundPower\`

## Usage

\`SoundPower()\`

## Source
\`\`\`dyad
type SoundPower = Real(units="W")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SoundPower = Real(statePriority=0, units="W")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SoundPowerLevel.md": "# \`SoundPowerLevel\`

## Usage

\`SoundPowerLevel()\`

## Source
\`\`\`dyad
type SoundPowerLevel = Real(units="dB")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SoundPowerLevel = Real(statePriority=0, units="dB")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SoundPressure.md": "# \`SoundPressure\`

## Usage

\`SoundPressure()\`

## Source
\`\`\`dyad
type SoundPressure = StaticPressure
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SoundPressure = Real(statePriority=0, min=0, units="Pa", displayUnits="bar")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SoundPressureLevel.md": "# \`SoundPressureLevel\`

## Usage

\`SoundPressureLevel()\`

## Source
\`\`\`dyad
type SoundPressureLevel = Real(units="dB")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SoundPressureLevel = Real(statePriority=0, units="dB")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SoundReductionIndex.md": "# \`SoundReductionIndex\`

## Usage

\`SoundReductionIndex()\`

## Source
\`\`\`dyad
type SoundReductionIndex = Real(units="dB")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SoundReductionIndex = Real(statePriority=0, units="dB")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpecificAcousticImpedance.md": "# \`SpecificAcousticImpedance\`

## Usage

\`SpecificAcousticImpedance()\`

## Source
\`\`\`dyad
type SpecificAcousticImpedance = Real(units="Pa.s/m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpecificAcousticImpedance = Real(statePriority=0, units="Pa.s/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpecificActivity.md": "# \`SpecificActivity\`

## Usage

\`SpecificActivity()\`

## Source
\`\`\`dyad
type SpecificActivity = Real(units="Bq/kg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpecificActivity = Real(statePriority=0, units="Bq/kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpecificEnergy.md": "# \`SpecificEnergy\`

## Usage

\`SpecificEnergy()\`

## Source
\`\`\`dyad
type SpecificEnergy = Real(units="J/kg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpecificEnergy = Real(statePriority=0, units="J/kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpecificEnergyImparted.md": "# \`SpecificEnergyImparted\`

## Usage

\`SpecificEnergyImparted()\`

## Source
\`\`\`dyad
type SpecificEnergyImparted = Real(units="Gy")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpecificEnergyImparted = Real(statePriority=0, units="Gy")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpecificEnthalpy.md": "# \`SpecificEnthalpy\`

## Usage

\`SpecificEnthalpy()\`

## Source
\`\`\`dyad
type SpecificEnthalpy = SpecificEnergy
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpecificEnthalpy = Real(statePriority=0, units="J/kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpecificEntropy.md": "# \`SpecificEntropy\`

## Usage

\`SpecificEntropy()\`

## Source
\`\`\`dyad
type SpecificEntropy = Real(units="J/(kg.K)")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpecificEntropy = Real(statePriority=0, units="J/(kg.K)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpecificGibbsFreeEnergy.md": "# \`SpecificGibbsFreeEnergy\`

## Usage

\`SpecificGibbsFreeEnergy()\`

## Source
\`\`\`dyad
type SpecificGibbsFreeEnergy = SpecificEnergy
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpecificGibbsFreeEnergy = Real(statePriority=0, units="J/kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpecificHeatCapacity.md": "# \`SpecificHeatCapacity\`

## Usage

\`SpecificHeatCapacity()\`

## Source
\`\`\`dyad
type SpecificHeatCapacity = Real(units="J/(kg.K)")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpecificHeatCapacity = Real(statePriority=0, units="J/(kg.K)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpecificHeatCapacityAtConstantPressure.md": "# \`SpecificHeatCapacityAtConstantPressure\`

## Usage

\`SpecificHeatCapacityAtConstantPressure()\`

## Source
\`\`\`dyad
type SpecificHeatCapacityAtConstantPressure = SpecificHeatCapacity
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpecificHeatCapacityAtConstantPressure = Real(statePriority=0, units="J/(kg.K)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpecificHeatCapacityAtConstantVolume.md": "# \`SpecificHeatCapacityAtConstantVolume\`

## Usage

\`SpecificHeatCapacityAtConstantVolume()\`

## Source
\`\`\`dyad
type SpecificHeatCapacityAtConstantVolume = SpecificHeatCapacity
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpecificHeatCapacityAtConstantVolume = Real(statePriority=0, units="J/(kg.K)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpecificHeatCapacityAtSaturation.md": "# \`SpecificHeatCapacityAtSaturation\`

## Usage

\`SpecificHeatCapacityAtSaturation()\`

## Source
\`\`\`dyad
type SpecificHeatCapacityAtSaturation = SpecificHeatCapacity
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpecificHeatCapacityAtSaturation = Real(statePriority=0, units="J/(kg.K)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpecificHelmholtzFreeEnergy.md": "# \`SpecificHelmholtzFreeEnergy\`

## Usage

\`SpecificHelmholtzFreeEnergy()\`

## Source
\`\`\`dyad
type SpecificHelmholtzFreeEnergy = SpecificEnergy
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpecificHelmholtzFreeEnergy = Real(statePriority=0, units="J/kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpecificInternalEnergy.md": "# \`SpecificInternalEnergy\`

## Usage

\`SpecificInternalEnergy()\`

## Source
\`\`\`dyad
type SpecificInternalEnergy = SpecificEnergy
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpecificInternalEnergy = Real(statePriority=0, units="J/kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpecificVolume.md": "# \`SpecificVolume\`

## Usage

\`SpecificVolume()\`

## Source
\`\`\`dyad
type SpecificVolume = Real(units="m3/kg", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpecificVolume = Real(statePriority=0, min=0, units="m3/kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpectralAbsorptionFactor.md": "# \`SpectralAbsorptionFactor\`

## Usage

\`SpectralAbsorptionFactor()\`

## Source
\`\`\`dyad
type SpectralAbsorptionFactor = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpectralAbsorptionFactor = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpectralAngularCrossSection.md": "# \`SpectralAngularCrossSection\`

## Usage

\`SpectralAngularCrossSection()\`

## Source
\`\`\`dyad
type SpectralAngularCrossSection = Real(units="m2/(sr.J)")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpectralAngularCrossSection = Real(statePriority=0, units="m2/(sr.J)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpectralConcentration.md": "# \`SpectralConcentration\`

## Usage

\`SpectralConcentration()\`

## Source
\`\`\`dyad
type SpectralConcentration = Real(units="s/m3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpectralConcentration = Real(statePriority=0, units="s/m3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpectralCrossSection.md": "# \`SpectralCrossSection\`

## Usage

\`SpectralCrossSection()\`

## Source
\`\`\`dyad
type SpectralCrossSection = Real(units="m2/J")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpectralCrossSection = Real(statePriority=0, units="m2/J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpectralEmissivity.md": "# \`SpectralEmissivity\`

## Usage

\`SpectralEmissivity()\`

## Source
\`\`\`dyad
type SpectralEmissivity = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpectralEmissivity = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpectralLuminousEfficacy.md": "# \`SpectralLuminousEfficacy\`

## Usage

\`SpectralLuminousEfficacy()\`

## Source
\`\`\`dyad
type SpectralLuminousEfficacy = Real(units="lm/W")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpectralLuminousEfficacy = Real(statePriority=0, units="lm/W")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpectralLuminousEfficiency.md": "# \`SpectralLuminousEfficiency\`

## Usage

\`SpectralLuminousEfficiency()\`

## Source
\`\`\`dyad
type SpectralLuminousEfficiency = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpectralLuminousEfficiency = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpectralRadianceFactor.md": "# \`SpectralRadianceFactor\`

## Usage

\`SpectralRadianceFactor()\`

## Source
\`\`\`dyad
type SpectralRadianceFactor = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpectralRadianceFactor = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpectralRadiantEnergyDensity.md": "# \`SpectralRadiantEnergyDensity\`

## Usage

\`SpectralRadiantEnergyDensity()\`

## Source
\`\`\`dyad
type SpectralRadiantEnergyDensity = Real(units="J/m4")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpectralRadiantEnergyDensity = Real(statePriority=0, units="J/m4")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpectralReflectionFactor.md": "# \`SpectralReflectionFactor\`

## Usage

\`SpectralReflectionFactor()\`

## Source
\`\`\`dyad
type SpectralReflectionFactor = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpectralReflectionFactor = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SpectralTransmissionFactor.md": "# \`SpectralTransmissionFactor\`

## Usage

\`SpectralTransmissionFactor()\`

## Source
\`\`\`dyad
type SpectralTransmissionFactor = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SpectralTransmissionFactor = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/StandardAbsoluteActivity.md": "# \`StandardAbsoluteActivity\`

## Usage

\`StandardAbsoluteActivity()\`

## Source
\`\`\`dyad
type StandardAbsoluteActivity = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type StandardAbsoluteActivity = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/StandardAbsoluteActivityOfSolute.md": "# \`StandardAbsoluteActivityOfSolute\`

## Usage

\`StandardAbsoluteActivityOfSolute()\`

## Source
\`\`\`dyad
type StandardAbsoluteActivityOfSolute = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type StandardAbsoluteActivityOfSolute = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/StandardAbsoluteActivityOfSolvent.md": "# \`StandardAbsoluteActivityOfSolvent\`

## Usage

\`StandardAbsoluteActivityOfSolvent()\`

## Source
\`\`\`dyad
type StandardAbsoluteActivityOfSolvent = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type StandardAbsoluteActivityOfSolvent = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/StantonNumber.md": "# \`StantonNumber\`

## Usage

\`StantonNumber()\`

## Source
\`\`\`dyad
type StantonNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type StantonNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/StantonNumberOfMassTransfer.md": "# \`StantonNumberOfMassTransfer\`

## Usage

\`StantonNumberOfMassTransfer()\`

## Source
\`\`\`dyad
type StantonNumberOfMassTransfer = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type StantonNumberOfMassTransfer = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/StaticPressure.md": "# \`StaticPressure\`

## Usage

\`StaticPressure()\`

## Source
\`\`\`dyad
type StaticPressure = Real(units="Pa", displayUnits="bar", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type StaticPressure = Real(statePriority=0, min=0, units="Pa", displayUnits="bar")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/StatisticalWeight.md": "# \`StatisticalWeight\`

## Usage

\`StatisticalWeight()\`

## Source
\`\`\`dyad
type StatisticalWeight = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type StatisticalWeight = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/StoichiometricNumber.md": "# \`StoichiometricNumber\`

## Usage

\`StoichiometricNumber()\`

## Source
\`\`\`dyad
type StoichiometricNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type StoichiometricNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Strain.md": "# \`Strain\`

## Usage

\`Strain()\`

## Source
\`\`\`dyad
type Strain = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Strain = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Stress.md": "# \`Stress\`

## Usage

\`Stress()\`

## Source
\`\`\`dyad
type Stress = Real(units="Pa")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Stress = Real(statePriority=0, units="Pa")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/StrouhalNumber.md": "# \`StrouhalNumber\`

## Usage

\`StrouhalNumber()\`

## Source
\`\`\`dyad
type StrouhalNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type StrouhalNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SurfaceCoefficientOfHeatTransfer.md": "# \`SurfaceCoefficientOfHeatTransfer\`

## Usage

\`SurfaceCoefficientOfHeatTransfer()\`

## Source
\`\`\`dyad
type SurfaceCoefficientOfHeatTransfer = CoefficientOfHeatTransfer
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SurfaceCoefficientOfHeatTransfer = Real(statePriority=0, units="W/(m2.K)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SurfaceDensity.md": "# \`SurfaceDensity\`

## Usage

\`SurfaceDensity()\`

## Source
\`\`\`dyad
type SurfaceDensity = Real(units="kg/m2", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SurfaceDensity = Real(statePriority=0, min=0, units="kg/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SurfaceDensityOfCharge.md": "# \`SurfaceDensityOfCharge\`

## Usage

\`SurfaceDensityOfCharge()\`

## Source
\`\`\`dyad
type SurfaceDensityOfCharge = Real(units="C/m2", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SurfaceDensityOfCharge = Real(statePriority=0, min=0, units="C/m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/SurfaceTension.md": "# \`SurfaceTension\`

## Usage

\`SurfaceTension()\`

## Source
\`\`\`dyad
type SurfaceTension = Real(units="N/m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type SurfaceTension = Real(statePriority=0, units="N/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Susceptance.md": "# \`Susceptance\`

## Usage

\`Susceptance()\`

## Source
\`\`\`dyad
type Susceptance = Conductance
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Susceptance = Real(statePriority=0, units="S")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Temp_K.md": "# \`Temp_K\`

## Usage

\`Temp_K()\`

## Source
\`\`\`dyad
type Temp_K = ThermodynamicTemperature
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Temp_K = Real(statePriority=0, min=0, units="K", displayUnits="degC")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Temperature.md": "# \`Temperature\`

## Usage

\`Temperature()\`

## Source
\`\`\`dyad
type Temperature = ThermodynamicTemperature
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Temperature = Real(statePriority=0, min=0, units="K", displayUnits="degC")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/TemperatureDifference.md": "# \`TemperatureDifference\`

## Usage

\`TemperatureDifference()\`

## Source
\`\`\`dyad
type TemperatureDifference = Real(units="K")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type TemperatureDifference = Real(statePriority=0, units="K")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/TemperatureSlope.md": "# \`TemperatureSlope\`

## Usage

\`TemperatureSlope()\`

## Source
\`\`\`dyad
type TemperatureSlope = Real(units="K/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type TemperatureSlope = Real(statePriority=0, units="K/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ThermalConductance.md": "# \`ThermalConductance\`

## Usage

\`ThermalConductance()\`

## Source
\`\`\`dyad
type ThermalConductance = Real(units="W/K")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ThermalConductance = Real(statePriority=0, units="W/K")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ThermalConductivity.md": "# \`ThermalConductivity\`

## Usage

\`ThermalConductivity()\`

## Source
\`\`\`dyad
type ThermalConductivity = Real(units="W/(m.K)")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ThermalConductivity = Real(statePriority=0, units="W/(m.K)")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ThermalDiffusionCoefficient.md": "# \`ThermalDiffusionCoefficient\`

## Usage

\`ThermalDiffusionCoefficient()\`

## Source
\`\`\`dyad
type ThermalDiffusionCoefficient = Real(units="m2/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ThermalDiffusionCoefficient = Real(statePriority=0, units="m2/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ThermalDiffusionFactor.md": "# \`ThermalDiffusionFactor\`

## Usage

\`ThermalDiffusionFactor()\`

## Source
\`\`\`dyad
type ThermalDiffusionFactor = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ThermalDiffusionFactor = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ThermalDiffusionRatio.md": "# \`ThermalDiffusionRatio\`

## Usage

\`ThermalDiffusionRatio()\`

## Source
\`\`\`dyad
type ThermalDiffusionRatio = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ThermalDiffusionRatio = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ThermalDiffusivity.md": "# \`ThermalDiffusivity\`

## Usage

\`ThermalDiffusivity()\`

## Source
\`\`\`dyad
type ThermalDiffusivity = Real(units="m2/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ThermalDiffusivity = Real(statePriority=0, units="m2/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ThermalInsulance.md": "# \`ThermalInsulance\`

## Usage

\`ThermalInsulance()\`

## Source
\`\`\`dyad
type ThermalInsulance = Real(units="m2.K/W")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ThermalInsulance = Real(statePriority=0, units="m2.K/W")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ThermalResistance.md": "# \`ThermalResistance\`

## Usage

\`ThermalResistance()\`

## Source
\`\`\`dyad
type ThermalResistance = Real(units="K/W")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ThermalResistance = Real(statePriority=0, units="K/W")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ThermalUtilizationFactor.md": "# \`ThermalUtilizationFactor\`

## Usage

\`ThermalUtilizationFactor()\`

## Source
\`\`\`dyad
type ThermalUtilizationFactor = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ThermalUtilizationFactor = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ThermodynamicTemperature.md": "# \`ThermodynamicTemperature\`

Absolute temperature (use type TemperatureDifference for relative temperatures)

## Usage

\`ThermodynamicTemperature()\`

## Source
\`\`\`dyad
# Absolute temperature (use type TemperatureDifference for relative temperatures)
type ThermodynamicTemperature = Real(units="K", min=0, displayUnits="degC")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
# Absolute temperature (use type TemperatureDifference for relative temperatures)
type ThermodynamicTemperature = Real(statePriority=0, min=0, units="K", displayUnits="degC")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ThermoelectromotiveForce.md": "# \`ThermoelectromotiveForce\`

## Usage

\`ThermoelectromotiveForce()\`

## Source
\`\`\`dyad
type ThermoelectromotiveForce = Real(units="V")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ThermoelectromotiveForce = Real(statePriority=0, units="V")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Thickness.md": "# \`Thickness\`

## Usage

\`Thickness()\`

## Source
\`\`\`dyad
type Thickness = Length(min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Thickness = Real(statePriority=0, min=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/ThomsonCoefficient.md": "# \`ThomsonCoefficient\`

## Usage

\`ThomsonCoefficient()\`

## Source
\`\`\`dyad
type ThomsonCoefficient = Real(units="V/K")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type ThomsonCoefficient = Real(statePriority=0, units="V/K")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Time.md": "# \`Time\`

## Usage

\`Time()\`

## Source
\`\`\`dyad
type Time = Real(units="s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Time = Real(statePriority=0, units="s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Torque.md": "# \`Torque\`

## Usage

\`Torque()\`

## Source
\`\`\`dyad
type Torque = Real(units="N.m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Torque = Real(statePriority=0, units="N.m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/TotalAtomicStoppingPower.md": "# \`TotalAtomicStoppingPower\`

## Usage

\`TotalAtomicStoppingPower()\`

## Source
\`\`\`dyad
type TotalAtomicStoppingPower = Real(units="J.m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type TotalAtomicStoppingPower = Real(statePriority=0, units="J.m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/TotalCrossSection.md": "# \`TotalCrossSection\`

## Usage

\`TotalCrossSection()\`

## Source
\`\`\`dyad
type TotalCrossSection = Real(units="m2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type TotalCrossSection = Real(statePriority=0, units="m2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/TotalIonization.md": "# \`TotalIonization\`

## Usage

\`TotalIonization()\`

## Source
\`\`\`dyad
type TotalIonization = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type TotalIonization = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/TotalLinearStoppingPower.md": "# \`TotalLinearStoppingPower\`

## Usage

\`TotalLinearStoppingPower()\`

## Source
\`\`\`dyad
type TotalLinearStoppingPower = Real(units="J/m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type TotalLinearStoppingPower = Real(statePriority=0, units="J/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/TotalMacroscopicCrossSection.md": "# \`TotalMacroscopicCrossSection\`

## Usage

\`TotalMacroscopicCrossSection()\`

## Source
\`\`\`dyad
type TotalMacroscopicCrossSection = Real(units="m-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type TotalMacroscopicCrossSection = Real(statePriority=0, units="m-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/TotalMassStoppingPower.md": "# \`TotalMassStoppingPower\`

## Usage

\`TotalMassStoppingPower()\`

## Source
\`\`\`dyad
type TotalMassStoppingPower = Real(units="J.m2/kg")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type TotalMassStoppingPower = Real(statePriority=0, units="J.m2/kg")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/TotalNeutronSourceDensity.md": "# \`TotalNeutronSourceDensity\`

## Usage

\`TotalNeutronSourceDensity()\`

## Source
\`\`\`dyad
type TotalNeutronSourceDensity = Real(units="s-1.m-3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type TotalNeutronSourceDensity = Real(statePriority=0, units="s-1.m-3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Transconductance.md": "# \`Transconductance\`

## Usage

\`Transconductance()\`

## Source
\`\`\`dyad
type Transconductance = Real(units="A/V2")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Transconductance = Real(statePriority=0, units="A/V2")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/TranslationalDampingConstant.md": "# \`TranslationalDampingConstant\`

## Usage

\`TranslationalDampingConstant()\`

## Source
\`\`\`dyad
type TranslationalDampingConstant = Real(units="N.s/m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type TranslationalDampingConstant = Real(statePriority=0, units="N.s/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/TranslationalSpringConstant.md": "# \`TranslationalSpringConstant\`

## Usage

\`TranslationalSpringConstant()\`

## Source
\`\`\`dyad
type TranslationalSpringConstant = Real(units="N/m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type TranslationalSpringConstant = Real(statePriority=0, units="N/m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/TransmissionCoefficient.md": "# \`TransmissionCoefficient\`

## Usage

\`TransmissionCoefficient()\`

## Source
\`\`\`dyad
type TransmissionCoefficient = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type TransmissionCoefficient = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/TransportNumberOfIonic.md": "# \`TransportNumberOfIonic\`

## Usage

\`TransportNumberOfIonic()\`

## Source
\`\`\`dyad
type TransportNumberOfIonic = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type TransportNumberOfIonic = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Velocity.md": "# \`Velocity\`

## Usage

\`Velocity()\`

## Source
\`\`\`dyad
type Velocity = Real(units="m/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Velocity = Real(statePriority=0, units="m/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/VelocityOfSound.md": "# \`VelocityOfSound\`

## Usage

\`VelocityOfSound()\`

## Source
\`\`\`dyad
type VelocityOfSound = Real(units="m/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type VelocityOfSound = Real(statePriority=0, units="m/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Voltage.md": "# \`Voltage\`

## Usage

\`Voltage()\`

## Source
\`\`\`dyad
type Voltage = ElectricPotential
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Voltage = Real(statePriority=0, units="V")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/VoltageSlope.md": "# \`VoltageSlope\`

## Usage

\`VoltageSlope()\`

## Source
\`\`\`dyad
type VoltageSlope = Real(units="V/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type VoltageSlope = Real(statePriority=0, units="V/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Volume.md": "# \`Volume\`

## Usage

\`Volume()\`

## Source
\`\`\`dyad
type Volume = Real(units="m3")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Volume = Real(statePriority=0, units="m3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/VolumeDensityOfCharge.md": "# \`VolumeDensityOfCharge\`

## Usage

\`VolumeDensityOfCharge()\`

## Source
\`\`\`dyad
type VolumeDensityOfCharge = Real(units="C/m3", min=0)
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type VolumeDensityOfCharge = Real(statePriority=0, min=0, units="C/m3")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/VolumeFlowRate.md": "# \`VolumeFlowRate\`

## Usage

\`VolumeFlowRate()\`

## Source
\`\`\`dyad
type VolumeFlowRate = Real(units="m3/s")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type VolumeFlowRate = Real(statePriority=0, units="m3/s")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/VolumeFraction.md": "# \`VolumeFraction\`

## Usage

\`VolumeFraction()\`

## Source
\`\`\`dyad
type VolumeFraction = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type VolumeFraction = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/VolumeStrain.md": "# \`VolumeStrain\`

## Usage

\`VolumeStrain()\`

## Source
\`\`\`dyad
type VolumeStrain = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type VolumeStrain = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/WaveNumber.md": "# \`WaveNumber\`

## Usage

\`WaveNumber()\`

## Source
\`\`\`dyad
type WaveNumber = Real(units="m-1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type WaveNumber = Real(statePriority=0, units="m-1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Wavelenght.md": "# \`Wavelenght\`

## Usage

\`Wavelenght()\`

## Source
\`\`\`dyad
type Wavelenght = Wavelength
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Wavelenght = Real(statePriority=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Wavelength.md": "# \`Wavelength\`

## Usage

\`Wavelength()\`

## Source
\`\`\`dyad
type Wavelength = Real(units="m")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Wavelength = Real(statePriority=0, units="m")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/WeberNumber.md": "# \`WeberNumber\`

## Usage

\`WeberNumber()\`

## Source
\`\`\`dyad
type WeberNumber = Real(units="1")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type WeberNumber = Real(statePriority=0, units="1")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Weight.md": "# \`Weight\`

## Usage

\`Weight()\`

## Source
\`\`\`dyad
type Weight = Force
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Weight = Real(statePriority=0, units="N")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
  "src/types/Work.md": "# \`Work\`

## Usage

\`Work()\`

## Source
\`\`\`dyad
type Work = Real(units="J")
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>
<pre>
type Work = Real(statePriority=0, units="J")
</pre>
</details>

\`\`\`
\`\`\`@raw html

<br>

\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests",
}
`;

exports[`Test documenter functionality Test Documenter functionality on SampleComponents root module 1`] = `
{
  ".gitignore": "/Manifest.toml
/build",
  "Project.toml": "[deps]
Documenter = "e30172f5-a6a5-5a46-863b-614d45cd2de4"
CSV = "336ed68f-0bac-5ca0-87d4-7b16caf5d00b"
DataFrames = "a93c6f00-e57d-5684-b7b6-d8193f3e46c0"
DyadEcosystemDependencies = "7bc808db-8006-421e-b546-062440d520b7"
Latexify = "23fbe1c1-3f47-55db-b15f-69d7ec21a316"
ModelingToolkit = "961ee093-0014-501f-94e3-6117800e7a78"
OrdinaryDiffEqDefault = "50262376-6c5a-4cf5-baba-aaf4f84d72d7"
Plots = "91a5bcdd-55d7-5caf-9e0b-520d859cae80"

[sources]
SampleComponents = { path = ".." }",
  "make.jl": "using Documenter
using SampleComponents

include("pages.jl")

makedocs(
    modules=[SampleComponents],
    sitename="SampleComponents",
    remotes=nothing,
    warnonly=[:cross_references, :example_block, :missing_docs],
    pages=pages
)",
  "pages.jl": "pages = [
   "SampleComponents" => "index.md",
   "Types" => Any[
       "Partial Types" => Any["types/Base1.md", "types/Base2.md"],
       "Enumerated Types" => Any["types/Initialize.md"],
   ],
   "Connectors" => Any[],
   "Components" => Any["components/Gain.md", "components/Hello.md", "components/Multi.md", "components/PlantModel.md"],
   "Analyses" => Any[],
   "Examples" => Any[],
   "Experiments" => Any[],
   "Tests" => Any["tests/HelloTest.md"],
]",
  "src/components/Gain.md": "\`\`\`@raw html

      <div style="float: right;width: 20%;max-width: 10vw; margin-left: 20px">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
    <style>
    text {
      transform-origin: center center;
    }
    </style><g transform="translate(0 0) scale(1.0) rotate(0)" transform-origin="center center"><svg xmlns="http://www.w3.org/2000/svg" id="a" width="1000" height="1000" viewBox="0 0 1000 1000"
><defs><style>.b {fill: none;}.b,.c {stroke: #b6b4cf;stroke-linejoin: round;stroke-width: 8px;}.c,.d {  fill: #fff;}.e {fill: #6e6ea1;}.e,.d {stroke-width: 0px;}</style>
  </defs><rect class="d" x="4" y="4" width="992" height="992" /><path class="e" d="M992,8v984H8V8h984M1000,0H0v1000h1000V0h0Z" /><path class="b"
    d="M361.83,226.44c-62.23-3.99-115.91,43.22-119.9,105.45-3.99,62.23,43.22,115.91,105.45,119.9,62.23,3.99,115.91-43.22,119.9-105.45,3.99-62.23-43.22-115.91-105.45-119.9ZM413.76,342.91c-2.09,32.67-30.28,57.46-62.95,55.36-32.67-2.1-57.46-30.28-55.36-62.95,2.09-32.67,30.28-57.46,62.95-55.36,32.67,2.09,57.45,30.28,55.36,62.95Z"
  /><circle class="b" cx="353.85" cy="682.11" r="80.62" /><circle class="b" cx="652.79" cy="644.36" r="52.47" /><polyline class="b" points="410.2 624.82 698.58 340.68 464.78 340.68" /><line class="b" x1="617.63" y1="609.81" x2="432.03" y2="420.13" /><circle class="c" cx="696.98" cy="340.44" r="54.47" />
</svg></g>
    <text x="500" y="1100" transform="rotate(0, 0, 600)" fill="black" font-size="200" font-weight="200" dominant-baseline="central" text-anchor="middle">$(instance)</text>
    </svg>
      <span style="width: 100%; text-align: center; display:inline-block"><code>Gain</code> Icon</span>
      </div>
    
\`\`\`
# \`Gain\`

## Usage

\`Gain(k)\`

## Parameters: 

| Name         | Description                         | Units  |   Default value |
| ------------ | ----------------------------------- | ------ | --------------- |
| \`k\`         |                          | --  |    |

## Connectors

 * \`u\` - This connector represents a real signal as an input to a component ([\`RealInput\`](@ref))
 * \`y\` - This connector represents a real signal as an output from a component ([\`RealOutput\`](@ref))



## Behavior

\`\`\`@example behavior
using SampleComponents #hide
using ModelingToolkit #hide
@variables k #hide
@named sys = Gain(k=k) #hide
full_equations(sys) #hide
\`\`\`

## Source
\`\`\`dyad
component Gain
  u = RealInput()
  y = RealOutput()
  parameter k::Real
relations
  y = k*u
end
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>

\`\`\`
\`\`\`dyad
component Gain
  u = RealInput()
  y = RealOutput()
  parameter k::Real
relations
  y = k*u
metadata {}
end
\`\`\`
\`\`\`@raw html
</details>
\`\`\`
\`\`\`@raw html

<br></br>

\`\`\`

## Test Cases

No test cases defined.


## Related

- Examples
- Experiments
- Analyses",
  "src/components/Hello.md": "\`\`\`@raw html

      <div style="float: right;width: 20%;max-width: 10vw; margin-left: 20px">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
    <style>
    text {
      transform-origin: center center;
    }
    </style><g transform="translate(0 0) scale(1.0) rotate(0)" transform-origin="center center"><svg xmlns="http://www.w3.org/2000/svg" id="a" width="1000" height="1000" viewBox="0 0 1000 1000"
><defs><style>.b {fill: none;}.b,.c {stroke: #b6b4cf;stroke-linejoin: round;stroke-width: 8px;}.c,.d {  fill: #fff;}.e {fill: #6e6ea1;}.e,.d {stroke-width: 0px;}</style>
  </defs><rect class="d" x="4" y="4" width="992" height="992" /><path class="e" d="M992,8v984H8V8h984M1000,0H0v1000h1000V0h0Z" /><path class="b"
    d="M361.83,226.44c-62.23-3.99-115.91,43.22-119.9,105.45-3.99,62.23,43.22,115.91,105.45,119.9,62.23,3.99,115.91-43.22,119.9-105.45,3.99-62.23-43.22-115.91-105.45-119.9ZM413.76,342.91c-2.09,32.67-30.28,57.46-62.95,55.36-32.67-2.1-57.46-30.28-55.36-62.95,2.09-32.67,30.28-57.46,62.95-55.36,32.67,2.09,57.45,30.28,55.36,62.95Z"
  /><circle class="b" cx="353.85" cy="682.11" r="80.62" /><circle class="b" cx="652.79" cy="644.36" r="52.47" /><polyline class="b" points="410.2 624.82 698.58 340.68 464.78 340.68" /><line class="b" x1="617.63" y1="609.81" x2="432.03" y2="420.13" /><circle class="c" cx="696.98" cy="340.44" r="54.47" />
</svg></g>
    <text x="500" y="1100" transform="rotate(0, 0, 600)" fill="black" font-size="200" font-weight="200" dominant-baseline="central" text-anchor="middle">$(instance)</text>
    </svg>
      <span style="width: 100%; text-align: center; display:inline-block"><code>Hello</code> Icon</span>
      </div>
    
\`\`\`
# \`Hello\`

A simple component model

This component demonstrates several features of the Dyad
modeling language.

## Usage

\`Hello(k=1)\`

## Parameters: 

| Name         | Description                         | Units  |   Default value |
| ------------ | ----------------------------------- | ------ | --------------- |
| \`init\`         |                          | --  |   Initialize.Fixed(x=10) |
| \`k\`         |                          | 1/s  |   1 |



## Variables

| Name         | Description                         | Units  | 
| ------------ | ----------------------------------- | ------ | 
| \`x\`         |                          | m  | 

## Behavior

\`\`\`@example behavior
using SampleComponents #hide
using ModelingToolkit #hide
@variables k #hide
@named sys = Hello(k=k) #hide
full_equations(sys) #hide
\`\`\`

## Source
\`\`\`dyad
# A simple component model
#
# This component demonstrates several features of the Dyad
# modeling language.
component Hello
  structural parameter init::Initialize = Initialize.Fixed(x=10)
  variable x::Position(statePriority=10)
  parameter k::Real(units="1/s") = 1
  constant g::Acceleration = 9.81
relations
  switch init
    case Steady
      initial der(x) = 0
    end
    case Fixed
      initial x = init.x
    end
  end
  der(x) = -k*x
  assert(x>0 or x<20, "x dropped below 0 or rose above 20")
metadata {
  "Dyad": {
    "experiments": {"world": {"stop": 10}},
    "tests": {"case1": {"stop": 10, "expect": {"initial": {"x": 10}}}}
  }
}
end
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>

\`\`\`
\`\`\`dyad
# A simple component model
#
# This component demonstrates several features of the Dyad
# modeling language.
component Hello
  structural parameter init::Initialize = Initialize.Fixed(x=10)
  variable x::Position(statePriority=10)
  parameter k::Real(units="1/s") = 1
  constant g::Acceleration = 9.81
relations
  switch init
    case Steady
      initial der(x) = 0
    end
    case Fixed
      initial x = init.x
    end
  end
  der(x) = -k*x
  assert(x>0 or x<20, "x dropped below 0 or rose above 20")
metadata {
  "Dyad": {
    "experiments": {"world": {"stop": 10}},
    "tests": {"case1": {"stop": 10, "expect": {"initial": {"x": 10}}}}
  }
}
end
\`\`\`
\`\`\`@raw html
</details>
\`\`\`
\`\`\`@raw html

<br></br>

\`\`\`

## Test Cases
\`\`\`@setup tests
using SampleComponents
using ModelingToolkit, OrdinaryDiffEqDefault
using Plots
using CSV, DataFrames

snapshotsdir = joinpath(dirname(dirname(pathof(SampleComponents))), "test", "snapshots")
\`\`\`

### Test Case \`case1\`
\`\`\`@setup tests
@mtkbuild model_case1 = Hello()
u0_case1 = []
prob_case1 = ODEProblem(model_case1, u0_case1, (0, 10))
sol_case1 = solve(prob_case1)
\`\`\`

## Related

- Examples
- Experiments
- Analyses
- Tests
  - [\`HelloTest\`](#)",
  "src/components/Multi.md": "\`\`\`@raw html

      <div style="float: right;width: 20%;max-width: 10vw; margin-left: 20px">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
    <style>
    text {
      transform-origin: center center;
    }
    </style><g transform="translate(0 0) scale(1.0) rotate(0)" transform-origin="center center"><svg xmlns="http://www.w3.org/2000/svg" id="a" width="1000" height="1000" viewBox="0 0 1000 1000"
><defs><style>.b {fill: none;}.b,.c {stroke: #b6b4cf;stroke-linejoin: round;stroke-width: 8px;}.c,.d {  fill: #fff;}.e {fill: #6e6ea1;}.e,.d {stroke-width: 0px;}</style>
  </defs><rect class="d" x="4" y="4" width="992" height="992" /><path class="e" d="M992,8v984H8V8h984M1000,0H0v1000h1000V0h0Z" /><path class="b"
    d="M361.83,226.44c-62.23-3.99-115.91,43.22-119.9,105.45-3.99,62.23,43.22,115.91,105.45,119.9,62.23,3.99,115.91-43.22,119.9-105.45,3.99-62.23-43.22-115.91-105.45-119.9ZM413.76,342.91c-2.09,32.67-30.28,57.46-62.95,55.36-32.67-2.1-57.46-30.28-55.36-62.95,2.09-32.67,30.28-57.46,62.95-55.36,32.67,2.09,57.45,30.28,55.36,62.95Z"
  /><circle class="b" cx="353.85" cy="682.11" r="80.62" /><circle class="b" cx="652.79" cy="644.36" r="52.47" /><polyline class="b" points="410.2 624.82 698.58 340.68 464.78 340.68" /><line class="b" x1="617.63" y1="609.81" x2="432.03" y2="420.13" /><circle class="c" cx="696.98" cy="340.44" r="54.47" />
</svg></g>
    <text x="500" y="1100" transform="rotate(0, 0, 600)" fill="black" font-size="200" font-weight="200" dominant-baseline="central" text-anchor="middle">$(instance)</text>
    </svg>
      <span style="width: 100%; text-align: center; display:inline-block"><code>Multi</code> Icon</span>
      </div>
    
\`\`\`
# \`Multi\`

[\`Base1\`](///types/Base1)
[\`Base2\`](///types/Base2)

## Usage

\`Multi(x=10)\`

## Parameters: 

| Name         | Description                         | Units  |   Default value |
| ------------ | ----------------------------------- | ------ | --------------- |
| \`x\`         |                          | K  |   10 |



## Variables

| Name         | Description                         | Units  | 
| ------------ | ----------------------------------- | ------ | 
| \`y\`         |                          | K  | 

## Behavior

\`\`\`@example behavior
using SampleComponents #hide
using ModelingToolkit #hide
@variables x #hide
@named sys = Multi(x=x) #hide
full_equations(sys) #hide
\`\`\`

## Source
\`\`\`dyad
component Multi
  extends Base1(x=10)
  extends Base2
relations
  der(y) = (y-x)
end
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>

\`\`\`
\`\`\`dyad
component Multi
  parameter x::Temperature
  variable y::Temperature
relations
  der(y) = (y-x)
metadata {}
end
\`\`\`
\`\`\`@raw html
</details>
\`\`\`
\`\`\`@raw html

<br></br>

\`\`\`

## Test Cases

No test cases defined.


## Related

- Examples
- Experiments
- Analyses",
  "src/components/PlantModel.md": "\`\`\`@raw html

      <div style="float: right;width: 20%;max-width: 10vw; margin-left: 20px">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
    <style>
    text {
      transform-origin: center center;
    }
    </style><g transform="translate(0 0) scale(1.0) rotate(0)" transform-origin="center center"><svg xmlns="http://www.w3.org/2000/svg" id="a" width="1000" height="1000" viewBox="0 0 1000 1000"
><defs><style>.b {fill: none;}.b,.c {stroke: #b6b4cf;stroke-linejoin: round;stroke-width: 8px;}.c,.d {  fill: #fff;}.e {fill: #6e6ea1;}.e,.d {stroke-width: 0px;}</style>
  </defs><rect class="d" x="4" y="4" width="992" height="992" /><path class="e" d="M992,8v984H8V8h984M1000,0H0v1000h1000V0h0Z" /><path class="b"
    d="M361.83,226.44c-62.23-3.99-115.91,43.22-119.9,105.45-3.99,62.23,43.22,115.91,105.45,119.9,62.23,3.99,115.91-43.22,119.9-105.45,3.99-62.23-43.22-115.91-105.45-119.9ZM413.76,342.91c-2.09,32.67-30.28,57.46-62.95,55.36-32.67-2.1-57.46-30.28-55.36-62.95,2.09-32.67,30.28-57.46,62.95-55.36,32.67,2.09,57.45,30.28,55.36,62.95Z"
  /><circle class="b" cx="353.85" cy="682.11" r="80.62" /><circle class="b" cx="652.79" cy="644.36" r="52.47" /><polyline class="b" points="410.2 624.82 698.58 340.68 464.78 340.68" /><line class="b" x1="617.63" y1="609.81" x2="432.03" y2="420.13" /><circle class="c" cx="696.98" cy="340.44" r="54.47" />
</svg></g>
    <text x="500" y="1100" transform="rotate(0, 0, 600)" fill="black" font-size="200" font-weight="200" dominant-baseline="central" text-anchor="middle">$(instance)</text>
    </svg>
      <span style="width: 100%; text-align: center; display:inline-block"><code>PlantModel</code> Icon</span>
      </div>
    
\`\`\`
# \`PlantModel\`

## Usage

\`PlantModel()\`



## Connectors

 * \`u\` - This connector represents a real signal as an input to a component ([\`RealInput\`](@ref))
 * \`y\` - This connector represents a real signal as an output from a component ([\`RealOutput\`](@ref))



## Behavior

\`\`\`@example behavior
using SampleComponents #hide
using ModelingToolkit #hide
@named sys = PlantModel() #hide
full_equations(sys) #hide
\`\`\`

## Source
\`\`\`dyad
component PlantModel
  u = RealInput()
  y = RealOutput()
  gain = Gain(k=10)
relations
  connect(u, gain.u)
  connect(gain.y, y)
  u_v: analysis_point(u, gain.u)
end
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>

\`\`\`
\`\`\`dyad
component PlantModel
  u = RealInput()
  y = RealOutput()
  gain = Gain(k=10)
relations
  connect(u, gain.u)
  connect(gain.y, y)
  u_v: analysis_point(u, gain.u)
metadata {}
end
\`\`\`
\`\`\`@raw html
</details>
\`\`\`
\`\`\`@raw html

<br></br>

\`\`\`

## Test Cases

No test cases defined.


## Related

- Examples
- Experiments
- Analyses",
  "src/index.md": "# SampleComponents

This is the documentation for the \`SampleComponents\` library.  Here you will
find the documentation for the various definitions contained in \`SampleComponents\`.

Note that this documentation is automatically generated primarily from the doc strings and metadata associated
with those definitions.

## Types

- [\`Base1\`](types/Base1.md)
- [\`Base2\`](types/Base2.md)
- [\`Initialize\`](types/Initialize.md) - Enumeration to describe initialization scenarios
## Components

- [\`Gain\`](components/Gain.md)
- [\`Hello\`](components/Hello.md) - A simple component model
- [\`Multi\`](components/Multi.md)
- [\`PlantModel\`](components/PlantModel.md)
## Tests

- [\`HelloTest\`](tests/HelloTest.md)",
  "src/tests/HelloTest.md": "\`\`\`@raw html

      <div style="float: right;width: 20%;max-width: 10vw; margin-left: 20px">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
    <style>
    text {
      transform-origin: center center;
    }
    </style><g transform="translate(0 0) scale(1.0) rotate(0)" transform-origin="center center"><svg xmlns="http://www.w3.org/2000/svg" id="a" width="1000" height="1000" viewBox="0 0 1000 1000"
><defs><style>.b {fill: none;}.b,.c {stroke: #b6b4cf;stroke-linejoin: round;stroke-width: 8px;}.c,.d {  fill: #fff;}.e {fill: #6e6ea1;}.e,.d {stroke-width: 0px;}</style>
  </defs><rect class="d" x="4" y="4" width="992" height="992" /><path class="e" d="M992,8v984H8V8h984M1000,0H0v1000h1000V0h0Z" /><path class="b"
    d="M361.83,226.44c-62.23-3.99-115.91,43.22-119.9,105.45-3.99,62.23,43.22,115.91,105.45,119.9,62.23,3.99,115.91-43.22,119.9-105.45,3.99-62.23-43.22-115.91-105.45-119.9ZM413.76,342.91c-2.09,32.67-30.28,57.46-62.95,55.36-32.67-2.1-57.46-30.28-55.36-62.95,2.09-32.67,30.28-57.46,62.95-55.36,32.67,2.09,57.45,30.28,55.36,62.95Z"
  /><circle class="b" cx="353.85" cy="682.11" r="80.62" /><circle class="b" cx="652.79" cy="644.36" r="52.47" /><polyline class="b" points="410.2 624.82 698.58 340.68 464.78 340.68" /><line class="b" x1="617.63" y1="609.81" x2="432.03" y2="420.13" /><circle class="c" cx="696.98" cy="340.44" r="54.47" />
</svg></g>
    <text x="500" y="1100" transform="rotate(0, 0, 600)" fill="black" font-size="200" font-weight="200" dominant-baseline="central" text-anchor="middle">$(instance)</text>
    </svg>
      <span style="width: 100%; text-align: center; display:inline-block"><code>HelloTest</code> Icon</span>
      </div>
    
\`\`\`
# \`HelloTest\`

## Usage

\`HelloTest()\`







## Behavior

\`\`\`@example behavior
using SampleComponents #hide
using ModelingToolkit #hide
@named sys = HelloTest() #hide
full_equations(sys) #hide
\`\`\`

## Source
\`\`\`dyad
test component HelloTest
  hello = Hello()
metadata {
  "Dyad": {
    "tests": {
      "case1": {
        "stop": 5,
        "expect": {"signals": ["hello.x"], "final": {"hello.x": 6}, "initial": {"hello.x": 10}}
      }
    }
  }
}
end
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>

\`\`\`
\`\`\`dyad
test component HelloTest
  hello = Hello()
metadata {
  "Dyad": {
    "tests": {
      "case1": {
        "stop": 5,
        "expect": {"signals": ["hello.x"], "final": {"hello.x": 6}, "initial": {"hello.x": 10}}
      }
    }
  }
}
end
\`\`\`
\`\`\`@raw html
</details>
\`\`\`
\`\`\`@raw html

<br></br>

\`\`\`

## Test Cases
\`\`\`@setup tests
using SampleComponents
using ModelingToolkit, OrdinaryDiffEqDefault
using Plots
using CSV, DataFrames

snapshotsdir = joinpath(dirname(dirname(pathof(SampleComponents))), "test", "snapshots")
\`\`\`

### Test Case \`case1\`
\`\`\`@setup tests
@mtkbuild model_case1 = HelloTest()
u0_case1 = []
prob_case1 = ODEProblem(model_case1, u0_case1, (0, 5))
sol_case1 = solve(prob_case1)
\`\`\`
\`\`\`@setup tests
df_case1 = DataFrame(:t => sol_case1[:t], :actual => sol_case1[model_case1.hello.x])
dfr_case1 = try CSV.read(joinpath(snapshotsdir, "HelloTest_case1_sig0.ref"), DataFrame); catch e; nothing; end
plt = plot(sol_case1, idxs=[model_case1.hello.x], width=2, label="Actual value of hello.x")
if !isnothing(dfr_case1)
  scatter!(plt, dfr_case1.t, dfr_case1.expected, mc=:red, ms=3, label="Expected value of hello.x")
end
scatter!(plt, [df_case1.t[1]], [10], label="Initial Condition for \`hello.x\`")
scatter!(plt, [df_case1.t[end]], [6], label="Final Condition for \`hello.x\`")

\`\`\`
\`\`\`@example tests
plt
\`\`\`


## Related

- Examples
- Experiments
- Analyses
- Tests
  - [\`Hello\`](#)",
  "src/types/Base1.md": "\`\`\`@raw html

      <div style="float: right;width: 20%;max-width: 10vw; margin-left: 20px">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
    <style>
    text {
      transform-origin: center center;
    }
    </style><g transform="translate(0 0) scale(1.0) rotate(0)" transform-origin="center center"><svg xmlns="http://www.w3.org/2000/svg" id="a" width="1000" height="1000" viewBox="0 0 1000 1000"
><defs><style>.b {fill: none;}.b,.c {stroke: #b6b4cf;stroke-linejoin: round;stroke-width: 8px;}.c,.d {  fill: #fff;}.e {fill: #6e6ea1;}.e,.d {stroke-width: 0px;}</style>
  </defs><rect class="d" x="4" y="4" width="992" height="992" /><path class="e" d="M992,8v984H8V8h984M1000,0H0v1000h1000V0h0Z" /><path class="b"
    d="M361.83,226.44c-62.23-3.99-115.91,43.22-119.9,105.45-3.99,62.23,43.22,115.91,105.45,119.9,62.23,3.99,115.91-43.22,119.9-105.45,3.99-62.23-43.22-115.91-105.45-119.9ZM413.76,342.91c-2.09,32.67-30.28,57.46-62.95,55.36-32.67-2.1-57.46-30.28-55.36-62.95,2.09-32.67,30.28-57.46,62.95-55.36,32.67,2.09,57.45,30.28,55.36,62.95Z"
  /><circle class="b" cx="353.85" cy="682.11" r="80.62" /><circle class="b" cx="652.79" cy="644.36" r="52.47" /><polyline class="b" points="410.2 624.82 698.58 340.68 464.78 340.68" /><line class="b" x1="617.63" y1="609.81" x2="432.03" y2="420.13" /><circle class="c" cx="696.98" cy="340.44" r="54.47" />
</svg></g>
    <text x="500" y="1100" transform="rotate(0, 0, 600)" fill="black" font-size="200" font-weight="200" dominant-baseline="central" text-anchor="middle">$(instance)</text>
    </svg>
      <span style="width: 100%; text-align: center; display:inline-block"><code>Base1</code> Icon</span>
      </div>
    
\`\`\`
# \`Base1\`

## Usage

\`Base1(x)\`

## Parameters: 

| Name         | Description                         | Units  |   Default value |
| ------------ | ----------------------------------- | ------ | --------------- |
| \`x\`         |                          | K  |    |





## Source
\`\`\`dyad
partial component Base1
  parameter x::Temperature
end
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>

\`\`\`
\`\`\`dyad
partial component Base1
  parameter x::Temperature
metadata {}
end
\`\`\`
\`\`\`@raw html
</details>
\`\`\`
\`\`\`@raw html

<br></br>

\`\`\`

## Test Cases

No test cases defined.


## Related

- Examples
- Experiments
- Analyses",
  "src/types/Base2.md": "\`\`\`@raw html

      <div style="float: right;width: 20%;max-width: 10vw; margin-left: 20px">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
    <style>
    text {
      transform-origin: center center;
    }
    </style><g transform="translate(0 0) scale(1.0) rotate(0)" transform-origin="center center"><svg xmlns="http://www.w3.org/2000/svg" id="a" width="1000" height="1000" viewBox="0 0 1000 1000"
><defs><style>.b {fill: none;}.b,.c {stroke: #b6b4cf;stroke-linejoin: round;stroke-width: 8px;}.c,.d {  fill: #fff;}.e {fill: #6e6ea1;}.e,.d {stroke-width: 0px;}</style>
  </defs><rect class="d" x="4" y="4" width="992" height="992" /><path class="e" d="M992,8v984H8V8h984M1000,0H0v1000h1000V0h0Z" /><path class="b"
    d="M361.83,226.44c-62.23-3.99-115.91,43.22-119.9,105.45-3.99,62.23,43.22,115.91,105.45,119.9,62.23,3.99,115.91-43.22,119.9-105.45,3.99-62.23-43.22-115.91-105.45-119.9ZM413.76,342.91c-2.09,32.67-30.28,57.46-62.95,55.36-32.67-2.1-57.46-30.28-55.36-62.95,2.09-32.67,30.28-57.46,62.95-55.36,32.67,2.09,57.45,30.28,55.36,62.95Z"
  /><circle class="b" cx="353.85" cy="682.11" r="80.62" /><circle class="b" cx="652.79" cy="644.36" r="52.47" /><polyline class="b" points="410.2 624.82 698.58 340.68 464.78 340.68" /><line class="b" x1="617.63" y1="609.81" x2="432.03" y2="420.13" /><circle class="c" cx="696.98" cy="340.44" r="54.47" />
</svg></g>
    <text x="500" y="1100" transform="rotate(0, 0, 600)" fill="black" font-size="200" font-weight="200" dominant-baseline="central" text-anchor="middle">$(instance)</text>
    </svg>
      <span style="width: 100%; text-align: center; display:inline-block"><code>Base2</code> Icon</span>
      </div>
    
\`\`\`
# \`Base2\`

## Usage

\`Base2()\`





## Variables

| Name         | Description                         | Units  | 
| ------------ | ----------------------------------- | ------ | 
| \`y\`         |                          | K  | 

## Source
\`\`\`dyad
partial component Base2
  variable y::Temperature
end
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>

\`\`\`
\`\`\`dyad
partial component Base2
  variable y::Temperature
metadata {}
end
\`\`\`
\`\`\`@raw html
</details>
\`\`\`
\`\`\`@raw html

<br></br>

\`\`\`

## Test Cases

No test cases defined.


## Related

- Examples
- Experiments
- Analyses",
}
`;

exports[`Test documenter functionality Test Documenter on freshly created library 1`] = `
{
  ".gitignore": "/Manifest.toml
/build",
  "Project.toml": "[deps]
Documenter = "e30172f5-a6a5-5a46-863b-614d45cd2de4"
CSV = "336ed68f-0bac-5ca0-87d4-7b16caf5d00b"
DataFrames = "a93c6f00-e57d-5684-b7b6-d8193f3e46c0"
DyadEcosystemDependencies = "7bc808db-8006-421e-b546-062440d520b7"
Latexify = "23fbe1c1-3f47-55db-b15f-69d7ec21a316"
ModelingToolkit = "961ee093-0014-501f-94e3-6117800e7a78"
OrdinaryDiffEqDefault = "50262376-6c5a-4cf5-baba-aaf4f84d72d7"
Plots = "91a5bcdd-55d7-5caf-9e0b-520d859cae80"

[sources]
Basic = { path = ".." }",
  "README.md": "# Basic
  
## Getting Started
  
This library was created with the Dyad Studio VS Code extension.  Your Dyad
models should be placed in the \`dyad\` directory and the files should be
given the \`.dyad\` extension.  Several such files have already been placed
in there to get you started.  The Dyad compiler will compile the Dyad models
into Julia code and place it in the \`generated\` folder.  Do not edit the
files in that directory or remove/rename that directory.

A complete tutorial on using Dyad Studio can be found [here](#).  But you
can run the provided example models by doing the following:

1. Run \`Julia: Start REPL\` from the command palette.

2. Type \`]\`.  This will take you to the package manager prompt.

3. At the \`pkg>\` prompt, type \`instantiate\` (this downloads all the Julia libraries
   you will need, and the very first time you do it it might take a while).

4. From the same \`pkg>\` prompt, type \`test\`.  This will test to make sure the models
   are working as expected.  It may also take some time but you should eventually
   see a result that indicates 2 of 2 tests passed.

5. Use the \`Backspace\`/\`Delete\` key to return to the normal Julia REPL, it should
   look like this: \`julia>\`.

6. Type \`using Basic\`.  This will load your model library.

7. Type \`World()\` to run a simulation of the \`Hello\` model.  The first time you run it,
   this might take a few seconds, but each successive time you run it, it should be very fast.

8. To see simulation results type \`using Plots\` (and answer \`y\` if asked if you want
   to add it as a dependency).

9. To plot results of the \`World\` simulation, simply type \`plot(World())\`.

10. You can plot variations on that simulation using keyword arguments.  For example,
    try \`plot(World(stop=20, k=4))\`.
",
  "make.jl": "using Documenter
using Basic

include("pages.jl")

makedocs(
    modules=[Basic],
    sitename="Basic",
    remotes=nothing,
    warnonly=[:cross_references, :example_block, :missing_docs],
    pages=pages
)",
  "pages.jl": "pages = [
   "Basic" => "index.md",
   "Connectors" => Any[],
   "Components" => Any["components/Hello.md"],
   "Analyses" => Any["analyses/World.md"],
   "Examples" => Any[],
   "Experiments" => Any[],
   "Tests" => Any[],
]",
  "src/analyses/World.md": "# \`World\`

This component extends from [\`TransientAnalysis\`](#)

## Usage

\`World(...)\`

## Source
\`\`\`dyad
analysis World
  extends TransientAnalysis(stop=10)
  model = Hello(T_inf=T_inf, h=h)
  parameter T_inf::Temperature = 300
  parameter h::CoefficientOfHeatTransfer = 0.7
end
\`\`\`


## Related

- Examples",
  "src/components/Hello.md": "\`\`\`@raw html

      <div style="float: right;width: 20%;max-width: 10vw; margin-left: 20px">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1000 1000"
    overflow="visible" shape-rendering="geometricPrecision" text-rendering="geometricPrecision">
    <style>
    text {
      transform-origin: center center;
    }
    </style><g transform="translate(0 0) scale(1.0) rotate(0)" transform-origin="center center"><svg xmlns="http://www.w3.org/2000/svg" id="a" width="1000" height="1000" viewBox="0 0 1000 1000"
><defs><style>.b {fill: none;}.b,.c {stroke: #b6b4cf;stroke-linejoin: round;stroke-width: 8px;}.c,.d {  fill: #fff;}.e {fill: #6e6ea1;}.e,.d {stroke-width: 0px;}</style>
  </defs><rect class="d" x="4" y="4" width="992" height="992" /><path class="e" d="M992,8v984H8V8h984M1000,0H0v1000h1000V0h0Z" /><path class="b"
    d="M361.83,226.44c-62.23-3.99-115.91,43.22-119.9,105.45-3.99,62.23,43.22,115.91,105.45,119.9,62.23,3.99,115.91-43.22,119.9-105.45,3.99-62.23-43.22-115.91-105.45-119.9ZM413.76,342.91c-2.09,32.67-30.28,57.46-62.95,55.36-32.67-2.1-57.46-30.28-55.36-62.95,2.09-32.67,30.28-57.46,62.95-55.36,32.67,2.09,57.45,30.28,55.36,62.95Z"
  /><circle class="b" cx="353.85" cy="682.11" r="80.62" /><circle class="b" cx="652.79" cy="644.36" r="52.47" /><polyline class="b" points="410.2 624.82 698.58 340.68 464.78 340.68" /><line class="b" x1="617.63" y1="609.81" x2="432.03" y2="420.13" /><circle class="c" cx="696.98" cy="340.44" r="54.47" />
</svg></g>
    <text x="500" y="1100" transform="rotate(0, 0, 600)" fill="black" font-size="200" font-weight="200" dominant-baseline="central" text-anchor="middle">$(instance)</text>
    </svg>
      <span style="width: 100%; text-align: center; display:inline-block"><code>Hello</code> Icon</span>
      </div>
    
\`\`\`
# \`Hello\`

A simple lumped thermal model

## Usage

\`Hello(T_inf=300, T0=320, h=0.7, A=1.0, m=0.1, c_p=1.2)\`

## Parameters: 

| Name         | Description                         | Units  |   Default value |
| ------------ | ----------------------------------- | ------ | --------------- |
| \`T_inf\`         | Ambient temperature                         | K  |   300 |
| \`T0\`         | Initial temperature                         | K  |   320 |
| \`h\`         | Convective heat transfer coefficient                         | W/(m2.K)  |   0.7 |
| \`A\`         | Surface area                         | m2  |   1 |
| \`m\`         | Mass of thermal capacitance                         | kg  |   0.1 |
| \`c_p\`         | Specific Heat                         | J/(kg.K)  |   1.2 |



## Variables

| Name         | Description                         | Units  | 
| ------------ | ----------------------------------- | ------ | 
| \`T\`         |                          | K  | 

## Behavior

\`\`\`@example behavior
using Basic #hide
using ModelingToolkit #hide
@variables T_inf #hide
@variables T0 #hide
@variables h #hide
@variables A #hide
@variables m #hide
@variables c_p #hide
@named sys = Hello(T_inf=T_inf, T0=T0, h=h, A=A, m=m, c_p=c_p) #hide
full_equations(sys) #hide
\`\`\`

## Source
\`\`\`dyad
# A simple lumped thermal model
component Hello
  # Ambient temperature
  parameter T_inf::Temperature = 300
  # Initial temperature
  parameter T0::Temperature = 320
  # Convective heat transfer coefficient
  parameter h::CoefficientOfHeatTransfer = 0.7
  # Surface area
  parameter A::Area = 1.0
  # Mass of thermal capacitance
  parameter m::Mass = 0.1
  # Specific Heat
  parameter c_p::SpecificHeatCapacity = 1.2
  variable T::Temperature
relations
  # Specify initial conditions
  initial T = T0
  # Newton's law of cooling/heating
  m*c_p*der(T) = h*A*(T_inf-T)
metadata {"Dyad": {"tests": {"case1": {"stop": 10, "expect": {"initial": {"T": 320}}}}}}
end
\`\`\`

\`\`\`@raw html

<details>
<summary>Flattened Source</summary>

\`\`\`
\`\`\`dyad
# A simple lumped thermal model
component Hello
  # Ambient temperature
  parameter T_inf::Temperature = 300
  # Initial temperature
  parameter T0::Temperature = 320
  # Convective heat transfer coefficient
  parameter h::CoefficientOfHeatTransfer = 0.7
  # Surface area
  parameter A::Area = 1.0
  # Mass of thermal capacitance
  parameter m::Mass = 0.1
  # Specific Heat
  parameter c_p::SpecificHeatCapacity = 1.2
  variable T::Temperature
relations
  # Specify initial conditions
  initial T = T0
  # Newton's law of cooling/heating
  m*c_p*der(T) = h*A*(T_inf-T)
metadata {"Dyad": {"tests": {"case1": {"stop": 10, "expect": {"initial": {"T": 320}}}}}}
end
\`\`\`
\`\`\`@raw html
</details>
\`\`\`
\`\`\`@raw html

<br></br>

\`\`\`

## Test Cases
\`\`\`@setup tests
using Basic
using ModelingToolkit, OrdinaryDiffEqDefault
using Plots
using CSV, DataFrames

snapshotsdir = joinpath(dirname(dirname(pathof(Basic))), "test", "snapshots")
\`\`\`

### Test Case \`case1\`
\`\`\`@setup tests
@mtkbuild model_case1 = Hello()
u0_case1 = []
prob_case1 = ODEProblem(model_case1, u0_case1, (0, 10))
sol_case1 = solve(prob_case1)
\`\`\`

## Related

- Examples
- Experiments
- Analyses",
  "src/index.md": "# Basic

This is the documentation for the \`Basic\` library.  Here you will
find the documentation for the various definitions contained in \`Basic\`.

Note that this documentation is automatically generated primarily from the doc strings and metadata associated
with those definitions.

## Components

- [\`Hello\`](components/Hello.md) - A simple lumped thermal model
## Analyses

- [\`World\`](analyses/World.md)",
}
`;
